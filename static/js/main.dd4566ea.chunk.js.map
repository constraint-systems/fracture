{"version":3,"sources":["constants.js","mat4.js","gl_utils.js","State.js","Keyboard.js","Mouse.js","Examples.js","Sidebar.js","shaders.js","App.js","reportWebVitals.js","index.js"],"names":["mobile","multiply","out","a","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","lookAt","eye","center","up","x0","x1","x2","y0","y1","y2","z0","z1","z2","len","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","Math","abs","identity","sqrt","invert","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","multiplyPoint","matrix","point","c0r0","c1r0","c2r0","c3r0","c0r1","c1r1","c2r1","c3r1","c0r2","c1r2","c2r2","c3r2","c0r3","c1r3","c2r3","c3r3","x","y","z","w","setProjectionMatrices","scene","viewports","length","h","fovy","aspect","near","far","f","tan","nf","perspective","projection","PI","inverse_projection","getLookAt","camera","getWorldFromPx","px","camera_dist","world_z","projected","getProjectionZ","raw","point_world","castRay","index","mouse","viewport","ndz","view_projections","getNormalizedZ","clips","mouse_position","getClipsFromMouse","device_coordinates","inverse_view_projections","atom","key","default","aActive","a_Mode","aMode","selector","get","set","name","aSize","aGridSize","sGridSize","diff","dx","dy","slice","wlimit","max","hlimit","aCols","aRows","aBarHeight","aSidebarWidth","aCameras","afCamera","atomFamily","aImageMap","aImages","sAddImage","img","imgs","constrainActive","active","cols","rows","minmax","val","min","sActiveSelector","new_value","sSelectAll","sMoveActiveSelector","sResizeActiveSelector","constrainResize","sViewports","vw","floor","vh","Array","map","_","i","c","r","sPanCamera","cameras","id","new_camera","ndx","ndy","sActiveEscape","sResetZoom","sAllCameras","expandedCameras","push","sMosaicCamera","gw","gh","undefined","inverted","vx","vy","dify","sShakeCamera","nd","random","sPushCameras","c1","c2","sPullCameras","sShatterCamera","sSetImageMap","images","new_map","zoomLimit","new_zoom","aZoomMode","aShowCameras","aShowGrid","aShowPreview","aCopy","sCopy","imageMap","copy","obj","sPaste","newMap","copyIndex","sZoomCamera","sign","mult","zoomMode","xp","yp","active_size","zoom","sAddCol","insertCol","lastCol","mapCols","n","copyCol","splice","recombinedMap","cameraCols","copyCameras","newCol","getID","copyID","cloneCamera","recombinedCameras","sRemCol","firstCol","sAddRow","insertRow","lastRow","mapRows","copyRow","cameraRows","newRow","sRemRow","firstRow","Keyboard","scene_ref","input_ref","useRecoilState","mode","setMode","moveActive","useSetRecoilState","resizeActive","setZoomMode","showCameras","setShowCameras","showGrid","setShowGrid","showPreview","setShowPreview","zoomCamera","panCamera","mosaicCamera","shatterCamera","shakeCamera","pushCameras","pullCameras","selectAll","setGridSize","addCol","remCol","addRow","remRow","resetZoom","activeEscape","addImage","setImageMap","km_ref","useRef","undo","useUndo","redo","useRedo","paste","check","useRecoilCallback","logState","snapshot","log","getLoadable","contents","console","JSON","stringify","useEffect","km","current","input","downHandler","e","press","toLowerCase","ctrlKey","includes","preventDefault","j","k","l","arrowleft","arrowright","arrowup","arrowdown","domLoadImage","bind","v","m","u","d","p","g","capture","enter","scroll_diff","window","scrollBy","pressed","upHandler","addEventListener","removeEventListener","Mouse","canvas_ref","scroll_ref","mouse_ref","down","drag_start","scrollCheck","useRecoilValue","setActive","useBatching","startBatch","endBatch","getViewportFromMouse","mouse_raw","mx","my","col","row","canvas","mouseMove","clientX","clientY","scroll","rect","target","getBoundingClientRect","left","top","ax","ay","aw","ah","ax2","ay2","nx","ny","nx2","ny2","mouseDown","setPointerCapture","pointerId","mcol","mrow","round","mouseUp","releasePointerCapture","mouseWheel","deltaY","onDrop","stopPropagation","file","dataTransfer","files","src","path","URL","createObjectURL","loadImage","onDrag","dropEffect","onPaste","clipboardData","items","item","type","indexOf","getAsFile","passive","Examples","KeyButton","text","click","col_diff","row_diff","new_cols","Heading","props","className","style","marginBottom","children","toUpperCase","Info","Tip","color","HSpacer","width","height","Sidebar","sidebarWidth","bypass_ref","sidebarScrollRef","resize","reg_style","position","right","overflow","background","userSelect","scrollTo","ref","bottom","padding","ToggleKeyButton","keyname","compare","TwoKeyButton","keyname1","keyname2","KeyButtonOnce","disabled","href","$button_ref","intervalCheck","time","$button","runInterval","setInterval","pointerDown","clearInterval","setTimeout","pointerUp","clearTimeout","role","onClick","interval","generateQuadPositions","initImageQuad","$img","regl","frag","vert","attributes","uv","uniforms","texture","view_projection","prop","count","id_counter","Root","views","image_map","image_draws","trackingByDefault","display","accept","SizeObserver","marginLeft","marginTop","Canvas","Layers","Actions","Fragment","ShowCameras","ShowGrid","ShowActive","CanvasResize","setSize","barHeight","setNewSize","innerWidth","innerHeight","pointerEvents","touchEvents","borderBottom","borderRight","borderTop","borderLeft","camera_ids","CameraRead","crop_width","crop_height","bl","fontSize","paddingLeft","paddingRight","Number","EPSILON","join","presetImageMap","callback","Image","onload","pixel","place","drawImage","handleChange","this","value","dispatchEvent","MouseEvent","bubbles","cancelable","view","gridSize","allCameras","rawSetImageMap","setCameras","regl_ref","size","useState","loaded","setLoaded","useIsTrackingHistory","setIsTrackingHistory","getIsTrackingHistory","REGL","setScene","gl","getContext","enable","SCISSOR_TEST","frame","tick","clear","vy_offset","scissor","draw","save_canvas","document","createElement","link","toBlob","blob","setAttribute","Date","getTime","touchAction","CanvasCamera","rawCameras","invertedCameras","setViewMatrices","setViewMatrix","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"0OAGWA,EAAS,IC+Bb,SAASC,EAASC,EAAKC,EAAGC,GAC/B,IAAIC,EAAMF,EAAE,GACVG,EAAMH,EAAE,GACRI,EAAMJ,EAAE,GACRK,EAAML,EAAE,GACRM,EAAMN,EAAE,GACRO,EAAMP,EAAE,GACRQ,EAAMR,EAAE,GACRS,EAAMT,EAAE,GACRU,EAAMV,EAAE,GACRW,EAAMX,EAAE,GACRY,EAAMZ,EAAE,IACRa,EAAMb,EAAE,IACRc,EAAMd,EAAE,IACRe,EAAMf,EAAE,IACRgB,EAAMhB,EAAE,IACRiB,EAAMjB,EAAE,IAGNkB,EAAKjB,EAAE,GACTkB,EAAKlB,EAAE,GACPmB,EAAKnB,EAAE,GACPoB,EAAKpB,EAAE,GAgCT,OA/BAF,EAAI,GAAKmB,EAAKhB,EAAMiB,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAC/Cf,EAAI,GAAKmB,EAAKf,EAAMgB,EAAKZ,EAAMa,EAAKT,EAAMU,EAAKN,EAC/ChB,EAAI,GAAKmB,EAAKd,EAAMe,EAAKX,EAAMY,EAAKR,EAAMS,EAAKL,EAC/CjB,EAAI,GAAKmB,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAAMQ,EAAKJ,EAE/CC,EAAKjB,EAAE,GACPkB,EAAKlB,EAAE,GACPmB,EAAKnB,EAAE,GACPoB,EAAKpB,EAAE,GACPF,EAAI,GAAKmB,EAAKhB,EAAMiB,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAC/Cf,EAAI,GAAKmB,EAAKf,EAAMgB,EAAKZ,EAAMa,EAAKT,EAAMU,EAAKN,EAC/ChB,EAAI,GAAKmB,EAAKd,EAAMe,EAAKX,EAAMY,EAAKR,EAAMS,EAAKL,EAC/CjB,EAAI,GAAKmB,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAAMQ,EAAKJ,EAE/CC,EAAKjB,EAAE,GACPkB,EAAKlB,EAAE,GACPmB,EAAKnB,EAAE,IACPoB,EAAKpB,EAAE,IACPF,EAAI,GAAKmB,EAAKhB,EAAMiB,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAC/Cf,EAAI,GAAKmB,EAAKf,EAAMgB,EAAKZ,EAAMa,EAAKT,EAAMU,EAAKN,EAC/ChB,EAAI,IAAMmB,EAAKd,EAAMe,EAAKX,EAAMY,EAAKR,EAAMS,EAAKL,EAChDjB,EAAI,IAAMmB,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAAMQ,EAAKJ,EAEhDC,EAAKjB,EAAE,IACPkB,EAAKlB,EAAE,IACPmB,EAAKnB,EAAE,IACPoB,EAAKpB,EAAE,IACPF,EAAI,IAAMmB,EAAKhB,EAAMiB,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAChDf,EAAI,IAAMmB,EAAKf,EAAMgB,EAAKZ,EAAMa,EAAKT,EAAMU,EAAKN,EAChDhB,EAAI,IAAMmB,EAAKd,EAAMe,EAAKX,EAAMY,EAAKR,EAAMS,EAAKL,EAChDjB,EAAI,IAAMmB,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAAMQ,EAAKJ,EACzClB,EAYF,SAASuB,EAAOvB,EAAKwB,EAAKC,EAAQC,GACvC,IAAIC,EACFC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAAOb,EAAI,GACXc,EAAOd,EAAI,GACXe,EAAOf,EAAI,GACXgB,EAAMd,EAAG,GACTe,EAAMf,EAAG,GACTgB,EAAMhB,EAAG,GACTiB,EAAUlB,EAAO,GACjBmB,EAAUnB,EAAO,GACjBoB,EAAUpB,EAAO,GAEnB,OACEqB,KAAKC,IAAIV,EAAOM,GAAW,MAC3BG,KAAKC,IAAIT,EAAOM,GAAW,MAC3BE,KAAKC,IAAIR,EAAOM,GAAW,KAtHxB,SAAkB7C,GAiBvB,OAhBAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAuGEgD,CAAShD,IAGlBiC,EAAKI,EAAOM,EACZT,EAAKI,EAAOM,EACZT,EAAKI,EAAOM,EAOZlB,EAAKc,GAFLN,GAHAC,EAAM,EAAIU,KAAKG,KAAKhB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,IAK7BO,GAHhBR,GAAME,GAINR,EAAKc,GALLT,GAAMG,GAKUI,EAAML,EACtBN,EAAKW,EAAMN,EAAKO,EAAMR,GACtBG,EAAMU,KAAKG,KAAKtB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,KAOvCF,GADAS,EAAM,EAAIA,EAEVR,GAAMQ,EACNP,GAAMO,IAPNT,EAAK,EACLC,EAAK,EACLC,EAAK,GAQPC,EAAKI,EAAKL,EAAKM,EAAKP,EACpBG,EAAKI,EAAKR,EAAKM,EAAKJ,EACpBG,EAAKC,EAAKL,EAAKM,EAAKP,GAEpBS,EAAMU,KAAKG,KAAKnB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,KAOvCF,GADAM,EAAM,EAAIA,EAEVL,GAAMK,EACNJ,GAAMI,IAPNN,EAAK,EACLC,EAAK,EACLC,EAAK,GAQPhC,EAAI,GAAK2B,EACT3B,EAAI,GAAK8B,EACT9B,EAAI,GAAKiC,EACTjC,EAAI,GAAK,EACTA,EAAI,GAAK4B,EACT5B,EAAI,GAAK+B,EACT/B,EAAI,GAAKkC,EACTlC,EAAI,GAAK,EACTA,EAAI,GAAK6B,EACT7B,EAAI,GAAKgC,EACThC,EAAI,IAAMmC,EACVnC,EAAI,IAAM,EACVA,EAAI,MAAQ2B,EAAKU,EAAOT,EAAKU,EAAOT,EAAKU,GACzCvC,EAAI,MAAQ8B,EAAKO,EAAON,EAAKO,EAAON,EAAKO,GACzCvC,EAAI,MAAQiC,EAAKI,EAAOH,EAAKI,EAAOH,EAAKI,GACzCvC,EAAI,IAAM,EAEHA,GA0CF,SAASkD,EAAOlD,EAAKC,GAC1B,IAAIE,EAAMF,EAAE,GACVG,EAAMH,EAAE,GACRI,EAAMJ,EAAE,GACRK,EAAML,EAAE,GACRM,EAAMN,EAAE,GACRO,EAAMP,EAAE,GACRQ,EAAMR,EAAE,GACRS,EAAMT,EAAE,GACRU,EAAMV,EAAE,GACRW,EAAMX,EAAE,GACRY,EAAMZ,EAAE,IACRa,EAAMb,EAAE,IACRc,EAAMd,EAAE,IACRe,EAAMf,EAAE,IACRgB,EAAMhB,EAAE,IACRiB,EAAMjB,EAAE,IACRkD,EAAMhD,EAAMK,EAAMJ,EAAMG,EACxB6C,EAAMjD,EAAMM,EAAMJ,EAAME,EACxB8C,EAAMlD,EAAMO,EAAMJ,EAAMC,EACxB+C,EAAMlD,EAAMK,EAAMJ,EAAMG,EACxB+C,EAAMnD,EAAMM,EAAMJ,EAAME,EACxBgD,EAAMnD,EAAMK,EAAMJ,EAAMG,EACxBgD,EAAM9C,EAAMK,EAAMJ,EAAMG,EACxB2C,EAAM/C,EAAMM,EAAMJ,EAAME,EACxB4C,EAAMhD,EAAMO,EAAMJ,EAAMC,EACxB6C,EAAMhD,EAAMK,EAAMJ,EAAMG,EACxB6C,EAAMjD,EAAMM,EAAMJ,EAAME,EACxB8C,EAAMjD,EAAMK,EAAMJ,EAAMG,EAExB8C,EAAMZ,EAAMW,EAAMV,EAAMS,EAAMR,EAAMO,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE1E,OAAKM,GAGLA,EAAM,EAAMA,EAEZ/D,EAAI,IAAMQ,EAAMsD,EAAMrD,EAAMoD,EAAMnD,EAAMkD,GAAOG,EAC/C/D,EAAI,IAAMK,EAAMwD,EAAMzD,EAAM0D,EAAMxD,EAAMsD,GAAOG,EAC/C/D,EAAI,IAAMgB,EAAMwC,EAAMvC,EAAMsC,EAAMrC,EAAMoC,GAAOS,EAC/C/D,EAAI,IAAMa,EAAM0C,EAAM3C,EAAM4C,EAAM1C,EAAMwC,GAAOS,EAC/C/D,EAAI,IAAMS,EAAMkD,EAAMpD,EAAMuD,EAAMpD,EAAMgD,GAAOK,EAC/C/D,EAAI,IAAMG,EAAM2D,EAAMzD,EAAMsD,EAAMrD,EAAMoD,GAAOK,EAC/C/D,EAAI,IAAMiB,EAAMoC,EAAMtC,EAAMyC,EAAMtC,EAAMkC,GAAOW,EAC/C/D,EAAI,IAAMW,EAAM6C,EAAM3C,EAAMwC,EAAMvC,EAAMsC,GAAOW,EAC/C/D,EAAI,IAAMO,EAAMsD,EAAMrD,EAAMmD,EAAMjD,EAAM+C,GAAOM,EAC/C/D,EAAI,IAAMI,EAAMuD,EAAMxD,EAAM0D,EAAMvD,EAAMmD,GAAOM,EAC/C/D,EAAI,KAAOe,EAAMwC,EAAMvC,EAAMqC,EAAMnC,EAAMiC,GAAOY,EAChD/D,EAAI,KAAOY,EAAMyC,EAAM1C,EAAM4C,EAAMzC,EAAMqC,GAAOY,EAChD/D,EAAI,KAAOQ,EAAMkD,EAAMnD,EAAMqD,EAAMnD,EAAMgD,GAAOM,EAChD/D,EAAI,KAAOG,EAAMyD,EAAMxD,EAAMsD,EAAMrD,EAAMoD,GAAOM,EAChD/D,EAAI,KAAOgB,EAAMoC,EAAMrC,EAAMuC,EAAMrC,EAAMkC,GAAOY,EAChD/D,EAAI,KAAOW,EAAM2C,EAAM1C,EAAMwC,EAAMvC,EAAMsC,GAAOY,EAEzC/D,GArBE,KA0BJ,SAASgE,EAAcC,EAAQC,GAEpC,IAAIC,EAAOF,EAAO,GAChBG,EAAOH,EAAO,GACdI,EAAOJ,EAAO,GACdK,EAAOL,EAAO,GACZM,EAAON,EAAO,GAChBO,EAAOP,EAAO,GACdQ,EAAOR,EAAO,GACdS,EAAOT,EAAO,GACZU,EAAOV,EAAO,GAChBW,EAAOX,EAAO,GACdY,EAAOZ,EAAO,IACda,EAAOb,EAAO,IACZc,EAAOd,EAAO,IAChBe,EAAOf,EAAO,IACdgB,EAAOhB,EAAO,IACdiB,EAAOjB,EAAO,IAGZkB,EAAIjB,EAAM,GACVkB,EAAIlB,EAAM,GACVmB,EAAInB,EAAM,GACVoB,EAAIpB,EAAM,GAcd,MAAO,CAXOiB,EAAIhB,EAAOiB,EAAIb,EAAOc,EAAIV,EAAOW,EAAIP,EAGrCI,EAAIf,EAAOgB,EAAIZ,EAAOa,EAAIT,EAAOU,EAAIN,EAGrCG,EAAId,EAAOe,EAAIX,EAAOY,EAAIR,EAAOS,EAAIL,EAGrCE,EAAIb,EAAOc,EAAIV,EAAOW,EAAIP,EAAOQ,EAAIJ,GCpR9C,SAASK,EAAsBC,GACpC,GAAIA,EAAMC,UAAUC,OAAS,EAAG,CAC9B,IAAIJ,EAAIE,EAAMC,UAAU,GAAG,GACvBE,EAAIH,EAAMC,UAAU,GAAG,IDsJxB,SAAqBzF,EAAK4F,EAAMC,EAAQC,EAAMC,GACnD,IAAIC,EAAI,EAAMlD,KAAKmD,IAAIL,EAAO,GAC5BM,EAAK,GAAKJ,EAAOC,GACnB/F,EAAI,GAAKgG,EAAIH,EACb7F,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAKgG,EACThG,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,KAAO+F,EAAMD,GAAQI,EACzBlG,EAAI,KAAO,EACXA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EAAI+F,EAAMD,EAAOI,EAC3BlG,EAAI,IAAM,ECvKRmG,CAAYX,EAAMY,WAAYtD,KAAKuD,GAAK,EAAGf,EAAIK,EAAG,IAAM,KACxDzC,EAAOsC,EAAMc,mBAAoBd,EAAMY,aAI3C,SAASG,EAAUC,GACjB,MAAO,CAACA,EAAO,GAAIA,EAAO,GAAI,GA2BzB,SAASC,EAAejB,EAAOkB,EAAIC,GACxC,IAAItB,EAPC,SAAwBG,EAAOoB,GACpC,IAAIC,EAAY7C,EAAcwB,EAAMY,WAAY,CAAC,EAAG,EAAGQ,EAAS,IAEhE,OADUC,EAAU,GAAKA,EAAU,GAK3BC,CAAetB,GAAQmB,GAC3BI,EAAM,CAAE,EAAIL,EAAMlB,EAAMC,UAAU,GAAG,GAAI,EAAGJ,EAAG,GAC/C2B,EAAchD,EAAcwB,EAAMc,mBAAoBS,GAC1D,OAAOC,EAAY,GAAKA,EAAY,GAqD/B,SAASC,EAAQzB,EAAO0B,EAAOC,EAAOP,GAC3C,IAAIQ,EAAW5B,EAAMC,UAAUyB,GAC3BG,EA0DC,SAAwB7B,EAAO0B,EAAON,GAC3C,IAAIC,EAAY7C,EAAcwB,EAAM8B,iBAAiBJ,GAAQ,CAC3D,EACA,EACAN,EACA,IAGF,OADUC,EAAU,GAAKA,EAAU,GAjEzBU,CAAe/B,EAAO0B,EAAON,GACnCY,EAXC,SAA2BJ,EAAUK,GAK1C,MAAO,EAJQA,EAAe,GAAKL,EAAS,IAAMA,EAAS,GAE9C,EAAc,GADZK,EAAe,GAAKL,EAAS,IAAMA,EAAS,GAE9C,EAAc,GAOfM,CAAkBN,EAAUD,GACpCQ,EAAqB,CAACH,EAAM,GAAIA,EAAM,GAAIH,EAAK,GAC/CL,EAAchD,EAChBwB,EAAMoC,yBAAyBV,GAC/BS,GAOF,MAJmB,CACjBX,EAAY,GAAKA,EAAY,GAC7BA,EAAY,GAAKA,EAAY,IClJba,YAAK,CACvBC,IAAK,QACLC,QAAS,KAFJ,IAKIC,EAAUH,YAAK,CACxBC,IAAK,SACLC,QAAS,CAAC,EAAG,EAAG,EAAG,KAGVE,EAASJ,YAAK,CACvBC,IAAK,OACLC,QAAS,WAGAG,EAAQC,YAAS,CAC1BL,IAAK,QACLM,IAAK,YACH,OAAOA,EADS,EAAVA,KACKH,IAEbI,IAAK,WAAUC,IACbD,EADsB,EAAhBA,KACFJ,EAAQK,MAILC,EAAQV,YAAK,CACtBC,IAAK,OACLC,QAAS,CAAC,KAAM,QAGPS,EAAYX,YAAK,CAC1BC,IAAK,WACLC,QAAS,CAAC,KAAM,QAGPU,EAAYN,YAAS,CAC9BL,IAAK,iBACLO,IAAK,WAAeK,GAAU,IAAtBN,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,IAAgB,cACZK,EADY,GACtBC,EADsB,KAClBC,EADkB,OAEdR,EAAII,GAAWK,QAFD,mBAEtBvD,EAFsB,KAEnBK,EAFmB,KAGvBmD,EAAShG,KAAKiG,IAAI,GAAIzD,EAAS,EAALqD,GAC1BK,EAASlG,KAAKiG,IAAI,GAAIpD,EAAS,EAALiD,GAC9BP,EAAIG,EAAW,CAACM,EAAQE,OAIjBC,EAAQpB,YAAK,CACtBC,IAAK,OACLC,QAAS,IAGAmB,EAAQrB,YAAK,CACtBC,IAAK,OACLC,QAAS,IAGAoB,EAAatB,YAAK,CAC3BC,IAAK,YACLC,QAAS,IAGAqB,EAAgBvB,YAAK,CAC9BC,IAAK,eACLC,QAAS,MAGAsB,EAAWxB,YAAK,CACzBC,IAAK,UACLC,QAAS,KAGAuB,EAAWC,YAAW,CAC/BzB,IAAK,SACLC,QAAS,CAAC,EAAG,EAAG,KAGPyB,EAAY3B,YAAK,CAC1BC,IAAK,WACLC,QAAS,KAGA0B,EAAU5B,YAAK,CACxBC,IAAK,SACLC,QAAS,KAGA2B,EAAYvB,YAAS,CAC9BL,IAAK,WACLO,IAAK,WAAesB,GAAS,IAArBvB,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,IACPuB,EAAOxB,EAAIqB,GACfpB,EAAIoB,EAAD,sBAAcG,GAAd,CAAoBD,QAI3B,SAASE,EAAgBC,EAAQC,EAAMC,GAAO,IAAD,cACxBF,EADwB,GACtC3E,EADsC,KACnCC,EADmC,KAChCE,EADgC,KAC7BK,EAD6B,KAI3C,OAFIL,EAAIyE,IAAMzE,EAAIyE,GACdpE,EAAIqE,IAAMrE,EAAIqE,GACX,CAACC,EAAO9E,EAAG,EAAG4E,EAAOzE,GAAI2E,EAAO7E,EAAG,EAAG4E,EAAOrE,GAAIL,EAAGK,GAG7D,SAASsE,EAAOC,EAAKC,EAAKpB,GACxB,OAAOjG,KAAKiG,IAAIoB,EAAKrH,KAAKqH,IAAIpB,EAAKmB,IAG9B,IAAIE,EAAkBjC,YAAS,CACpCL,IAAK,iBACLO,IAAK,WAAegC,GAAe,IAA3BjC,EAA0B,EAA1BA,KACNC,EADgC,EAArBA,KACPL,EAAS6B,EAAgBQ,EAAWjC,EAAIa,GAAQb,EAAIc,QAIjDoB,EAAanC,YAAS,CAC/BL,IAAK,YACLO,IAAK,WAAegC,GAAe,IAA3BjC,EAA0B,EAA1BA,KACNC,EADgC,EAArBA,KACPL,EAAS,CAAC,EAAG,EAAGI,EAAIa,GAAQb,EAAIc,QAI7BqB,EAAsBpC,YAAS,CACxCL,IAAK,qBACLO,IAAK,WAAeK,GAAU,IAAtBN,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,IAAgB,EACRD,EAAIJ,GADI,mBACtB7C,EADsB,KACnBC,EADmB,KAChBE,EADgB,KACbK,EADa,mBAEZ+C,EAFY,GAEtBC,EAFsB,KAElBC,EAFkB,KAG3BP,EAAI+B,EAAiB,CAACjF,EAAIwD,EAAIvD,EAAIwD,EAAItD,EAAGK,OAWtC,IAAI6E,EAAwBrC,YAAS,CAC1CL,IAAK,uBACLO,IAAK,WAAeK,GAAU,IAAtBN,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,IAAgB,EACRD,EAAIJ,GADI,mBACtB7C,EADsB,KACnBC,EADmB,KAChBE,EADgB,KACbK,EADa,mBAEZ+C,EAFY,GAEtBC,EAFsB,KAElBC,EAFkB,KAI3BP,EAAIL,EAbR,SAAyB8B,EAAQC,EAAMC,GAAO,IAAD,cACxBF,EADwB,GACtC3E,EADsC,KACnCC,EADmC,KAChCE,EADgC,KAC7BK,EAD6B,KAEvCmD,EAASiB,EAAOD,EAAO,GACvBd,EAASgB,EAAOF,EAAO,GAC3B,MAAO,CAAC3E,EAAGC,EAAG6E,EAAO3E,EAAG,EAAGwD,GAASmB,EAAOtE,EAAG,EAAGqD,IASlCyB,CADG,CAACtF,EAAGC,EAAGE,EAAIqD,EAAIhD,EAAIiD,GACKR,EAAIa,GAAQb,EAAIc,QAIjDwB,EAAavC,YAAS,CAC/BL,IAAK,YACLM,IAAK,YAAc,IAAXA,EAAU,EAAVA,IAAU,EACHA,EAAII,GADD,mBACXlD,EADW,KACRK,EADQ,KAEZoE,EAAO3B,EAAIa,GACXe,EAAO5B,EAAIc,GACXyB,EAAK7H,KAAK8H,MAAMtF,EAAIyE,GACpBc,EAAK/H,KAAK8H,MAAMjF,EAAIqE,GACxB,OAAO,YAAIc,MAAMf,EAAOC,IAAOe,KAAI,SAACC,EAAGC,GACrC,IAAIC,EAAID,EAAIlB,EACRoB,EAAIrI,KAAK8H,MAAMK,EAAIlB,GACvB,MAAO,CAACmB,EAAIP,EAAIQ,EAAIN,EAAIF,EAAIE,SAKvBO,EAAajD,YAAS,CAC/BL,IAAK,YACLO,IAAK,cAKH,IALuC,IAAjCD,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,IAAS7C,EAAkB,EAAlBA,MAAOkD,EAAW,EAAXA,KAAW,cACvBA,EADuB,GACjCC,EADiC,KAC7BC,EAD6B,KAElCyC,EAAUjD,EAAIiB,GACdU,EAAO3B,EAAIa,GAHuB,EAInBb,EAAIJ,GAJe,mBAIjC7C,EAJiC,KAI9BC,EAJ8B,KAI3BE,EAJ2B,KAIxBK,EAJwB,KAK7BwF,EAAI,EAAGA,EAAIxF,EAAGwF,IACrB,IAAK,IAAID,EAAI,EAAGA,EAAI5F,EAAG4F,IAAK,CAC1B,IACII,EAAKD,GADIjG,EAAI+F,GAAKpB,GAAQ5E,EAAI+F,IAG9BK,EADSnD,EAAIkB,EAASgC,IACFzC,QACpB2C,EAAM/E,EAAejB,EAAOmD,EAAI4C,EAAW,IAC3CE,EAAMhF,EAAejB,EAAOoD,EAAI2C,EAAW,IAC/CA,EAAW,IAAMC,EACjBD,EAAW,IAAME,EACjBpD,EAAIiB,EAASgC,GAAKC,OAMfG,EAAgBvD,YAAS,CAClCL,IAAK,eACLO,IAAK,YAAmB,IAAhBD,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IAAU,EACFD,EAAIJ,GADF,mBAChB7C,EADgB,KACbC,EADa,eAErBiD,EAAIL,EAAS,CAAC7C,EAAGC,EAAG,EAAG,OAIhBuG,EAAaxD,YAAS,CAC/BL,IAAK,YACLO,IAAK,YAIH,IAJsB,IAAhBD,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACPgD,EAAUjD,EAAIiB,GACdU,EAAO3B,EAAIa,GAFM,EAGFb,EAAIJ,GAHF,mBAGhB7C,EAHgB,KAGbC,EAHa,KAGVE,EAHU,KAGPK,EAHO,KAIZwF,EAAI,EAAGA,EAAIxF,EAAGwF,IACrB,IAAK,IAAID,EAAI,EAAGA,EAAI5F,EAAG4F,IAAK,CAC1B,IACII,EAAKD,GADIjG,EAAI+F,GAAKpB,GAAQ5E,EAAI+F,IAG9BK,EADSnD,EAAIkB,EAASgC,IACFzC,QACxB0C,EAAW,GHjNI,EGkNflD,EAAIiB,EAASgC,GAAKC,OAMfK,EAAczD,YAAS,CAChCL,IAAK,aACLM,IAAK,YAKH,IALiB,IAAXA,EAAU,EAAVA,IACFiD,EAAUjD,EAAIiB,GACdU,EAAO3B,EAAIa,GACXe,EAAO5B,EAAIc,GACX2C,EAAkB,GACbV,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IACII,EAAKD,EADGF,EAAIpB,EAAOmB,GAEnB1E,EAAS4B,EAAIkB,EAASgC,IAC1BO,EAAgBC,KAAKtF,GAGzB,OAAOqF,KAIAE,EAAgB5D,YAAS,CAClCL,IAAK,eACLO,IAAK,cAaH,IAbyC,IAAnCD,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,IAAS7C,EAAoB,EAApBA,MAAOsE,EAAa,EAAbA,OACvBuB,EAAUjD,EAAIiB,GACd5D,EAAY2C,EAAIsC,GAFoB,EAGzBtC,EAAII,GAHqB,mBAGnCwD,EAHmC,KAG/BC,EAH+B,KAIpClC,EAAO3B,EAAIa,GACXe,EAAO5B,EAAIc,GALyB,OAOzBgD,IAAXpC,EACW1B,EAAIJ,GAEJ8B,EAVyB,mBAYnC3E,EAZmC,KAYhCC,EAZgC,KAY7BE,EAZ6B,KAY1BK,EAZ0B,KAa/BwF,EAAI,EAAGA,EAAIxF,EAAGwF,IACrB,IAAK,IAAID,EAAI,EAAGA,EAAI5F,EAAG4F,IAAK,CAC1B,IACIiB,GAAYnC,EAAO,GAAK5E,EAAI+F,IAAMpB,GAAQ5E,EAAI+F,GAC9CI,EAAKD,GAFIjG,EAAI+F,GAAKpB,GAAQ5E,EAAI+F,IADR,cAIHzF,EAAU0G,GAJP,GAIrBC,EAJqB,KAIjBC,EAJiB,KAIb1B,EAJa,KAITE,EAJS,KAMtBU,EADSnD,EAAIkB,EAASgC,IACFzC,QAIpByD,EAFOD,EAAKxB,EAAK,EAEHoB,EAAK,EACnB3G,EAAImB,EAAejB,EAJZ4G,EAAKzB,EAAK,EAEHqB,EAAK,EAEaT,EAAW,IAC3C5F,EAAIc,EAAejB,EAAO8G,EAAMf,EAAW,IAC/CA,EAAW,GAAKjG,EAChBiG,EAAW,GAAK5F,EAChB0C,EAAIiB,EAASgC,GAAKC,OAMfgB,EAAepE,YAAS,CACjCL,IAAK,cACLO,IAAK,cAUH,IAVyC,IAAnCD,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,IAAS7C,EAAoB,EAApBA,MAAOsE,EAAa,EAAbA,OACvBuB,EAAUjD,EAAIiB,GACdU,EAAO3B,EAAIa,GAFyB,OAIzBiD,IAAXpC,EACW1B,EAAIJ,GAEJ8B,EAPyB,mBASnC3E,EATmC,KAShCC,EATgC,KAS7BE,EAT6B,KAS1BK,EAT0B,KAU/BwF,EAAI,EAAGA,EAAIxF,EAAGwF,IACrB,IAAK,IAAID,EAAI,EAAGA,EAAI5F,EAAG4F,IAAK,CAC1B,IACII,EAAKD,GADIjG,EAAI+F,GAAKpB,GAAQ5E,EAAI+F,IAG9BK,EADSnD,EAAIkB,EAASgC,IACFzC,QACpB2D,EAAK/F,EAAejB,EAAO,GAAI+F,EAAW,IAC1C5C,EAAK,EAAI6D,EAAK,EAAI1J,KAAK2J,SAAWD,EAClC5D,EAAK,EAAI4D,EAAK,EAAI1J,KAAK2J,SAAWD,EACtCjB,EAAW,IAAM5C,EACjB4C,EAAW,IAAM3C,EACjBP,EAAIiB,EAASgC,GAAKC,OAMfmB,EAAevE,YAAS,CACjCL,IAAK,cACLO,IAAK,cAMH,IANyC,IAAnCD,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,IAAS7C,EAAoB,EAApBA,MAAoB,KAAbsE,OACR1B,EAAIJ,IADiB,mBACnC7C,EADmC,KAChCC,EADgC,KAC7BE,EAD6B,KAC1BK,EAD0B,KAEpC0F,EAAUjD,EAAIiB,GACdU,EAAO3B,EAAIa,GACX0D,EAAKxH,EAAIG,EAAI,EACbsH,EAAKxH,EAAIO,EAAI,EACRwF,EAAI,EAAGA,EAAIxF,EAAGwF,IACrB,IAAK,IAAID,EAAI,EAAGA,EAAI5F,EAAG4F,IAAK,CAC1B,IACII,EAAKD,GADIjG,EAAI+F,GAAKpB,GAAQ5E,EAAI+F,IAE9B1E,EAAS4B,EAAIkB,EAASgC,IACtBC,EAAa/E,EAAOqC,QACpBF,EAAK,EACLC,EAAK,EACL+D,EAAKzB,EAAI/F,EAAI,GACfwD,GAAM,EACGgE,EAAKzB,EAAI/F,EAAI,KACtBwD,EAAK,GAEHiE,EAAKzB,EAAI/F,EAAI,GACfwD,EAAK,EACIgE,EAAKzB,EAAI/F,EAAI,KACtBwD,GAAM,GAER,IAAI4C,EAAM/E,EAAejB,EAAY,EAALmD,EAAQnC,EAAO,IAC3CiF,EAAMhF,EAAejB,EAAY,EAALoD,EAAQpC,EAAO,IAC/C+E,EAAW,IAAMC,EACjBD,EAAW,IAAME,EACjBpD,EAAIiB,EAASgC,GAAKC,OAMfsB,EAAe1E,YAAS,CACjCL,IAAK,cACLO,IAAK,cAMH,IANyC,IAAnCD,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,IAAS7C,EAAoB,EAApBA,MAAoB,KAAbsE,OACR1B,EAAIJ,IADiB,mBACnC7C,EADmC,KAChCC,EADgC,KAC7BE,EAD6B,KAC1BK,EAD0B,KAEpC0F,EAAUjD,EAAIiB,GACdU,EAAO3B,EAAIa,GACX0D,EAAKxH,EAAIG,EAAI,EACbsH,EAAKxH,EAAIO,EAAI,EACRwF,EAAI,EAAGA,EAAIxF,EAAGwF,IACrB,IAAK,IAAID,EAAI,EAAGA,EAAI5F,EAAG4F,IAAK,CAC1B,IACII,EAAKD,GADIjG,EAAI+F,GAAKpB,GAAQ5E,EAAI+F,IAE9B1E,EAAS4B,EAAIkB,EAASgC,IACtBC,EAAa/E,EAAOqC,QACpBF,EAAK,EACLC,EAAK,EACL+D,EAAKzB,EAAI/F,EAAI,GACfwD,EAAK,EACIgE,EAAKzB,EAAI/F,EAAI,KACtBwD,GAAM,GAEJiE,EAAKzB,EAAI/F,EAAI,GACfwD,GAAM,EACGgE,EAAKzB,EAAI/F,EAAI,KACtBwD,EAAK,GAEP,IAAI4C,EAAM/E,EAAejB,EAAY,EAALmD,EAAQnC,EAAO,IAC3CiF,EAAMhF,EAAejB,EAAY,EAALoD,EAAQpC,EAAO,IAC/C+E,EAAW,IAAMC,EACjBD,EAAW,IAAME,EACjBpD,EAAIiB,EAASgC,GAAKC,OAMfuB,EAAiB3E,YAAS,CACnCL,IAAK,gBACLO,IAAK,WAAe7C,GAKlB,IAL6B,IAAvB4C,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,IACPgD,EAAUjD,EAAIiB,GACdU,EAAO3B,EAAIa,GAFa,GAGjBb,EAAIc,GACId,EAAIJ,IAJK,mBAIvB7C,EAJuB,KAIpBC,EAJoB,KAIjBE,EAJiB,KAIdK,EAJc,KAKnBwF,EAAI,EAAGA,EAAIxF,EAAGwF,IACrB,IAAK,IAAID,EAAI,EAAGA,EAAI5F,EAAG4F,IAAK,CAC1B,IACII,EAAKD,GADIjG,EAAI+F,GAAKpB,GAAQ5E,EAAI+F,IAG9BK,EADSnD,EAAIkB,EAASgC,IACFzC,QACxB0C,EAAW,GAAK,EAChBA,EAAW,GAAK,EAChBlD,EAAIiB,EAASgC,GAAKC,OAMfwB,EAAe5E,YAAS,CACjCL,IAAK,cACLO,IAAK,cAYH,IAZkC,IAA5BD,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,IAASyB,EAAa,EAAbA,OAChBC,EAAO3B,EAAIa,GACXe,EAAO5B,EAAIc,GAFkB,OAIlBgD,IAAXpC,EACW1B,EAAIJ,GAEJ8B,EAPkB,mBAS5B3E,EAT4B,KASzBC,EATyB,KAStBE,EATsB,KASnBK,EATmB,KAU7BqH,EAAS5E,EAAIqB,GACbwD,EAAU7E,EAAIoB,GAAWX,QACpBsC,EAAI,EAAGA,EAAIxF,EAAGwF,IACrB,IAAK,IAAID,EAAI,EAAGA,EAAI5F,EAAG4F,IAAK,CAE1B+B,GADgBjD,EAAO,GAAK5E,EAAI+F,IAAMpB,GAAQ5E,EAAI+F,IAC9B8B,EAAOtH,OAAS,EAGxC2C,EAAImB,EAAWyD,MAInB,SAASC,EAAUC,GAGjB,OAAOrK,KAAKqH,IAFF,IAEWrH,KAAKiG,IADhB,IACyBoE,IAG9B,IAAIC,GAAYvF,YAAK,CAC1BC,IAAK,WACLC,QAAS,WAGAsF,GAAexF,YAAK,CAC7BC,IAAK,cACLC,SAAS,IAGAuF,GAAYzF,YAAK,CAC1BC,IAAK,WACLC,SAAS,IAGAwF,GAAe1F,YAAK,CAC7BC,IAAK,cACLC,SAAS,IAGAyF,GAAQ3F,YAAK,CACtBC,IAAK,OACLC,QAAS,KAGA0F,GAAQtF,YAAS,CAC1BL,IAAK,UACLO,IAAK,YAOH,IAPsB,IAAhBD,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IAAU,EACFD,EAAIJ,GADF,mBAChB7C,EADgB,KACbC,EADa,KACVE,EADU,KACPK,EADO,KAEjB+H,EAAWtF,EAAIoB,GACfO,EAAO3B,EAAIa,GACXe,EAAO5B,EAAIc,GACXmC,EAAUjD,EAAIiB,GACdsE,EAAO,GACFxC,EAAI,EAAGA,EAAIxF,EAAGwF,IACrB,IAAK,IAAID,EAAI,EAAGA,EAAI5F,EAAG4F,IAAK,CAC1B,IACIiB,GAAYnC,EAAO,GAAK5E,EAAI+F,IAAMpB,GAAQ5E,EAAI+F,GAC9CI,EAAKD,GAFIjG,EAAI+F,GAAKpB,GAAQ5E,EAAI+F,IAG9B1E,EAAS4B,EAAIkB,EAASgC,IACtBP,EAAM2C,EAASvB,GACfyB,EAAM,CAACpH,EAAOqC,QAASkC,GAC3B4C,EAAK7B,KAAK8B,GAGdvF,EAAImF,GAAOG,MAIJE,GAAS1F,YAAS,CAC3BL,IAAK,WACLO,IAAK,YAAmB,IAAhBD,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IAEX,GADWD,EAAIoF,IACN9H,OAAS,EAAG,CAQnB,IARoB,IAAD,EACA0C,EAAIJ,GADJ,mBACd7C,EADc,KACXC,EADW,KACRE,EADQ,KACLK,EADK,KAGfmI,EADW1F,EAAIoB,GACGX,QAClBkB,EAAO3B,EAAIa,GACXe,EAAO5B,EAAIc,GACXmC,EAAUjD,EAAIiB,GACdsE,EAAOvF,EAAIoF,IACNrC,EAAI,EAAGA,EAAIxF,EAAGwF,IACrB,IAAK,IAAID,EAAI,EAAGA,EAAI5F,EAAG4F,IAAK,CAC1B,IAAI6C,EAAY5C,EAAI7F,EAAI4F,OACAgB,IAApByB,EAAKI,KAA0BA,EAAYJ,EAAKjI,OAAS,GAFnC,kBAGEiI,EAAKI,GAHP,GAGrBxC,EAHqB,KAGT0B,EAHS,KAKtBd,GAAYnC,EAAO,GAAK5E,EAAI+F,IAAMpB,GAAQ5E,EAAI+F,GAC9CI,EAAKD,GAFIjG,EAAI+F,GAAKpB,GAAQ5E,EAAI+F,IAGlC4C,EAAO3B,GAAYc,EACnB5E,EAAIiB,EAASgC,GAAKC,GAGtBlD,EAAImB,EAAWsE,OAKVE,GAAc7F,YAAS,CAChCL,IAAK,aACLO,IAAK,cAWH,IAX6C,IAAvCD,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,IAAS7C,EAAwB,EAAxBA,MAAOyI,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC7B7C,EAAUjD,EAAIiB,GACdU,EAAO3B,EAAIa,GACXe,EAAO5B,EAAIc,GAH6B,EAIzBd,EAAIJ,GAJqB,mBAIvC7C,EAJuC,KAIpCC,EAJoC,KAIjCE,EAJiC,KAI9BK,EAJ8B,OAK7ByC,EAAII,GALyB,mBAKvCwD,EALuC,KAKnCC,EALmC,KAMxCkC,EAAW/F,EAAIgF,IACf3H,EAAY2C,EAAIsC,GAPwB,cAQ7BjF,GAAWuE,GAAQ5E,EAAIO,IAAMoE,EAAO5E,GARP,GAQvCiJ,EARuC,KAQnCC,EARmC,mBAStB5I,EAAU,GATY,GAUxC6I,GAVwC,UAU1B,CAV0B,KAUpBhJ,EAVoB,KAUZK,IACvBwF,EAAI,EAAGA,EAAIxF,EAAGwF,IACrB,IAAK,IAAID,EAAI,EAAGA,EAAI5F,EAAG4F,IAAK,CAC1B,IACIiB,GAAYnC,EAAO,GAAK5E,EAAI+F,IAAMpB,GAAQ5E,EAAI+F,GAC9CI,EAAKD,GAFIjG,EAAI+F,GAAKpB,GAAQ5E,EAAI+F,IAI9BK,EADSnD,EAAIkB,EAASgC,IACFzC,QACpB0F,EAAOhD,EAAW,GAOlB4B,EAAWD,EALXe,EAAO,EACEM,EAAOL,EAEPK,EAAOL,GAGpB,GAAIf,EAAWoB,GAAQpB,EAAWoB,EAAM,CACtC,GAAiB,WAAbJ,EAAuB,CACzB,IAAItH,EAAYI,EACdzB,EACA2G,EACA,CAACH,EAAK,EAAGC,EAAK,GACdkB,GAEF5B,EAAU,sBAAO1E,GAAP,CAAkBsG,SACvB,GAAiB,WAAbgB,EAAuB,CAChC,IAAItH,EAAYI,EACdzB,EACA2G,EACA,CAACiC,EAAKE,EAAY,GAAK,EAAGD,EAAKC,EAAY,GAAK,GAChDnB,GAEF5B,EAAU,sBAAO1E,GAAP,CAAkBsG,SAE5B5B,EAAW,GAAK4B,EAElB9E,EAAIiB,EAASgC,GAAKC,QAOjBiD,GAAUrG,YAAS,CAC5BL,IAAK,SACLO,IAAK,YAAmB,IAAhBD,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACP0B,EAAO3B,EAAIa,GACXe,EAAO5B,EAAIc,GACf,GAAIa,EAAO,GAAI,CAOb,IAPc,IAAD,EACM3B,EAAIJ,GADV,mBACR7C,EADQ,KACLC,EADK,KACFE,EADE,KACCK,EADD,KAET8I,EAAYtJ,EAAIG,EAChBoJ,EAAUD,EAAY,EAEtBf,EAAWtF,EAAIoB,GACfmF,EAAU,YAAI7D,MAAMf,IAAOgB,KAAI,SAAC6D,GAAD,MAAO,MACjCzD,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IAAIhE,EAAQiE,EAAIpB,EAAOmB,EACvByD,EAAQzD,GAAGY,KAAK4B,EAASxG,IAG7B,IAAI2H,EAAUF,EAAQD,GAAS7F,QAC/B8F,EAAQG,OAAOL,EAAW,EAAGI,GAE7B,IADA,IAAIE,EAAgB,GACX5D,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIyD,EAAQjJ,OAAQwF,IAClC6D,EAAcjD,KAAK6C,EAAQzD,GAAGC,IAMlC,IAFA,IAAIE,EAAUjD,EAAIiB,GACd2F,EAAa,YAAIlE,MAAMf,IAAOgB,KAAI,SAAC6D,GAAD,MAAO,MACpCzD,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IAAIhE,EAAQiE,EAAIpB,EAAOmB,EACvB8D,EAAW9D,GAAGY,KAAKT,EAAQnE,IAK/B,IAFA,IAAI+H,EAAcD,EAAWN,GAAS7F,QAClCqG,EAAS,GACJ/D,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IAAIG,EAAK6D,KACLC,EAASH,EAAY9D,GACrBkE,EAAcjH,EAAIkB,EAAS8F,IAASvG,QACxCR,EAAIiB,EAASgC,GAAK+D,GAClBH,EAAOpD,KAAKR,GAEd0D,EAAWF,OAAOL,EAAW,EAAGS,GAEhC,IADA,IAAII,EAAoB,GACfnE,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAI8D,EAAWtJ,OAAQwF,IACrCoE,EAAkBxD,KAAKkD,EAAW9D,GAAGC,IAIzC9C,EAAIgB,EAAUiG,GACdjH,EAAImB,EAAWuF,GACf1G,EAAIY,EAAOc,EAAO,GAClB1B,EAAIL,EAAS,CAAC7C,EAAGC,EAAGE,EAAI,EAAGK,QAKtB4J,GAAUpH,YAAS,CAC5BL,IAAK,SACLO,IAAK,YAAmB,IAAhBD,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACP0B,EAAO3B,EAAIa,GACXe,EAAO5B,EAAIc,GACf,GAAIa,EAAO,EAAG,CAMZ,IANa,IAAD,EACO3B,EAAIJ,GADX,mBACP7C,EADO,KACJC,EADI,KACDE,EADC,KACEK,EADF,KAER6J,EAAWrK,EAEXuI,EAAWtF,EAAIoB,GACfmF,EAAU,YAAI7D,MAAMf,IAAOgB,KAAI,SAAC6D,GAAD,MAAO,MACjCzD,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IAAIhE,EAAQiE,EAAIpB,EAAOmB,EACvByD,EAAQzD,GAAGY,KAAK4B,EAASxG,IAG7ByH,EAAQG,OAAOU,EAAU,GAEzB,IADA,IAAIT,EAAgB,GACX5D,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIyD,EAAQjJ,OAAQwF,IAClC6D,EAAcjD,KAAK6C,EAAQzD,GAAGC,IAMlC,IAFA,IAAIE,EAAUjD,EAAIiB,GACd2F,EAAa,YAAIlE,MAAMf,IAAOgB,KAAI,SAAC6D,GAAD,MAAO,MACpCzD,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IAAIhE,EAAQiE,EAAIpB,EAAOmB,EACvB8D,EAAW9D,GAAGY,KAAKT,EAAQnE,IAG/B8H,EAAWF,OAAOU,EAAU,GAE5B,IADA,IAAIF,EAAoB,GACfnE,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAI8D,EAAWtJ,OAAQwF,IACrCoE,EAAkBxD,KAAKkD,EAAW9D,GAAGC,IAIzC9C,EAAIgB,EAAUiG,GACdjH,EAAImB,EAAWuF,GACf1G,EAAIY,EAAOc,EAAO,GAEhB1B,EAAIL,EAAS6B,EADXvE,EAAI,EACuB,CAACH,EAAGC,EAAGE,EAAI,EAAGK,GAEd,CAACR,EAAI,EAAGC,EAAGE,EAAGK,GAFIoE,EAAO,EAAGC,QAQtDyF,GAAUtH,YAAS,CAC5BL,IAAK,SACLO,IAAK,YAAmB,IAAhBD,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACP0B,EAAO3B,EAAIa,GACXe,EAAO5B,EAAIc,GACf,GAAIc,EAAO,EAAG,CAOZ,IAPa,IAAD,EACO5B,EAAIJ,GADX,mBACP7C,EADO,KACJC,EADI,KACDE,EADC,KACEK,EADF,KAER+J,EAAYtK,EAAIO,EAChBgK,EAAUD,EAAY,EAEtBhC,EAAWtF,EAAIoB,GACfoG,EAAU,YAAI9E,MAAMd,IAAOe,KAAI,SAAC6D,GAAD,MAAO,MACjCzD,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IAAIhE,EAAQiE,EAAIpB,EAAOmB,EACvB0E,EAAQzE,GAAGW,KAAK4B,EAASxG,IAG7B,IAAI2I,EAAUD,EAAQD,GAAS9G,QAC/B+G,EAAQd,OAAOY,EAAW,EAAGG,GAE7B,IADA,IAAId,EAAgB,GACX5D,EAAI,EAAGA,EAAIyE,EAAQlK,OAAQyF,IAClC,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IACxB6D,EAAcjD,KAAK8D,EAAQzE,GAAGD,IAMlC,IAFA,IAAIG,EAAUjD,EAAIiB,GACdyG,EAAa,YAAIhF,MAAMd,IAAOe,KAAI,SAAC6D,GAAD,MAAO,MACpCzD,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IAAIhE,EAAQiE,EAAIpB,EAAOmB,EACvB4E,EAAW3E,GAAGW,KAAKT,EAAQnE,IAK/B,IAFA,IAAI+H,EAAca,EAAWH,GAAS9G,QAClCkH,EAAS,GACJ7E,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IAAII,EAAK6D,KACLC,EAASH,EAAY/D,GACrBmE,EAAcjH,EAAIkB,EAAS8F,IAASvG,QACxCR,EAAIiB,EAASgC,GAAK+D,GAClBU,EAAOjE,KAAKR,GAEdwE,EAAWhB,OAAOY,EAAW,EAAGK,GAEhC,IADA,IAAIT,EAAoB,GACfnE,EAAI,EAAGA,EAAI2E,EAAWpK,OAAQyF,IACrC,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IACxBoE,EAAkBxD,KAAKgE,EAAW3E,GAAGD,IAIzC7C,EAAIgB,EAAUiG,GACdjH,EAAImB,EAAWuF,GACf1G,EAAIa,EAAOc,EAAO,GAClB3B,EAAIL,EAAS,CAAC7C,EAAGC,EAAGE,EAAGK,EAAI,QAKtBqK,GAAU7H,YAAS,CAC5BL,IAAK,UACLO,IAAK,YAAmB,IAAhBD,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACP0B,EAAO3B,EAAIa,GACXe,EAAO5B,EAAIc,GACf,GAAIc,EAAO,EAAG,CAMZ,IANa,IAAD,EACO5B,EAAIJ,GADX,mBACP7C,EADO,KACJC,EADI,KACDE,EADC,KACEK,EADF,KAERsK,EAAW7K,EAEXsI,EAAWtF,EAAIoB,GACfoG,EAAU,YAAI9E,MAAMd,IAAOe,KAAI,SAAC6D,GAAD,MAAO,MACjCzD,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IAAIhE,EAAQiE,EAAIpB,EAAOmB,EACvB0E,EAAQzE,GAAGW,KAAK4B,EAASxG,IAG7B0I,EAAQd,OAAOmB,EAAU,GAEzB,IADA,IAAIlB,EAAgB,GACX5D,EAAI,EAAGA,EAAIyE,EAAQlK,OAAQyF,IAClC,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IACxB6D,EAAcjD,KAAK8D,EAAQzE,GAAGD,IAMlC,IAFA,IAAIG,EAAUjD,EAAIiB,GACdyG,EAAa,YAAIhF,MAAMd,IAAOe,KAAI,SAAC6D,GAAD,MAAO,MACpCzD,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IAAIhE,EAAQiE,EAAIpB,EAAOmB,EACvB4E,EAAW3E,GAAGW,KAAKT,EAAQnE,IAG/B4I,EAAWhB,OAAOmB,EAAU,GAE5B,IADA,IAAIX,EAAoB,GACfnE,EAAI,EAAGA,EAAI2E,EAAWpK,OAAQyF,IACrC,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IACxBoE,EAAkBxD,KAAKgE,EAAW3E,GAAGD,IAIzC7C,EAAIgB,EAAUiG,GACdjH,EAAImB,EAAWuF,GACf1G,EAAIa,EAAOc,EAAO,GAEhB3B,EAAIL,EAAS6B,EADXlE,EAAI,EACuB,CAACR,EAAGC,EAAGE,EAAGK,EAAI,GAEd,CAACR,EAAI,EAAGC,EAAGE,EAAGK,GAFIoE,EAAMC,EAAO,Q,QChiBrDkG,OA7Lf,YAA6C,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,UAAa,EACpBC,YAAenI,GADK,mBACrCoI,EADqC,KAC/BC,EAD+B,KAEtCC,EAAaC,YAAkBlG,GAC/BmG,EAAeD,YAAkBjG,GAHK,EAIZ6F,YAAejD,IAJH,mBAI3BuD,GAJ2B,aAKNN,YAAehD,IALT,mBAKrCuD,EALqC,KAKxBC,EALwB,OAMZR,YAAe/C,IANH,mBAMrCwD,EANqC,KAM3BC,EAN2B,OAONV,YAAe9C,IAPT,mBAOrCyD,EAPqC,KAOxBC,EAPwB,KAQtCC,EAAaT,YAAkBzC,IAC/BmD,EAAYV,YAAkBrF,GAC9BgG,EAAeX,YAAkB1E,GACjCsF,EAAgBZ,YAAkB3D,GAClCwE,EAAcb,YAAkBlE,GAChCgF,EAAcd,YAAkB/D,GAChC8E,EAAcf,YAAkB5D,GAChC4E,EAAYhB,YAAkBnG,GAC9BoH,EAAcjB,YAAkBhI,GAChCkJ,EAASlB,YAAkBjC,IAC3BoD,GAASnB,YAAkBlB,IAC3BsC,GAASpB,YAAkBhB,IAC3BqC,GAASrB,YAAkBT,IAC3B+B,GAAYtB,YAAkB9E,GAC9BqG,GAAevB,YAAkB/E,GACjCuG,GAAWxB,YAAkB/G,GAC7BwI,GAAczB,YAAkB1D,GAChCoF,GAASC,iBAAO,IAChBC,GAAOC,eACPC,GAAOC,eACP7E,GAAO8C,YAAkBhD,IACzBgF,GAAQhC,YAAkB5C,IAI1B6E,IAFaC,cAEL,CACV,IACA,IACA,IACA,IACA,YACA,aACA,UACA,cAGEC,GAAWD,aAAkB,gBAAGE,EAAH,EAAGA,SAAH,OAAkB,WACjD,IAAIC,EAAM,GACVA,EAAI/I,KAAO8I,EAASE,YAAY9J,GAAO+J,SACvCF,EAAI9I,KAAO6I,EAASE,YAAY9J,GAAO+J,SACvCF,EAAIzH,QAAUwH,EAASE,YAAYnH,GAAaoH,SAChDC,QAAQH,IAAII,KAAKC,UAAUL,QAyI7B,OAtIAM,qBAAU,WACR,IAAIC,EAAKlB,GAAOmB,QACZ9N,EAAQ2K,EAAUmD,QAClBC,EAAQnD,EAAUkD,QAgHtB,SAASE,EAAYC,GACnB,IAAIC,EAAQD,EAAE3L,IAAI6L,cAClBN,EAAGK,IAAS,EAjHd,SAAiBA,EAAOD,GAMtB,GAJIJ,EAAG,IACLT,MAGEa,EAAEG,QAoBN,OAPIlB,GAAMmB,SAASH,IACjBD,EAAEK,iBAGAT,EAAGhO,GAAGgN,KACNgB,EAAGlO,GAAGoN,KAEG,WAATjC,GACE+C,EAAG1N,GAAG6K,EAAW,EAAE,EAAG,IACtB6C,EAAGU,GAAGvD,EAAW,CAAC,EAAG,IACrB6C,EAAGW,GAAGxD,EAAW,CAAC,GAAI,IACtB6C,EAAGY,GAAGzD,EAAW,CAAC,EAAG,IACrB6C,EAAGa,WAAW/C,EAAU,CAAE3L,QAAOkD,KAAM,EAAE,EAAG,KAC5C2K,EAAGc,YAAYhD,EAAU,CAAE3L,QAAOkD,KAAM,CAAC,EAAG,KAC5C2K,EAAGe,SAASjD,EAAU,CAAE3L,QAAOkD,KAAM,CAAC,GAAI,KAC1C2K,EAAGgB,WAAWlD,EAAU,CAAE3L,QAAOkD,KAAM,CAAC,EAAG,KAEjC,MAAVgL,GAAenD,EAAQ,UACb,MAAVmD,GAAejC,IACL,WAAViC,GAAoB1B,KAEpBqB,EAAG,MAAMnC,EAAW,CAAE1L,QAAOyI,KAAM,EAAGC,KAAM,QAC5CmF,EAAG,MAAMnC,EAAW,CAAE1L,QAAOyI,MAAO,EAAGC,KAAM,QAC7CmF,EAAG,MAAMnC,EAAW,CAAE1L,QAAOyI,MAAO,EAAGC,KAAM,QAE7CmF,EAAE,GAAO1C,EAAY,UACrB0C,EAAE,GAAO1C,EAAY,cACrB0C,EAAE,GAAO1C,EAAY,UAEX,MAAV+C,GACFY,GAAa9O,EAAO+N,EAAOtB,GAAUC,GAAYqC,KAAK,KAAM,KAE1DlB,EAAGnI,GAAGyC,KACN0F,EAAGmB,GAAG/B,KAENY,EAAGI,GAAGpC,EAAc,CAAE7L,UACtB6N,EAAGoB,GAAGrD,EAAa,CAAE5L,UACrB6N,EAAGnT,GAAGoR,EAAY,CAAE9L,UACpB6N,EAAGqB,GAAGnD,EAAY,CAAE/L,UACpB6N,EAAGzE,GAAG4C,EAAY,CAAEhM,UACpB6N,EAAGsB,GAAG5C,KAGNsB,EAAGuB,GAAG3D,GAAgBD,GACtBqC,EAAGwB,GAAG9D,GAAaD,GACnBuC,EAAGrN,GAAG6K,GAAgBD,GAGtByC,EAAG/N,IAAGE,EAAMsP,SAAU,GAGtBzB,EAAGhO,GAAGgN,KACNgB,EAAGjO,GAAGmN,KAENc,EAAG,MAAMzB,KACTyB,EAAG,MAAM1B,IACT0B,EAAG,MAAMvB,KACTuB,EAAG,MAAMxB,UAEC,MAAV6B,GAAenD,EAAQ,kBAET,WAATD,GACL+C,EAAG1N,GAAG+K,EAAa,EAAE,EAAG,IACxB2C,EAAGU,GAAGrD,EAAa,CAAC,EAAG,IACvB2C,EAAGW,GAAGtD,EAAa,CAAC,GAAI,IACxB2C,EAAGY,GAAGvD,EAAa,CAAC,EAAG,IACvB2C,EAAGa,WAAWxD,EAAa,EAAE,EAAG,IAChC2C,EAAGgB,WAAW3D,EAAa,CAAC,EAAG,IAC/B2C,EAAGe,SAAS1D,EAAa,CAAC,GAAI,IAC9B2C,EAAGc,YAAYzD,EAAa,CAAC,EAAG,IAEtB,WAAVgD,GAAoB1B,KACV,MAAV0B,GAAejC,IACL,MAAViC,GAAenD,EAAQ,eACvB8C,EAAG0B,OAAOxE,EAAQ,YAEJ,iBAATD,GACL+C,EAAG1N,GAAG+L,EAAY,EAAE,EAAG,IACvB2B,EAAGU,GAAGrC,EAAY,CAAC,EAAG,IACtB2B,EAAGW,GAAGtC,EAAY,CAAC,GAAI,IACvB2B,EAAGY,GAAGvC,EAAY,CAAC,EAAG,IACtB2B,EAAGa,WAAWxC,EAAY,EAAE,EAAG,IAC/B2B,EAAGgB,WAAW3C,EAAY,CAAC,EAAG,IAC9B2B,EAAGe,SAAS1C,EAAY,CAAC,GAAI,IAC7B2B,EAAGc,YAAYzC,EAAY,CAAC,EAAG,IAErB,MAAVgC,GAAenD,EAAQ,eACvB8C,EAAG0B,OAAOxE,EAAQ,iBAXjB,EAxFL,GAAImC,GAAMmB,SAASH,GAAQ,CAAC,IAAD,EACzBD,EAAEK,iBACF,IAAIkB,EAAc,CAAC,EAAG,GACR,MAAVtB,GAA2B,cAAVA,IAAuBsB,EAAY,IAAM,IAChD,MAAVtB,GAA2B,cAAVA,IAAuBsB,EAAY,IAAM,IAChD,MAAVtB,GAA2B,YAAVA,IAAqBsB,EAAY,IAAM,IAC9C,MAAVtB,GAA2B,eAAVA,IAAwBsB,EAAY,IAAM,KAC/D,EAAAC,QAAOC,SAAP,QAAmBF,IAoGvBG,CAAQzB,EAAOD,GAGjB,SAAS2B,EAAU3B,GACjB,IAAIC,EAAQD,EAAE3L,IAAI6L,cAClBN,EAAGK,IAAS,EAKd,OAFAuB,OAAOI,iBAAiB,UAAW7B,GACnCyB,OAAOI,iBAAiB,QAASD,GAC1B,WACLH,OAAOK,oBAAoB,UAAW9B,GACtCyB,OAAOK,oBAAoB,QAASF,MAErC,CAAC9E,EAAMQ,EAAUF,EAAaI,IAE1B,M,oBCKMuE,OApLf,YAAuD,IAAtCC,EAAqC,EAArCA,WAAYrF,EAAyB,EAAzBA,UAAWsF,EAAc,EAAdA,WAClCC,EAAYtD,iBAAO,CACrBrL,IAAK,CAAC,EAAG,GACT4O,MAAM,EACNC,WAAY,KACZC,YAAa,CAAC,EAAG,KAEfpQ,EAAYqQ,YAAepL,GAC3ByG,EAAYV,YAAkBrF,GAC9BtB,EAASgM,YAAe9N,GACxB+B,EAAO+L,YAAe7M,GACtBqH,EAAOwF,YAAe5N,GACtB6N,EAAYtF,YAAkBrG,GAC9B8G,EAAaT,YAAkBzC,IAC/BiE,EAAWxB,YAAkB/G,GAC7BwI,EAAczB,YAAkB1D,GAfgB,EAgBrBiJ,eAiK/B,OAjLoD,EAgB9CC,WAhB8C,EAgBlCC,SAElB9C,qBAAU,WACR,SAAS+C,EAAqBC,GAE5B,IAFwC,IAAD,cACxBA,EADwB,GAClCC,EADkC,KAC9BC,EAD8B,KAE9BrL,EAAI,EAAGA,EAAIxF,EAAUC,OAAQuF,IAAK,CACzC,IAAI7D,EAAW3B,EAAUwF,GADgB,cAEtB7D,EAFsB,GAEpCjC,EAFoC,KAEjCC,EAFiC,KAE9BE,EAF8B,KAE3BK,EAF2B,KAGrC4Q,EAAMtL,EAAIlB,EACVyM,EAAM1T,KAAK8H,MAAMK,EAAIlB,GACzB,GAAIsM,GAAMlR,GAAKkR,GAAMlR,EAAIG,GAAKgR,GAAMlR,GAAKkR,GAAMlR,EAAIO,EACjD,MAAO,CAAC4Q,EAAKC,IAKnB,IAAIC,EAASjB,EAAWlC,QACpBnM,EAAQuO,EAAUpC,QAClB9N,EAAQ2K,EAAUmD,QACTmC,EAAWnC,QAExB,SAASoD,EAAUjD,GAEjB,GADAA,EAAEK,iBACEL,EAAEkD,UAAYxP,EAAMJ,IAAI,IAAM0M,EAAEmD,UAAYzP,EAAMJ,IAAI,GAAI,CAC5D,GAAII,EAAM0P,OAAQ,CAChB,IAAIlO,EAAK8K,EAAEkD,QAAUxP,EAAM0O,YAAY,GACnCjN,EAAK6K,EAAEmD,QAAUzP,EAAM0O,YAAY,GAGvC,OAFAZ,OAAOC,UAAUvM,GAAKC,GACtBzB,EAAM0O,YAAc,CAACpC,EAAEkD,QAASlD,EAAEmD,UAC3B,EAET,IAAIE,EAAOrD,EAAEsD,OAAOC,wBAChB7R,EAAIsO,EAAEkD,QAAUG,EAAKG,KACrB7R,EAAIqO,EAAEmD,QAAUE,EAAKI,IACzB,GAAI/P,EAAMwO,KACR,GAAa,WAATrF,EAAmB,CAAC,IAAD,cACExG,EADF,GAChBqN,EADgB,KACZC,EADY,KACRC,EADQ,KACJC,EADI,OAENnB,EAAqBhP,EAAMJ,KAFrB,mBAEhBsP,EAFgB,KAEZC,EAFY,KAGjBiB,EAAMJ,EAAKE,EAAK,EAChBG,EAAMJ,EAAKE,EAAK,EAChBG,EAAK3U,KAAKqH,IAAIkM,EAAIc,GAClBO,EAAK5U,KAAKqH,IAAImM,EAAIc,GAClBO,EAAM7U,KAAKiG,IAAIsN,EAAIkB,GACnBK,EAAM9U,KAAKiG,IAAIuN,EAAIkB,GAGvBzB,EAAU,CAAC0B,EAAIC,EAFPC,EAAMF,EAAK,EACXG,EAAMF,EAAK,QAEd,CACL,IAAI/O,EAAKxD,EAAIgC,EAAMJ,IAAI,GACnB6B,EAAKxD,EAAI+B,EAAMJ,IAAI,GACvBoK,EAAU,CAAE3L,QAAOkD,KAAM,CAACC,EAAIC,KAGlCzB,EAAMJ,IAAM,CAAC5B,EAAGC,IAGpB,SAASyS,EAAUpE,GAGjB,GAFAA,EAAEK,iBAEEL,EAAEG,QAIJ,OAHAzM,EAAM0P,QAAS,EACfJ,EAAOqB,kBAAkBrE,EAAEsE,WAC3B5Q,EAAM0O,YAAc,CAACpC,EAAEkD,QAASlD,EAAEmD,UAC3B,EAET,IAAIE,EAAOrD,EAAEsD,OAAOC,wBAChB7R,EAAIsO,EAAEkD,QAAUG,EAAKG,KACrB7R,EAAIqO,EAAEmD,QAAUE,EAAKI,IAEzB,GADA/P,EAAMJ,IAAM,CAAC5B,EAAGC,GACH,WAATkL,EAAmB,CAAC,IAAD,cACExG,EADF,0BAEFqM,EAAqBhP,EAAMJ,MAFzB,mBAEhBiR,EAFgB,KAEVC,EAFU,KAGrBlC,EAAU,CAACiC,EAAMC,EAAM,EAAG,IAC1B9Q,EAAMwO,MAAO,OACR,GAAa,WAATrF,EAAmB,CAAC,IAAD,cACLxG,EADK,GACvBqN,EADuB,KACnBC,EADmB,KACfC,EADe,KACXC,EADW,OAETnB,EAAqBhP,EAAMJ,KAFlB,mBAEvBiR,EAFuB,KAEjBC,EAFiB,KAGxBD,GAAQb,GAAMa,EAAOb,EAAKE,GAAMY,GAAQb,GAAMa,EAAOb,EAAKE,GAG5DvB,EAAU,CACRiC,EAAOlV,KAAKoV,OAAOb,EAAK,GAAK,GAC7BY,EAAOnV,KAAKoV,OAAOZ,EAAK,GAAK,GAC7BD,EACAC,IANFnQ,EAAMwO,MAAO,EAWjBc,EAAOqB,kBAAkBrE,EAAEsE,WAE7B,SAASI,EAAQ1E,GACfA,EAAEK,iBAEF3M,EAAMwO,MAAO,EACbxO,EAAM0P,QAAS,EACfJ,EAAO2B,sBAAsB3E,EAAEsE,WAEjC,SAASM,EAAW5E,GAGlB,GAFAA,EAAEK,iBAEW,WAATxD,EAAmB,CACrB,IAAIrC,EAAOwF,EAAE6E,OAAS,GAAK,EAAI,EAE3BvV,EAAMD,KAAKC,IAAI0Q,EAAE6E,QAMrBpH,EAAW,CAAE1L,QAAOyI,OAAMC,KALtBnL,EAAM,GACD,MAEA,EAAaA,EAAM,GAAf,QAMjB,SAASwV,EAAO9E,GACdA,EAAEK,iBACFL,EAAE+E,kBACF,IAAIC,EAAOhF,EAAEiF,aAAaC,MAAM,GAE5BC,GADWH,EAAKI,KAAOJ,EAAKI,KAAOJ,EAAKnQ,MAAOmQ,EAAKnQ,KAC9CwQ,IAAIC,gBAAgBN,IAC9BO,GAAUxT,EAAOoT,EAAK3G,GAGxB,SAASgH,EAAOxF,GACdA,EAAE+E,kBACF/E,EAAEK,iBACFL,EAAEiF,aAAaQ,WAAa,OAG9B,SAASC,EAAQ1F,GACfA,EAAEK,iBACFL,EAAE+E,kBACFvF,QAAQH,IAAI,SAHM,oBAICW,EAAE2F,cAAcC,OAJjB,IAIlB,2BAA0C,CAAC,IAAhCC,EAA+B,QACxC,KAAIA,EAAKC,KAAKC,QAAQ,SAAW,GAAjC,CAGA,IAAIf,EAAOa,EAAKG,YACZb,EAAME,IAAIC,gBAAgBN,GAC9BO,GAAUxT,EAAOoT,EAAK3G,EAAUC,EAAYqC,KAAK,KAAM,OAVvC,+BAqBpB,OAPAkC,EAAOpB,iBAAiB,cAAeqB,GACvCD,EAAOpB,iBAAiB,cAAewC,GACvCpB,EAAOpB,iBAAiB,YAAa8C,GACrC1B,EAAOpB,iBAAiB,QAASgD,EAAY,CAAEqB,SAAS,IACxDzE,OAAOI,iBAAiB,QAAS8D,GACjClE,OAAOI,iBAAiB,WAAY4D,GACpChE,OAAOI,iBAAiB,OAAQkD,GACzB,WACL9B,EAAOnB,oBAAoB,cAAeoB,GAC1CD,EAAOnB,oBAAoB,cAAeuC,GAC1CpB,EAAOnB,oBAAoB,YAAa6C,GACxC1B,EAAOnB,oBAAoB,QAAS+C,GACpCpD,OAAOK,oBAAoB,QAAS6D,GACpClE,OAAOK,oBAAoB,WAAY2D,GACvChE,OAAOK,oBAAoB,OAAQiD,MAEpC,CAAC9S,EAAW6K,EAAMkF,EAAY1L,EAAQC,IAElC,MCqBM4P,OAjNf,YAAkC,IAC5BnU,EAD2B,EAAb2K,UACImD,QAClBrB,EAAWxB,YAAkB/G,GAC7BwH,EAAaT,YAAkBzC,IAC/BkE,EAAczB,YAAkB1D,GAChCsE,EAAgBZ,YAAkB3D,GAClCsE,EAAeX,YAAkB1E,GAEjCgG,GADctB,YAAkBlE,GACpBkE,YAAkB9E,IAC9BoK,EAAYtF,YAAkBrG,GAC9BuH,EAASlB,YAAkBjC,IAC3BoD,EAASnB,YAAkBlB,IAC3BsC,EAASpB,YAAkBhB,IAC3BqC,EAASrB,YAAkBT,IAC3BrC,EAAO8C,YAAkBhD,IACzBgF,EAAQhC,YAAkB5C,IAyL9B,OACE,gCACE,cAAC+L,GAAD,CAAWC,KAAK,UAAUC,MA/I9B,WACE,IAEIC,EAFW,EAEWvU,EAAMuE,KAC5BiQ,EAFW,EAEWxU,EAAMwE,KAChC,GAAI+P,EAAW,EACb,IAAK,IAAI9O,EAAI,EAAGA,EAAI8O,EAAU9O,IAC5B0G,IAGJ,GAAIoI,EAAW,EACb,IAAK,IAAI9O,EAAI,EAAGA,EAAInI,KAAKC,IAAIgX,GAAW9O,IACtC2G,IAGJ,GAAIoI,EAAW,EACb,IAAK,IAAI/O,EAAI,EAAGA,EAAI+O,EAAU/O,IAC5B4G,IAGJ,GAAImI,EAAW,EACb,IAAK,IAAI/O,EAAI,EAAGA,EAAInI,KAAKC,IAAIiX,GAAW/O,IACtC6G,IAGJkH,GACExT,EACyB,kBACzByM,EACAC,EAAYqC,KAAK,KAAM,CAAEzK,OAAQ,CAAC,EAAG,EAAG,EAAG,MAC3C,WACEiM,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBhE,IACAX,EAAa,CAAE5L,aAGnBwT,GACExT,EACyB,oBACzByM,EACAC,EAAYqC,KAAK,KAAM,CAAEzK,OAAQ,CAAC,EAAG,EAAG,EAAG,MAC3C,WACEiM,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBhE,IACAX,EAAa,CAAE5L,aAGnBwT,GACExT,EACyB,mBACzByM,EACAC,EAAYqC,KAAK,KAAM,CAAEzK,OAAQ,CAAC,EAAG,EAAG,EAAG,MAC3C,WACEiM,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBhE,IACAX,EAAa,CAAE5L,gBAyFjB,cAACoU,GAAD,CAAWC,KAAK,SAASC,MA1L7B,WACE,IAEIC,EAFW,EAEWvU,EAAMuE,KAC5BiQ,EAFW,EAEWxU,EAAMwE,KAChC,GAAI+P,EAAW,EACb,IAAK,IAAI9O,EAAI,EAAGA,EAAI8O,EAAU9O,IAC5B0G,IAGJ,GAAIoI,EAAW,EACb,IAAK,IAAI9O,EAAI,EAAGA,EAAInI,KAAKC,IAAIgX,GAAW9O,IACtC2G,IAGJ,GAAIoI,EAAW,EACb,IAAK,IAAI/O,EAAI,EAAGA,EAAI+O,EAAU/O,IAC5B4G,IAGJ,GAAImI,EAAW,EACb,IAAK,IAAI/O,EAAI,EAAGA,EAAInI,KAAKC,IAAIiX,GAAW/O,IACtC6G,IAGJkH,GACExT,EACyB,kBACzByM,EACAC,EAAYqC,KAAK,KAAM,CAAEzK,OAAQ,CAAC,EAAG,EA5BxB,EACA,MA4Bb,WACEiM,EAAU,CAAC,EAAG,EA9BH,EACA,IA8BXhE,IACAb,EAAW,CAAE1L,QAAOyI,KAAM,EAAGC,KAAM,MACnC6H,EAAU,CAAC,EAAG,EAAGkE,EAhCN,IAiCX7I,EAAa,CAAE5L,UACfuQ,EAAU,CAAC,EAAG,EAAGkE,EAlCN,IAmCX5I,EAAc,CAAE7L,gBAsJlB,cAACoU,GAAD,CAAWC,KAAK,QAAQC,MArF5B,WACE,IAEIC,EAFW,EAEWvU,EAAMuE,KAC5BiQ,EAFW,EAEWxU,EAAMwE,KAChC,GAAI+P,EAAW,EACb,IAAK,IAAI9O,EAAI,EAAGA,EAAI8O,EAAU9O,IAC5B0G,IAGJ,GAAIoI,EAAW,EACb,IAAK,IAAI9O,EAAI,EAAGA,EAAInI,KAAKC,IAAIgX,GAAW9O,IACtC2G,IAGJ,GAAIoI,EAAW,EACb,IAAK,IAAI/O,EAAI,EAAGA,EAAI+O,EAAU/O,IAC5B4G,IAGJ,GAAImI,EAAW,EACb,IAAK,IAAI/O,EAAI,EAAGA,EAAInI,KAAKC,IAAIiX,GAAW/O,IACtC6G,IAGJkH,GACExT,EACyB,mBACzByM,EACAC,EAAYqC,KAAK,KAAM,CAAEzK,OAAQ,CAAC,EAAG,EAAG,EAAG,MAC3C,WACEiM,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBhE,IACAb,EAAW,CAAE1L,QAAOyI,KAAM,EAAGC,KAAM,IACnCmD,EAAc,CAAE7L,UAChBmI,IACAoI,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,IACAsD,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,IACAsD,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,IACAsD,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,IACAsD,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,IACAsD,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,IACAsD,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,IACAsD,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,OAGJuG,GACExT,EACyB,0BACzByM,EACAC,EAAYqC,KAAK,KAAM,CAAEzK,OAAQ,CAAC,EAAG,EAAG,EAAG,MAC3C,WACEiM,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBhE,IACAb,EAAW,CAAE1L,QAAOyI,KAAM,EAAGC,KAAM,IACnCmD,EAAc,CAAE7L,UAChBmI,IACAoI,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,IACAsD,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,IACAsD,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,IACAsD,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,IACAsD,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,IACAsD,EAAU,CAAC,EAAG,EAAG,EAAG,IACpBtD,cC1LR,SAASyH,GAAQC,GACf,OACE,qBAAKC,UAAU,UAAUC,MAAO,CAAEC,aAAc,GAAhD,SACGH,EAAMI,SAASC,gBAKf,SAASC,GAAKN,GACnB,OAAO,qBAAKE,MAAO,CAAEC,aAAc,GAA5B,SAAkCH,EAAMI,WAG1C,SAASG,GAAIP,GAClB,OAAO,qBAAKE,MAAO,CAAEC,aAAc,EAAGK,MAAO,QAAtC,SAAiDR,EAAMI,WAOzD,SAASK,KACd,OAAO,qBAAKP,MAAO,CAAEQ,MAAO,OAAQC,OAAQ,KA2b/BC,OAxbf,YAAgE,IAA7C5K,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,UAAWtQ,EAAsB,EAAtBA,OACnCkb,GADyD,EAAdC,WAC5BnF,YAAe1M,IAD2B,EAEvCiH,YAAenI,GAFwB,mBAExDoI,EAFwD,KAElDC,EAFkD,OAG/BF,YAAejD,IAHgB,mBAGxDe,EAHwD,KAG9CwC,EAH8C,OAIzBN,YAAehD,IAJU,mBAIxDuD,EAJwD,KAI3CC,EAJ2C,OAK/BR,YAAe/C,IALgB,mBAKxDwD,EALwD,KAK9CC,EAL8C,OAMzBV,YAAe9C,IANU,mBAMxDyD,EANwD,KAM3CC,EAN2C,KAOzDT,EAAaC,YAAkBlG,GAC/BmG,EAAeD,YAAkBjG,GACjC0G,EAAaT,YAAkBzC,IAC/BmD,EAAYV,YAAkBrF,GAC9BgG,EAAeX,YAAkB1E,GACjCsF,EAAgBZ,YAAkB3D,GAClCwE,EAAcb,YAAkBlE,GAChCgF,EAAcd,YAAkB/D,GAChC8E,EAAcf,YAAkB5D,GAChC4E,GAAYhB,YAAkBnG,GAC9BqD,GAAO8C,YAAkBhD,IACzBgF,GAAQhC,YAAkB5C,IAC1B8D,GAASlB,YAAkBjC,IAC3BoD,GAASnB,YAAkBlB,IAC3BsC,GAASpB,YAAkBhB,IAC3BqC,GAASrB,YAAkBT,IAC3B+B,GAAYtB,YAAkB9E,GAC9BqG,GAAevB,YAAkB/E,GACjCuG,GAAWxB,YAAkB/G,GAC7BwI,GAAczB,YAAkB1D,GAChC2E,GAAcjB,YAAkBhI,GAEhC4J,IADSD,iBAAO,IACTE,gBACPC,GAAOC,eACP0I,GAAmB9I,iBAAO,MAE1B+I,GAAkB,WAAT7K,EACT9K,GAAQ2K,EAAUmD,QAClBC,GAAQnD,EAAUkD,QAElB8H,GAAY,CACdC,SAAU,QACVC,MAAO,EACPR,OAAQ,OACR5D,IAAK,EACL2D,MAAOG,EACPO,SAAU,OACVC,WAAY,OACZC,WAAY,QAmBd,OAPArI,qBAAU,WACyB,OAA7B8H,GAAiB5H,SAEnB4H,GAAiB5H,QAAQoI,SAAS,EAAG,KAEtC,CAACpL,EAAM4K,KAGR,qBAAKS,IAAKT,GAAkBb,MAAOva,EAlBlB,CACjBub,SAAU,QACVpE,KAAM,EACN2E,OAAQ,EACRd,OAAQ,IACRS,SAAU,OACVC,WAAY,OACZC,WAAY,QAW+CL,GAA3D,SACE,qBACEf,MAAO,CACLwB,QAAS,GACTJ,WAAY,QAHhB,SAMGN,GACC,gCACE,cAACjB,GAAD,oCACA,8BACE,cAAC4B,GAAD,CACEjC,KAAK,mBACLkC,QAAQ,IACRC,QAASb,GACTrB,MAAOvJ,EAAQgE,KAAK,KAAM,cAG9B,cAACkG,GAAD,0CACA,8BACE,cAACwB,GAAD,CACEpC,KAAK,WACLqC,SAAS,SACTC,SAAS,IACTrC,MAAOpJ,EAAa6D,KAAK,KAAM,EAAE,EAAG,QAGxC,8BACE,cAAC0H,GAAD,CACEpC,KAAK,QACLqC,SAAS,SACTC,SAAS,IACTrC,MAAOpJ,EAAa6D,KAAK,KAAM,EAAE,EAAG,QAGxC,8BACE,cAAC0H,GAAD,CACEpC,KAAK,UACLqC,SAAS,SACTC,SAAS,IACTrC,MAAOpJ,EAAa6D,KAAK,KAAM,CAAC,GAAI,QAGxC,8BACE,cAAC0H,GAAD,CACEpC,KAAK,SACLqC,SAAS,SACTC,SAAS,IACTrC,MAAOpJ,EAAa6D,KAAK,KAAM,CAAC,EAAG,QAGvC,cAACkG,GAAD,qBACA,8BACE,cAACb,GAAD,CACEC,KAAK,aACLkC,QAAQ,QACRjC,MAAOvJ,EAAQgE,KAAK,KAAM,cAG9B,eAACmG,GAAD,WACE,uCADF,kHAKS,iBAATpK,EACF,gCACE,cAAC4J,GAAD,4BACA,cAAC4B,GAAD,CACEjC,KAAK,gBACLkC,QAAQ,IACRC,QAAkB,iBAAT1L,EACTwJ,MAAOvJ,EAAQgE,KAAK,KAAM,YAE5B,8BACE,cAAC0H,GAAD,CACEpC,KAAK,WACLqC,SAAS,SACTC,SAAS,IACTrC,MAAOpI,GAAY6C,KAAK,KAAM,EAAE,EAAG,QAGvC,8BACE,cAAC0H,GAAD,CACEpC,KAAK,QACLqC,SAAS,SACTC,SAAS,IACTrC,MAAOpI,GAAY6C,KAAK,KAAM,CAAC,EAAG,QAGtC,8BACE,cAAC0H,GAAD,CACEpC,KAAK,UACLqC,SAAS,SACTC,SAAS,IACTrC,MAAOpI,GAAY6C,KAAK,KAAM,CAAC,GAAI,QAGvC,8BACE,cAAC0H,GAAD,CACEpC,KAAK,SACLqC,SAAS,SACTC,SAAS,IACTrC,MAAOpI,GAAY6C,KAAK,KAAM,CAAC,EAAG,QAGtC,cAACkG,GAAD,qBACA,8BACE,cAACb,GAAD,CACEC,KAAK,aACLkC,QAAQ,QACRjC,MAAOvJ,EAAQgE,KAAK,KAAM,cAG9B,cAACqG,GAAD,IACA,cAACH,GAAD,+EAGA,gCACE,cAACwB,GAAD,CACEpC,KAAK,GACLqC,SAAS,cACTC,SAAS,SACTrC,MAAO7E,OAAOC,SAASX,KAAK,MAAO,GAAI,KAEzC,cAAC0H,GAAD,CACEpC,KAAK,GACLqC,SAAS,cACTC,SAAS,SACTrC,MAAO7E,OAAOC,SAASX,KAAK,KAAM,GAAI,KAExC,cAAC0H,GAAD,CACEpC,KAAK,GACLqC,SAAS,cACTC,SAAS,SACTrC,MAAO7E,OAAOC,SAASX,KAAK,KAAM,GAAI,MAExC,cAAC0H,GAAD,CACEpC,KAAK,GACLqC,SAAS,cACTC,SAAS,SACTrC,MAAO7E,OAAOC,SAASX,KAAK,KAAM,EAAG,YAK3C,gCACE,cAACkG,GAAD,qEACA,cAACG,GAAD,IACA,cAACV,GAAD,uBACA,cAAC,GAAD,CAAU/J,UAAWA,IACrB,cAACyK,GAAD,IACA,cAACV,GAAD,qBACA,gCACE,cAACO,GAAD,wCACA,cAACb,GAAD,CACEC,KAAK,SACLkC,QAAQ,IACRjC,MAAOtJ,EAAW+D,KAAK,KAAM,EAAE,EAAG,MAEpC,cAACqF,GAAD,CACEC,KAAK,SACLkC,QAAQ,IACRjC,MAAOtJ,EAAW+D,KAAK,KAAM,CAAC,EAAG,MAEnC,cAACqF,GAAD,CACEC,KAAK,SACLkC,QAAQ,IACRjC,MAAOtJ,EAAW+D,KAAK,KAAM,CAAC,GAAI,MAEpC,cAACqF,GAAD,CACEC,KAAK,SACLkC,QAAQ,IACRjC,MAAOtJ,EAAW+D,KAAK,KAAM,CAAC,EAAG,SAGrC,cAACkG,GAAD,oCACA,gCACE,cAACqB,GAAD,CACEjC,KAAK,mBACLkC,QAAQ,IACRC,QAASb,GACTrB,MAAOvJ,EAAQgE,KAAK,KAAM,YAE5B,gCACE,cAACqF,GAAD,CAAWC,KAAK,aAAakC,QAAQ,IAAIjC,MAAOrI,KAChD,cAACmI,GAAD,CAAWC,KAAK,QAAQkC,QAAQ,SAASjC,MAAO9H,WAGpD,cAAC4I,GAAD,IACA,cAACV,GAAD,kBACA,cAACO,GAAD,oCACA,gCACE,cAACb,GAAD,CACEC,KAAK,GACLkC,QAAQ,SACRjC,MAAO3I,EAAUoD,KAAK,KAAM,CAAE/O,SAAOkD,KAAM,CAAC,EAAG,OAEjD,cAACkR,GAAD,CACEC,KAAK,GACLkC,QAAQ,SACRjC,MAAO3I,EAAUoD,KAAK,KAAM,CAAE/O,SAAOkD,KAAM,CAAC,EAAG,OAEjD,cAACkR,GAAD,CACEC,KAAK,GACLkC,QAAQ,SACRjC,MAAO3I,EAAUoD,KAAK,KAAM,CAAE/O,SAAOkD,KAAM,CAAC,GAAI,OAElD,cAACkR,GAAD,CACEC,KAAK,GACLkC,QAAQ,SACRjC,MAAO3I,EAAUoD,KAAK,KAAM,CAAE/O,SAAOkD,KAAM,EAAE,EAAG,UAGpD,cAACkS,GAAD,IACA,cAACV,GAAD,mBACA,cAACO,GAAD,4BACA,gCACE,cAACb,GAAD,CACEC,KAAK,KACLkC,QAAQ,IACRjC,MAAO5I,EAAWqD,KAAK,KAAM,CAAE/O,SAAOyI,MAAO,EAAGC,KAAM,UAExD,cAAC0L,GAAD,CACEC,KAAK,MACLkC,QAAQ,IACRjC,MAAO5I,EAAWqD,KAAK,KAAM,CAAE/O,SAAOyI,KAAM,EAAGC,KAAM,aAGzD,cAACuM,GAAD,0BACA,gCACE,cAACqB,GAAD,CACEjC,KAAK,SACLkC,QAAQ,IACRC,QAAsB,WAAb7N,EACT2L,MAAOnJ,EAAY4D,KAAK,KAAM,YAEhC,cAACuH,GAAD,CACEjC,KAAK,aACLkC,QAAQ,IACRC,QAAsB,eAAb7N,EACT2L,MAAOnJ,EAAY4D,KAAK,KAAM,gBAEhC,cAACuH,GAAD,CACEjC,KAAK,SACLkC,QAAQ,IACRC,QAAsB,WAAb7N,EACT2L,MAAOnJ,EAAY4D,KAAK,KAAM,eAGlC,cAACqG,GAAD,IACA,cAACV,GAAD,sCACA,cAACkC,GAAD,CACEvC,KAAK,aACLkC,QAAQ,IACRjC,MAAOxF,GAAaC,KAClB,KACA/O,GACA+N,GACAtB,GACAC,GAAYqC,KAAK,KAAM,OAG3B,eAACkG,GAAD,wCAEE,uBAFF,oCAKA,cAACG,GAAD,IACA,cAACV,GAAD,yBACA,cAACU,GAAD,IACA,cAAChB,GAAD,CAAWC,KAAK,OAAOkC,QAAQ,IAAIjC,MAAOnM,KAC1C,cAACiM,GAAD,CAAWC,KAAK,QAAQkC,QAAQ,IAAIjC,MAAOrH,KAC3C,cAACyH,GAAD,2BACA,cAACN,GAAD,CACEC,KAAK,UACLkC,QAAQ,IACRjC,MAAOzI,EAAckD,KAAK,KAAM,CAAE/O,aAEpC,cAACoU,GAAD,CACEC,KAAK,SACLkC,QAAQ,IACRjC,MAAO1I,EAAamD,KAAK,KAAM,CAAE/O,aAEnC,cAACoU,GAAD,CACEC,KAAK,QACLkC,QAAQ,IACRjC,MAAOxI,EAAYiD,KAAK,KAAM,CAAE/O,aAElC,cAACoU,GAAD,CACEC,KAAK,OACLkC,QAAQ,IACRjC,MAAOvI,EAAYgD,KAAK,KAAM,CAAE/O,aAElC,cAACoU,GAAD,CACEC,KAAK,OACLkC,QAAQ,IACRjC,MAAOtI,EAAY+C,KAAK,KAAM,CAAE/O,aAElC,cAACoU,GAAD,CACEC,KAAK,aACLkC,QAAQ,IACRjC,MAAO/H,GAAUwC,KAAK,KAAM/O,MAE9B,cAACoV,GAAD,IACA,cAACV,GAAD,mBACA,cAAC4B,GAAD,CACEjC,KAAK,UACLkC,QAAQ,IACRC,QAAShL,EACT8I,MAAO7I,EAAesD,KAAK,MAAMvD,KAEnC,cAAC8K,GAAD,CACEjC,KAAK,YACLkC,QAAQ,IACRC,QAASlL,EACTuL,WAAUrL,EACV8I,MAAO/I,EAAYwD,KAAK,MAAMzD,KAEhC,cAACgL,GAAD,CACEjC,KAAK,mBACLkC,QAAQ,IACRM,WAAUrL,EACVgL,QAASpL,EACTkJ,MAAOjJ,EAAe0D,KAAK,MAAM3D,KAEnC,cAACgK,GAAD,IACA,cAACV,GAAD,yBACA,cAACU,GAAD,IACA,cAAChB,GAAD,CACEC,KAAK,aACLkC,QAAQ,IACRjC,MAAO,WACLtU,GAAMsP,SAAU,KAGpB,cAACoF,GAAD,wBACA,cAACU,GAAD,IACA,cAAChB,GAAD,CAAWC,KAAK,OAAOkC,QAAQ,IAAIjC,MAAOzH,KAC1C,cAACuH,GAAD,CAAWC,KAAK,OAAOkC,QAAQ,IAAIjC,MAAOvH,KAC1C,cAAC2H,GAAD,0BACA,cAACU,GAAD,IACA,yCAEE,cAAChB,GAAD,CAAWC,KAAK,SAASkC,QAAQ,IAAIjC,MAAOlI,KAC5C,cAACgI,GAAD,CAAWC,KAAK,MAAMkC,QAAQ,IAAIjC,MAAOnI,QAE3C,yCAEE,cAACiI,GAAD,CAAWC,KAAK,SAASkC,QAAQ,IAAIjC,MAAOhI,KAC5C,cAAC8H,GAAD,CAAWC,KAAK,MAAMkC,QAAQ,IAAIjC,MAAOjI,QAE3C,cAACqI,GAAD,4BACA,cAAC4B,GAAD,CACEjC,KAAK,gBACLkC,QAAQ,IACRC,QAAkB,iBAAT1L,EACTwJ,MAAOvJ,EAAQgE,KAAK,KAAM,kBAE5B,cAACqG,GAAD,IACA,cAACF,GAAD,uEACA,cAACE,GAAD,IACA,cAACV,GAAD,wBACA,cAACU,GAAD,IACA,cAACH,GAAD,UACE,mBAAG6B,KAAK,6BAA6BvF,OAAO,SAA5C,0CAaP,SAAS6C,GAAUO,GACxB,IAAIoC,EAAcnK,iBAAO,MACnByH,EAAyBM,EAAzBN,KAAMC,EAAmBK,EAAnBL,MAAOiC,EAAY5B,EAAZ4B,QA4BnB,OA3BA9G,OAAOuH,cAAgB,KAEvBpJ,qBAAU,WACR,IACIqJ,EADAC,EAAUH,EAAYjJ,QAE1B,SAASqJ,IACP1H,OAAOuH,cAAgBI,YAAY9C,EAAO,IAE5C,SAAS+C,EAAYpJ,GACnBqJ,cAAc7H,OAAOuH,eACrBC,EAAOM,WAAWJ,EAAa,KAC/B7C,IACA4C,EAAQ5E,kBAAkBrE,EAAEsE,WAE9B,SAASiF,EAAUvJ,GACjBwJ,aAAaR,GACbK,cAAc7H,OAAOuH,eACrBE,EAAQtE,sBAAsB3E,EAAEsE,WAIlC,OAFA2E,EAAQrH,iBAAiB,cAAewH,GACxCH,EAAQrH,iBAAiB,YAAa2H,GAC/B,WACLN,EAAQpH,oBAAoB,cAAeuH,GAC3CH,EAAQpH,oBAAoB,YAAa0H,MAE1C,IAGD,sBAAKrB,IAAKY,EAAanC,UAAU,SAAS8C,KAAK,SAA/C,UACY,KAATrD,EAAcA,EAAO,IAAM,GAC3BkC,EAAU,sBAAM3B,UAAU,UAAhB,SAA2B2B,IAAkB,MAKvD,SAASK,GAAcjC,GAC5B,IAAIoC,EAAcnK,iBAAO,MACnByH,EAAyBM,EAAzBN,KAAMC,EAAmBK,EAAnBL,MAAOiC,EAAY5B,EAAZ4B,QAEnB,OACE,sBAAKJ,IAAKY,EAAanC,UAAU,SAAS8C,KAAK,SAASC,QAASrD,EAAjE,UACY,KAATD,EAAcA,EAAO,IAAM,GAC5B,sBAAMO,UAAU,UAAhB,SAA2B2B,OAK1B,SAASE,GAAa9B,GAC3B,IAAIoC,EAAcnK,iBAAO,MACnByH,EAAoCM,EAApCN,KAAMC,EAA8BK,EAA9BL,MAAOoC,EAAuB/B,EAAvB+B,SAAUC,EAAahC,EAAbgC,SA2B7B,OAzBA/I,qBAAU,WACR,IACIqJ,EACAW,EAFAV,EAAUH,EAAYjJ,QAG1B,SAASqJ,IACPS,EAAWR,YAAY9C,EAAO,IAEhC,SAAS+C,EAAYpJ,GACnBiJ,EAAQ5E,kBAAkBrE,EAAEsE,WAC5B0E,EAAOM,WAAWJ,EAAa,KAC/B7C,IAEF,SAASkD,EAAUvJ,GACjBiJ,EAAQtE,sBAAsB3E,EAAEsE,WAChCkF,aAAaR,GACbK,cAAcM,GAIhB,OAFAV,EAAQrH,iBAAiB,cAAewH,GACxCH,EAAQrH,iBAAiB,YAAa2H,GAC/B,WACLN,EAAQpH,oBAAoB,cAAeuH,GAC3CH,EAAQpH,oBAAoB,YAAa0H,MAE1C,IAGD,sBAAKrB,IAAKY,EAAanC,UAAU,SAAS8C,KAAK,SAA/C,UACY,KAATrD,EAAcA,EAAO,IAAM,GAC5B,sBAAMO,UAAU,UAAhB,SAA2B8B,IAAiB,IAC5C,sBAAM9B,UAAU,SAAhB,gBAAmC,IACnC,sBAAMA,UAAU,UAAhB,SAA2B+B,OAK1B,SAASL,GAAgB3B,GAC9B,IAAIoC,EAAcnK,iBAAO,MACnByH,EAA4CM,EAA5CN,KAAMC,EAAsCK,EAAtCL,MAAOiC,EAA+B5B,EAA/B4B,QAASC,EAAsB7B,EAAtB6B,QAASK,EAAalC,EAAbkC,SAGrC,OACE,sBACEV,IAAKY,EACLnC,UAAS,wBAAmB4B,EAAU,SAAW,GAAxC,YACPK,EAAW,WAAa,IAE1Ba,KAAK,SACLC,QAASrD,EANX,UAQY,KAATD,EAAcA,EAAO,IAAM,GAC3BkC,EAAU,sBAAM3B,UAAU,UAAhB,SAA2B2B,IAAkB,QC9mBvD,SAASsB,GAAsB1b,EAAIG,EAAIF,EAAIG,GAChD,MAAO,CACL,CAACJ,EAAIG,GACL,CAACF,EAAIE,GACL,CAACH,EAAII,GACL,CAACJ,EAAII,GACL,CAACH,EAAIE,GACL,CAACF,EAAIG,IAIF,SAASub,GAAc9X,EAAO+X,EAAM5b,EAAIG,EAAIF,EAAIG,GACrD,IAAIyb,EAAOhY,EAAMgY,KACjB,OAAOA,EAAK,CACVC,KAAK,2LAQLC,KAAK,0PAULC,WAAY,CACVtC,SAAUgC,GAAsB1b,EAAIG,EAAIF,EAAIG,GAC5C6b,GAAI,CACF,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,KAGRC,SAAU,CACRC,QAASN,EAAKM,QAAQP,GACtB5C,MAAO,CAAC,EAAG,EAAG,EAAG,GACjBoD,gBAAiBP,EAAKQ,KAAK,oBAE7BC,MAAO,ICCX,IAAIC,GAAa,EACV,SAAS/O,KAEd,QADA+O,GAqDaC,OAjDf,WACE,IAAIhO,EAAYiC,iBAAO,CACrB3M,UAAW,GACXW,WAAY,GACZE,mBAAoB,GACpB8X,MAAO,GACP9W,iBAAkB,GAClBM,yBAA0B,GAC1ByW,UAAW,GACXC,YAAa,GACbxJ,SAAS,IAEP1E,EAAYgC,iBAAO,MACnBqD,EAAarD,iBAAO,MACpB6I,EAAa7I,kBAAO,GAExB,OACE,cAAC,IAAD,UACE,eAAC,KAAD,CAAgBmM,mBAAmB,EAAnC,UACE,uBACElE,MAAO,CAAEmE,QAAS,QAClBjF,KAAK,OACLkF,OAAO,UACP9C,IAAKvL,IAEP,cAACsO,GAAD,IACA,sBAAKrE,MAAO,CAAEgB,SAAU,WAAYsD,WAAY,EAAGC,UAAW,GAA9D,UACE,cAACC,GAAD,CACEpJ,WAAYA,EACZtF,UAAWA,EACX8K,WAAYA,IAEd,cAAC6D,GAAD,OAEF,cAACC,GAAD,CACE5O,UAAWA,EACXC,UAAWA,EACX6K,WAAYA,IAEd,cAAC,GAAD,CACE9K,UAAWA,EACXC,UAAWA,EACX6K,WAAYA,UAStB,SAAS8D,GAAT,GAAwD,IAArC3O,EAAoC,EAApCA,UAAWD,EAAyB,EAAzBA,UAAW8K,EAAc,EAAdA,WAAc,EACxCnF,YAAevN,GADyB,mBAChDjD,EADgD,UAErD,OAAOA,EAAIxF,EACT,cAAC,GAAD,CACEA,QAAQ,EACRqQ,UAAWA,EACXC,UAAWA,EACX6K,WAAYA,IAGd,cAAC,GAAD,CACE9K,UAAWA,EACXC,UAAWA,EACX6K,WAAYA,IAKlB,SAAS6D,KACP,IAAI9N,EAAc8E,YAAevI,IAC7BqD,EAAckF,YAAezI,IAC7ByD,EAAWgF,YAAexI,IAC1BgD,EAAOwF,YAAe5N,GAC1B,OACE,eAAC,IAAM8W,SAAP,WACGhO,EAAc,KAAOJ,EAAc,cAACqO,GAAD,IAAkB,KACrDjO,EAAc,KAAOF,EAAW,cAACoO,GAAD,IAAe,KAC/ClO,GAAwB,iBAATV,EAA0B,KAAO,cAAC6O,GAAD,IACvC,iBAAT7O,EAA0B,cAAC8O,GAAD,IAAmB,QAKpD,SAASV,KACP,IAAIW,EAAU5O,YAAkBlI,GAC5BmJ,EAAcjB,YAAkBjI,GAChC8W,EAAYxJ,YAAe3M,GAC3B6R,EAAelF,YAAe1M,GAsBlC,OApBAgK,qBAAU,WACR,SAASmM,IACP,IAAIja,EAAI2P,OAAOuK,WACX7Z,EAAIsP,OAAOwK,YACfJ,EAAQ,CAAC/Z,EAAGK,IAEV+L,EADEpM,EAAIxF,EACM,CAACwF,EAAI,EAAGK,EAAI,IAAS,GAErB,CAACL,EAAI0V,EAAe,EAAGrV,EAAI2Z,EAAY,KAOvD,OAFAC,IACAtK,OAAOI,iBAAiB,SAAUkK,GAC3B,WACLtK,OAAOK,oBAAoB,SAAUiK,MAEtC,CAACF,EAAS3N,IAEN,KAGT,SAAS0N,KACP,IAAIrV,EAAO+L,YAAe7M,GACtBe,EAAO8L,YAAe5M,GAGtBsL,EAFYsB,YAAepL,GAEb,GAClB,OACE,qBACE0P,UAAU,+BACVC,MAAO,CACLgB,SAAU,WACVpE,KAAM,EACNC,IAAK,EACL2D,MAAO9Q,EAAOyK,EAAE,GAChBsG,OAAQ9Q,EAAOwK,EAAE,GACjBkL,cAAe,OACfC,YAAa,UAMrB,SAASR,KACP,IAAIrV,EAASgM,YAAe9N,GACxBvC,EAAYqQ,YAAepL,GAC3B4F,EAAOwF,YAAe5N,GAEtBsM,EAAI/O,EAAU,GAClB,OACE,qBACE2U,UAAU,iBACVC,MAAO,CACLgB,SAAU,WACVpE,KAAMnN,EAAO,GAAK0K,EAAE,GACpB0C,IAAKpN,EAAO,GAAK0K,EAAE,GACnBqG,MAAO/Q,EAAO,GAAK0K,EAAE,GACrBsG,OAAQhR,EAAO,GAAK0K,EAAE,GACtBkL,cAAe,OACfC,YAAa,QATjB,SAYY,WAATrP,EACC,eAAC,WAAD,WACE,qBACE+J,MAAO,CACLgB,SAAU,WACVpE,KAAM,EACNC,IAAK,EACLsE,WAAY,OACZX,MAAO,GACPC,OAAQ,GACR8E,aAAc,kBACdC,YAAa,qBAGjB,qBACExF,MAAO,CACLgB,SAAU,WACVC,MAAO,EACPM,OAAQ,EACRJ,WAAY,OACZX,MAAO,GACPC,OAAQ,GACRgF,UAAW,kBACXC,WAAY,wBAIhB,OAKV,SAASd,KACP,IAAIxZ,EAAYqQ,YAAepL,GAC3BsV,EAAalK,YAAezM,GAEhC,OAAO5D,EAAUsF,KAAI,SAACvE,EAAQyE,GAC5B,IAAIuJ,EAAI/O,EAAUwF,GACdK,EAAK0U,EAAW/U,GACpB,OACE,qBAEEoP,MAAO,CACLgB,SAAU,WACVpE,KAAMzC,EAAE,GACR0C,IAAK1C,EAAE,GACPqG,MAAOrG,EAAE,GACTsG,OAAQtG,EAAE,GACVkL,cAAe,OACfC,YAAa,QATjB,SAYE,cAACM,GAAD,CAAY3U,GAAIA,KAZlB,gBACgBL,OAiBtB,SAASiU,KAAY,IAAD,EACIpJ,YAAetN,GADnB,mBACbqS,EADa,KACNC,EADM,KAEd/Q,EAAO+L,YAAe7M,GACtBe,EAAO8L,YAAe5M,GAEtByB,GADcmL,YAAevI,IACxBzK,KAAK8H,MAAMiQ,EAAQ9Q,IACxBc,EAAK/H,KAAK8H,MAAMkQ,EAAS9Q,GACzBkW,EAAavV,EAAKZ,EAClBoW,EAActV,EAAKb,EACnBoW,EAAK,IACT,OACE,gCACGrW,EAAO,EACJ,YAAIe,MAAMf,EAAO,IAAIgB,KAAI,SAACC,EAAGE,GAC3B,OACE,eAAC,IAAM8T,SAAP,WACE,qBACE3E,MAAO,CACLqF,cAAe,OACfC,YAAa,OACbtE,SAAU,WACVpE,MAAO/L,EAAI,GAAKP,EAAK,IACrBuM,IAAK,EACL2D,MAAO,EACPC,OAAQqF,EACR3E,WAAY,wBAGhB,qBACEnB,MAAO,CACLqF,cAAe,OACfC,YAAa,OACbtE,SAAU,WACVpE,MAAO/L,EAAI,GAAKP,EAAK,GACrBuM,IAAK,EACL2D,MAAO,EACPC,OAAQqF,EACR3E,WAAY,QAAU,CAAC4E,EAAIA,EAAIA,GAAM,aAtB3C,kBAAgClV,OA4BpC,KAEHlB,EAAO,EACJ,YAAIc,MAAMd,EAAO,IAAIe,KAAI,SAACC,EAAGG,GAC3B,OACE,eAAC,IAAM6T,SAAP,WACE,qBACE3E,MAAO,CACLqF,cAAe,OACfC,YAAa,OACbtE,SAAU,WACVpE,KAAM,EACNC,KAAM/L,EAAI,GAAKN,EAAK,IACpBiQ,OAAQ,EACRD,MAAOqF,EACP1E,WAAY,wBAGhB,qBACEnB,MAAO,CACLqF,cAAe,OACfC,YAAa,OACbtE,SAAU,WACVpE,KAAM,EACNC,KAAM/L,EAAI,GAAKN,EAAK,GACpBiQ,OAAQ,EACRD,MAAOqF,EACP1E,WAAY,QAAU,CAAC4E,EAAIA,EAAIA,GAAM,aAtB3C,kBAAgCjV,OA4BpC,QAKV,SAAS8U,GAAT,GAA6B,IAAP3U,EAAM,EAANA,GAChB9E,EAASsP,YAAexM,EAASgC,IACrC,OACE,qBACE8O,UAAU,eACVC,MAAO,CACLgB,SAAU,WACVgF,SAAU,GACVpJ,KAAM,EACN2E,OAAQ,EACR0E,YAAa,EACbC,aAAc,EACd5F,MAAO,OACPc,WAAY,OACZZ,MAAO,OACPU,SAAU,UAZd,SAeG/U,EACEuE,KAAI,SAACyJ,GAAD,OAAO1R,KAAKoV,MAA6B,KAAtB1D,EAAIgM,OAAOC,UAAkB,OACpDC,KAAK,OAKP,SAAS1H,GAAUxT,EAAOoT,EAAK3G,EAAU0O,EAAgBC,GAC9D,IAAIrD,EAAO,IAAIsD,MACftD,EAAKuD,OAAS,WAEZtb,EAAMub,MAAQta,EAAejB,EAAO,ETxXjB,GSyXnB,IAAIF,EAAIiY,EAAK1C,MAAQrV,EAAMub,MACvBpb,EAAI4X,EAAKzC,OAAStV,EAAMub,MAKxBC,EAAQ,EAJF1b,EAAI,EACLK,EAAI,EACJL,EAAI,GACHK,EAAI,GAEdsM,EAASsL,GACT,IAAI0D,EAAY3D,GAAa,WAAb,GAAc9X,EAAO+X,GAArB,OAA8ByD,IAC9Cxb,EAAM8Y,YAAYxS,KAAKmV,QACA/U,IAAnByU,GAA8BA,SACjBzU,IAAb0U,GACFA,KAGJrD,EAAK3E,IAAMA,EAGN,SAAStE,GAAa9O,EAAO+N,EAAOtB,EAAU0O,GAYnDpN,EAAM8B,iBAAiB,UAXvB,SAAS6L,EAAazN,GAAI,IAAD,gBACN0N,KAAKxI,OADC,IACvB,2BAA6B,CAAC,IAArBW,EAAoB,QAC3B,KAAIA,EAAKC,KAAKC,QAAQ,SAAW,GAAjC,CAGA,IAAIZ,EAAME,IAAIC,gBAAgBO,GAC9BN,GAAUxT,EAAOoT,EAAK3G,EAAU0O,GAChCpN,EAAM6N,MAAQ,OAPO,8BASvB7N,EAAM+B,oBAAoB,SAAU4L,MAItC3N,EAAM8N,cACJ,IAAIC,WAAW,QAAS,CACtBC,SAAS,EACTC,YAAY,EACZC,KAAMxM,UAKZ,SAAS4J,GAAT,GAAwD,IAAtC1O,EAAqC,EAArCA,UAAWsF,EAA0B,EAA1BA,WACvBiM,GADiD,EAAdzG,WACxBnF,YAAetN,IAC1B/C,EAAYqQ,YAAepL,GAC3BX,EAAO+L,YAAe7M,GACtBe,EAAO8L,YAAe5M,GACtB8R,EAAelF,YAAe1M,GAC9BuY,EAAa7L,YAAelK,GAE5B0T,GADSxJ,YAAerM,GACZqM,YAAe3M,IAC3B8I,EAAWxB,YAAkB/G,GAToB,EAUpB2G,YAAe7G,GAVK,mBAUhDkE,EAVgD,KAUtCkU,EAVsC,KAWjD1P,EAAczB,YAAkB1D,GAChCqE,EAAeX,YAAkB1E,GAZgB,EAazBsE,YAAehH,GAbU,mBAahDgC,EAbgD,KAavCwW,EAbuC,KAcjDrM,EAAapD,iBAAO,MACpB0P,EAAW1P,iBAAO,MAClB2P,EAAOjM,YAAevN,GAhB2B,EAiB3ByZ,oBAAS,GAjBkB,mBAiBhDC,EAjBgD,KAiBxCC,EAjBwC,OAkBEC,eAAzBC,GAlBuB,EAkB7CC,qBAlB6C,EAkBvBD,sBA2G9B,OAzGAhP,qBAAU,WACR,GAAoB,OAAhBsO,EAAS,KAAgBO,EAAQ,CACnC,IAAIzE,EAAO8E,KAAK9M,EAAWlC,SAC3BwO,EAASxO,QAAUkK,EACnB,IAAIhY,EAAQ2K,EAAUmD,QACtB9N,EAAMgY,KAAOA,EAIb,IADA,IAAIwC,EAAa,GACR/U,EAAI,EAAGA,EAAIlB,EAAOC,EAAMiB,IAAK,CACpC,IAAIK,EAAK6D,KACT6Q,EAAWlU,KAAKR,GAChB9F,EAAM4Y,MAAMtS,KAAK,IACjBtG,EAAM8B,iBAAiBwE,KAAK,IAC5BtG,EAAMoC,yBAAyBkE,KAAK,IACpCtG,EAAM6Y,UAAUvS,KAAK,MAEvB+V,EAAW7B,GACXxa,EAAM6F,QAAU,YAAIP,MAAMf,EAAOC,IAAOe,KAAI,SAACyJ,GAAD,MAAO,CAAC,EAAG,EAAG,MAE1DoN,EAAe,YAAI9W,MAAMf,EAAOC,IAAOe,KAAI,SAACyJ,GAAD,OAAO,SAElD+N,GAAS/c,EAAOuE,EAAMC,EAAM0X,EAAUjc,EAAWkc,GAEjD3I,GACExT,EACyB,0CACzByM,EACAC,EAAYqC,KAAK,KAAM,CAAEzK,OAAQ,CAAC,EAAG,EAAGC,EAAMC,MAC9C,WACEoH,EAAa,CAAE5L,QAAOsE,OAAQ,CAAC,EAAG,EAAGC,EAAMC,KAC3CoY,GAAqB,MAIzB,IAAII,EAAKhN,EAAWlC,QAAQmP,WAAW,SACvCD,EAAGE,OAAOF,EAAGG,cAEbnF,EAAKoF,OAAM,YAAc,EAAXC,KAIZ,GAHArF,EAAKsF,MAAM,CACTnI,MAAO,CAAC,EAAG,EAAG,EAAG,KAEfnV,EAAMC,UAAUC,OAAS,EAG3B,IAFA,IAAIqd,EACFvd,EAAMkc,SAAS,GAAKlc,EAAMC,UAAU,GAAG,GAAKD,EAAMwE,KAC3CiB,EAAI,EAAGA,EAAIzF,EAAMC,UAAUC,OAAQuF,IAAK,CAC/C,IAAI7D,EAAW5B,EAAMC,UAAUwF,GADgB,cAExB7D,EAFwB,GAE1CgF,EAF0C,KAEtCC,EAFsC,KAElC1B,EAFkC,KAE9BE,EAF8B,KAU/C,GANAwB,GAAU0W,EACVP,EAAGpb,SAASgF,EAAIC,EAAI1B,EAAIE,GACxB2X,EAAGQ,QAAQ5W,EAAIC,EAAI1B,EAAIE,GACvB2S,EAAKsF,MAAM,CACTnI,MAAO,CAAC,EAAG,EAAG,EAAG,KAEfnV,EAAM6Y,UAAU3Y,OAAS,GAA4B,OAAvBF,EAAM6Y,UAAUpT,IAEhDgY,EADWzd,EAAM8Y,YAAY9Y,EAAM6Y,UAAUpT,KACxC,CACH8S,gBAAiBvY,EAAM8B,iBAAiB2D,KAMhD,GAAIzF,EAAMsP,QAAS,CACjBtP,EAAMsP,SAAU,EAChB,IAAIoO,EAAcC,SAASC,cAAc,UACzCF,EAAYrI,MAAQrV,EAAMC,UAAU,GAAG,GAAKD,EAAMuE,KAClDmZ,EAAYpI,OAAStV,EAAMC,UAAU,GAAG,GAAKD,EAAMwE,KAC1CkZ,EAAYT,WAAW,MAC7BxB,UAAUuB,EAAG/L,OAAQ,EAAG,GAC3B,IAAI4M,EAAOF,SAASC,cAAc,KAClCF,EAAYI,QAAO,SAAUC,GAC3BF,EAAKG,aACH,WACA,YAAc1gB,KAAKoV,OAAM,IAAIuL,MAAOC,UAAY,KAAQ,QAE1DL,EAAKG,aAAa,OAAQ1K,IAAIC,gBAAgBwK,IAC9CF,EAAKhC,cACH,IAAIC,WAAJ,QAAwB,CACtBC,SAAS,EACTC,YAAY,EACZC,KAAMxM,iBAMhBiN,GAAU,MAEX,CAACR,EAAUO,IAEd7O,qBAAU,WACJ6O,IACU9R,EAAUmD,QAChB+K,UAAY3Q,KAEnB,CAACuU,EAAQvU,IAEZ0F,qBAAU,WACJ6O,GACFM,GAASpS,EAAUmD,QAASvJ,EAAMC,EAAM0X,EAAUjc,EAAWkc,KAE9D,CAACM,EAAQlY,EAAMC,EAAM0X,EAAUjc,EAAW4F,IAEtB,OAAhBqW,EAAS,GACd,qBACE/F,IAAKlG,EACL4E,MAAO,CACLQ,MAAO6G,EAAS,IAAMK,EAAK,GAAKjiB,EAASkb,EAAe,GAAK,EAC7DF,OAAQ4G,EAAS,IAAMK,EAAK,GAAKjiB,EAASwf,EAAY,EAAI,GAC1D7D,WAAY,OACZkI,YAAa,QANjB,SASE,yBAAQ9I,MAAO6G,EAAS,GAAI5G,OAAQ4G,EAAS,GAAI/F,IAAKnG,EAAtD,UACGnK,EAAQN,KAAI,SAACO,EAAIpE,GAAL,OACX,cAAC0c,GAAD,CAAuBtY,GAAIA,EAAIpE,MAAOA,EAAOiJ,UAAWA,GAArC7E,MAErB,cAAC,GAAD,CACEkK,WAAYA,EACZrF,UAAWA,EACXsF,WAAYA,SAIhB,KAGC,SAAS8M,GAAS/c,EAAOuE,EAAMC,EAAM0X,EAAUjc,EAAWkc,GAG/D,IAFA,IAAIkC,EAAalC,EAAW9Y,QACxBib,EAAkB,GACb3Y,EAAI,EAAGA,EAAInB,EAAMmB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IAAIhE,EAAQiE,EAAIpB,EAAOmB,EAEnBiB,GADanC,EAAO,EAAIlH,KAAK8H,MAAM1D,EAAQ6C,IACnBA,EAAQ7C,EAAQ6C,EAC5C+Z,EAAgBhY,KAAK+X,EAAW1X,IAIpC3G,EAAM6F,QAAUyY,EAChBte,EAAMkc,SAAWA,EACjBlc,EAAMuE,KAAOA,EACbvE,EAAMwE,KAAOA,EACbxE,EAAMC,UAAYA,EAElBF,EAAsBC,GAEtBA,EAAM4Y,MAAQ,GACd5Y,EAAM8B,iBAAmB,GACzB9B,EAAMoC,yBAA2B,GACjC,IAAK,IAAIqD,EAAI,EAAGA,EAAIlB,EAAOC,EAAMiB,IAC/BzF,EAAM4Y,MAAMtS,KAAK,IACjBtG,EAAM8B,iBAAiBwE,KAAK,IAC5BtG,EAAMoC,yBAAyBkE,KAAK,KP9gBjC,SAAyBtG,GAC9B,IAAK,IAAIyF,EAAI,EAAGA,EAAIzF,EAAM6F,QAAQ3F,OAAQuF,IAAK,CAC7C,IAAIzE,EAAShB,EAAM6F,QAAQJ,GAC3B1J,EAAOiE,EAAM4Y,MAAMnT,GAAIzE,EAAQD,EAAUC,GAAS,CAAC,EAAG,EAAG,IACzDzG,EAASyF,EAAM8B,iBAAiB2D,GAAIzF,EAAMY,WAAYZ,EAAM4Y,MAAMnT,IAClE/H,EAAOsC,EAAMoC,yBAAyBqD,GAAIzF,EAAM8B,iBAAiB2D,KO2gBnE8Y,CAAgBve,GAGlB,SAASoe,GAAT,GAAiD,IAAzBtY,EAAwB,EAAxBA,GAAIpE,EAAoB,EAApBA,MAAOiJ,EAAa,EAAbA,UAC7B3J,EAASsP,YAAexM,EAASgC,IAYrC,OAVA8H,qBAAU,WACR,IAAI5N,EAAQ2K,EAAUmD,QAGlBnH,GADa3G,EAAMwE,KAAO,EAAIlH,KAAK8H,MAAM1D,EAAQ1B,EAAMuE,OAC/BvE,EAAMuE,KAAQ7C,EAAQ1B,EAAMuE,KAExDvE,EAAM6F,QAAQc,GAAY3F,EPriBvB,SAAuBhB,EAAOyF,GACnC,IAAIzE,EAAShB,EAAM6F,QAAQJ,GACvBzF,EAAM4Y,MAAMnT,KACd1J,EAAOiE,EAAM4Y,MAAMnT,GAAIzE,EAAQD,EAAUC,GAAS,CAAC,EAAG,EAAG,IACzDzG,EAASyF,EAAM8B,iBAAiB2D,GAAIzF,EAAMY,WAAYZ,EAAM4Y,MAAMnT,IAClE/H,EAAOsC,EAAMoC,yBAAyBqD,GAAIzF,EAAM8B,iBAAiB2D,KOiiBjE+Y,CAAcxe,EAAO2G,KACpB,CAACb,EAAIpE,EAAOV,EAAQ2J,IAEhB,KCpmBT,IAYe8T,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,GAAD,MAEF1B,SAAS2B,eAAe,SAM1Bb,O","file":"static/js/main.dd4566ea.chunk.js","sourcesContent":["export let start_zoom = 10;\nexport let base_zoom = 5;\nexport let zoom_scaler = 1.125;\nexport let mobile = 500;\n","/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3],\n    a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7],\n    a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11],\n    a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  var x0,\n    x1,\n    x2,\n    y0,\n    y1,\n    y2,\n    z0,\n    z1,\n    z2,\n    len,\n    eyex = eye[0],\n    eyey = eye[1],\n    eyez = eye[2],\n    upx = up[0],\n    upy = up[1],\n    upz = up[2],\n    centerx = center[0],\n    centery = center[1],\n    centerz = center[2];\n\n  if (\n    Math.abs(eyex - centerx) < 0.000001 &&\n    Math.abs(eyey - centery) < 0.000001 &&\n    Math.abs(eyez - centerz) < 0.000001\n  ) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n    nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 2 * far * near * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3],\n    a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7],\n    a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11],\n    a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15],\n    b00 = a00 * a11 - a01 * a10,\n    b01 = a00 * a12 - a02 * a10,\n    b02 = a00 * a13 - a03 * a10,\n    b03 = a01 * a12 - a02 * a11,\n    b04 = a01 * a13 - a03 * a11,\n    b05 = a02 * a13 - a03 * a12,\n    b06 = a20 * a31 - a21 * a30,\n    b07 = a20 * a32 - a22 * a30,\n    b08 = a20 * a33 - a23 * a30,\n    b09 = a21 * a32 - a22 * a31,\n    b10 = a21 * a33 - a23 * a31,\n    b11 = a22 * a33 - a23 * a32,\n    // Calculate the determinant\n    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Matrix_math_for_the_web\n// point • matrix\nexport function multiplyPoint(matrix, point) {\n  // Give a simple variable name to each part of the matrix, a column and row number\n  let c0r0 = matrix[0],\n    c1r0 = matrix[1],\n    c2r0 = matrix[2],\n    c3r0 = matrix[3];\n  let c0r1 = matrix[4],\n    c1r1 = matrix[5],\n    c2r1 = matrix[6],\n    c3r1 = matrix[7];\n  let c0r2 = matrix[8],\n    c1r2 = matrix[9],\n    c2r2 = matrix[10],\n    c3r2 = matrix[11];\n  let c0r3 = matrix[12],\n    c1r3 = matrix[13],\n    c2r3 = matrix[14],\n    c3r3 = matrix[15];\n\n  // Now set some simple names for the point\n  let x = point[0];\n  let y = point[1];\n  let z = point[2];\n  let w = point[3];\n\n  // Multiply the point against each part of the 1st column, then add together\n  let resultX = x * c0r0 + y * c0r1 + z * c0r2 + w * c0r3;\n\n  // Multiply the point against each part of the 2nd column, then add together\n  let resultY = x * c1r0 + y * c1r1 + z * c1r2 + w * c1r3;\n\n  // Multiply the point against each part of the 3rd column, then add together\n  let resultZ = x * c2r0 + y * c2r1 + z * c2r2 + w * c2r3;\n\n  // Multiply the point against each part of the 4th column, then add together\n  let resultW = x * c3r0 + y * c3r1 + z * c3r2 + w * c3r3;\n\n  return [resultX, resultY, resultZ, resultW];\n}\n\nexport function normalize(vec) {\n  let [x, y, z] = vec;\n  let len = Math.sqrt(x * x + y * y + z * z);\n  return [x / len, y / len, z / len];\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The point.\n * @param {module:twgl/v3.Vec3} [dst] optional vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed point.\n * @memberOf module:twgl/m4\n */\nexport function transformPoint(m, v, dst) {\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var d =\n    v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n  dst[0] =\n    (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) /\n    d;\n  dst[1] =\n    (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) /\n    d;\n  dst[2] =\n    (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) /\n    d;\n  return dst;\n}\n","import { base_zoom, start_zoom, zoom_scaler } from \"./constants.js\";\nimport {\n  perspective,\n  lookAt,\n  multiply,\n  invert,\n  multiplyPoint,\n  transformPoint,\n  normalize,\n} from \"./mat4.js\";\n\nexport function setViewports(scene, $render, cols, rows) {\n  let w = Math.floor($render.width / cols);\n  let h = Math.floor($render.height / rows);\n  scene.viewports = [];\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < cols; c++) {\n      scene.viewports.push([c * w, r * h, w, h]);\n    }\n  }\n}\n\nexport function initImageMap(scene, cols, rows) {\n  scene.viewport_image_map = [];\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < cols; c++) {\n      scene.viewport_image_map.push(null);\n    }\n  }\n}\n\nexport function initCameras(scene) {\n  scene.cameras = [];\n  scene.projection = [];\n  scene.inverse_projection = [];\n  scene.views = [];\n  scene.view_projections = [];\n  scene.inverse_view_projections = [];\n  for (let i = 0; i < scene.viewports.length; i++) {\n    scene.cameras.push([0, 0, start_zoom]);\n    scene.views.push([]);\n    scene.view_projections.push([]);\n    scene.inverse_view_projections.push([]);\n  }\n}\n\nexport function setProjectionMatrices(scene) {\n  if (scene.viewports.length > 0) {\n    let w = scene.viewports[0][2];\n    let h = scene.viewports[0][3];\n    perspective(scene.projection, Math.PI / 3, w / h, 0.01, 100);\n    invert(scene.inverse_projection, scene.projection);\n  }\n}\n\nfunction getLookAt(camera) {\n  return [camera[0], camera[1], 0];\n}\n\nexport function setViewMatrix(scene, i) {\n  let camera = scene.cameras[i];\n  if (scene.views[i]) {\n    lookAt(scene.views[i], camera, getLookAt(camera), [0, 1, 0]);\n    multiply(scene.view_projections[i], scene.projection, scene.views[i]);\n    invert(scene.inverse_view_projections[i], scene.view_projections[i]);\n  }\n}\n\nexport function setViewMatrices(scene) {\n  for (let i = 0; i < scene.cameras.length; i++) {\n    let camera = scene.cameras[i];\n    lookAt(scene.views[i], camera, getLookAt(camera), [0, 1, 0]);\n    multiply(scene.view_projections[i], scene.projection, scene.views[i]);\n    invert(scene.inverse_view_projections[i], scene.view_projections[i]);\n  }\n}\n\nexport function getProjectionZ(scene, world_z) {\n  let projected = multiplyPoint(scene.projection, [0, 0, world_z, 1]);\n  let ndz = projected[2] / projected[3];\n  return ndz;\n}\n\nexport function getWorldFromPx(scene, px, camera_dist) {\n  let z = getProjectionZ(scene, -camera_dist);\n  let raw = [(2 * px) / scene.viewports[0][2], 0, z, 1];\n  let point_world = multiplyPoint(scene.inverse_projection, raw);\n  return point_world[0] / point_world[3];\n}\n\nexport function mosaic(scene, indexes) {\n  let $render = scene.$render;\n  // need matrices to be initialized already\n  if (indexes === undefined) indexes = scene.group;\n  for (let i of indexes) {\n    let [vx, vy, vw, vh] = scene.viewports[i];\n    let camera = scene.cameras[i];\n    let midx = vx + vw / 2;\n    let midy = vy + vh / 2;\n    let difx = midx - $render.width / 2;\n    let dify = midy - $render.height / 2;\n    let w = getWorldFromPx(scene, difx, camera[2]);\n    let h = getWorldFromPx(scene, dify, camera[2]);\n    scene.cameras[i][0] = w;\n    scene.cameras[i][1] = h;\n  }\n}\n\nexport function panSetPixels(scene, x, y) {\n  let indexes = scene.active;\n  for (let index of indexes) {\n    let viewport = scene.viewports[index];\n    let camera = scene.cameras[index];\n    let ndx = getWorldFromPx(scene, x * 8, camera[2]);\n    let ndy = getWorldFromPx(scene, y * 8, camera[2]);\n    scene.cameras[index][0] += ndx;\n    scene.cameras[index][1] += ndy;\n  }\n}\n\nexport function panViewports(scene, dx, dy) {\n  let indexes = scene.active;\n  for (let index of indexes) {\n    let viewport = scene.viewports[index];\n    let camera = scene.cameras[index];\n    let ndx = getWorldFromPx(scene, dx, camera[2]);\n    let ndy = getWorldFromPx(scene, dy, camera[2]);\n    scene.cameras[index][0] -= ndx;\n    scene.cameras[index][1] += ndy;\n  }\n}\n\nexport function getClipsFromMouse(viewport, mouse_position) {\n  let ratio_x = (mouse_position[0] - viewport[0]) / viewport[2];\n  let ratio_y = (mouse_position[1] - viewport[1]) / viewport[3];\n  let clip_x = 2 * ratio_x - 1;\n  let clip_y = 2 * ratio_y - 1;\n  return [clip_x, clip_y];\n}\n\nexport function castRay(scene, index, mouse, world_z) {\n  let viewport = scene.viewports[index];\n  let ndz = getNormalizedZ(scene, index, world_z);\n  let clips = getClipsFromMouse(viewport, mouse);\n  let device_coordinates = [clips[0], clips[1], ndz, 1];\n  let point_world = multiplyPoint(\n    scene.inverse_view_projections[index],\n    device_coordinates\n  );\n  // divide by w at end\n  let world_points = [\n    point_world[0] / point_world[3],\n    point_world[1] / point_world[3],\n  ];\n  return world_points;\n}\n\nfunction zoomLimit(new_zoom) {\n  let max = 99;\n  let min = 0.01;\n  return Math.min(max, Math.max(min, new_zoom));\n}\n\nexport function zoomCenter(scene, sign) {\n  let indexes = scene.active;\n  for (let i of indexes) {\n    let zoom = scene.cameras[i][2];\n    let new_cam;\n    if (sign === 1) {\n      new_cam = scene.cameras[i][2] * zoom_scaler;\n    } else {\n      new_cam = scene.cameras[i][2] / zoom_scaler;\n    }\n    let new_zoom = zoomLimit(new_cam);\n    if (new_zoom > zoom || new_zoom < zoom) {\n      if (scene.zoom_mode === \"canvas\") {\n        let projected = castRay(\n          scene,\n          i,\n          [scene.width / 2, scene.height / 2],\n          new_zoom\n        );\n        scene.cameras[i] = [...projected, new_zoom];\n      } else if (scene.zoom_mode === \"active\") {\n        // TODO figure out if this is what you sant\n        let viewport = scene.viewports[scene.active];\n        let projected = castRay(\n          scene,\n          i,\n          [viewport[0] + viewport[2] / 2, viewport[1] + viewport[3] / 2],\n          new_zoom\n        );\n        scene.cameras[i] = [...projected, new_zoom];\n      } else if (scene.zoom_mode === \"every\") {\n        scene.cameras[i][2] = new_zoom;\n      }\n    }\n  }\n}\n\nexport function getNormalizedZ(scene, index, world_z) {\n  let projected = multiplyPoint(scene.view_projections[index], [\n    0,\n    0,\n    world_z,\n    1,\n  ]);\n  let ndz = projected[2] / projected[3];\n  return ndz;\n}\n\nexport function shake(scene) {\n  let indexes = scene.active;\n  for (let i = 0; i < indexes.length; i++) {\n    let index = indexes[i];\n    let camera = scene.cameras[index];\n    let nx = getWorldFromPx(scene, 16, camera[2]);\n    let dx = 1 - 2 * Math.random();\n    let dy = 1 - 2 * Math.random();\n    scene.cameras[index][0] += dx * nx;\n    scene.cameras[index][1] += dy * nx;\n  }\n}\n\nexport function viewportCenter(scene) {\n  let indexes = scene.active;\n  for (let index of indexes) {\n    scene.cameras[index][0] = 0;\n    scene.cameras[index][1] = 0;\n  }\n}\n\nexport function minMaxOrder(v1, v2) {\n  let min = Math.min(v1, v2);\n  let max = Math.max(v1, v2);\n  return [min, max];\n}\n\nexport function moveGroupWithFocus(group_selected, mactive, cols, rows) {\n  let x1 = group_selected[0] % cols;\n  let y1 = Math.floor(group_selected[0] / cols);\n  let x2 = group_selected[1] % cols;\n  let y2 = Math.floor(group_selected[1] / cols);\n  let mx = mactive % cols;\n  let my = Math.floor(mactive / cols);\n  let start_col = x1;\n  let start_row = y1;\n  let end_col = x2;\n  let end_row = y2;\n  let w = x2 - x1;\n  let h = y2 - y1;\n  if (mx < x1) {\n    start_col = mx;\n    end_col = start_col + w;\n  } else if (mx > x2) {\n    end_col = mx;\n    start_col = end_col - w;\n  }\n  if (my < y1) {\n    start_row = my;\n    end_row = start_row + h;\n  } else if (my > y2) {\n    end_row = my;\n    start_row = end_row - h;\n  }\n  let g1 = start_row * cols + start_col;\n  let g2 = end_row * rows + end_col;\n  return [g1, g2];\n}\n\nexport function resizeGroupWithFocus(group_selected, mactive, cols, rows) {\n  let x1 = group_selected[0] % cols;\n  let y1 = Math.floor(group_selected[0] / cols);\n  let x2 = group_selected[1] % cols;\n  let y2 = Math.floor(group_selected[1] / cols);\n  let mx = mactive % cols;\n  let my = Math.floor(mactive / cols);\n  let start_col = x1;\n  let start_row = y1;\n  let end_col = x2;\n  let end_row = y2;\n  let w = x2 - x1;\n  let h = y2 - y1;\n  if (mx < x1) {\n    start_col = mx;\n  } else if (mx > x2) {\n    end_col = mx;\n  }\n  if (my < y1) {\n    start_row = my;\n  } else if (my > y2) {\n    end_row = my;\n  }\n  let g1 = start_row * cols + start_col;\n  let g2 = end_row * cols + end_col;\n  return [g1, g2];\n}\n\nexport function resizeRelative(group_selected, cols, rows, dx, dy) {\n  let x1 = group_selected[0] % cols;\n  let y1 = Math.floor(group_selected[0] / cols);\n  let x2 = group_selected[1] % cols;\n  let y2 = Math.floor(group_selected[1] / cols);\n  let end_col = Math.min(cols - 1, Math.max(x1, x2 + dx));\n  let end_row = Math.min(rows - 1, Math.max(y1, y2 + dy));\n  return end_row * cols + end_col;\n}\n\nexport function confineActive(group_selected, mactive, cols, rows) {\n  let x1 = group_selected[0] % cols;\n  let y1 = Math.floor(group_selected[0] / cols);\n  let x2 = group_selected[1] % cols;\n  let y2 = Math.floor(group_selected[1] / cols);\n  let mx = mactive % cols;\n  let my = Math.floor(mactive / cols);\n  if (mx < x1) {\n    mx = x1;\n  } else if (mx > x2) {\n    mx = x2;\n  }\n  if (my < y1) {\n    my = y1;\n  } else if (my > y2) {\n    my = y2;\n  }\n  return my * cols + mx;\n}\n\nexport function getGroupIndexes(group, cols, rows) {\n  let x1 = group[0] % cols;\n  let y1 = Math.floor(group[0] / cols);\n  let x2 = group[1] % cols;\n  let y2 = Math.floor(group[1] / cols);\n  let indexes = [];\n  for (let r = 0; r < y2 - y1; r++) {\n    for (let c = 0; c < x2 - x1; c++) {\n      indexes.push(r * cols + c);\n    }\n  }\n  return indexes;\n}\n\nexport function push(scene) {\n  let group = scene.active;\n  let [x1, y1, x2, y2] = getVertices(scene.group, scene.cols, scene.rows);\n  let c1 = x1 + (x2 - x1 + 1) / 2;\n  let c2 = y1 + (y2 - y1 + 1) / 2;\n  for (let index of group) {\n    let c = (index % scene.cols) + 0.5;\n    let r = Math.floor(index / scene.cols) + 0.5;\n    let dx = 0;\n    let dy = 0;\n    if (c1 < c) {\n      dx = -1;\n    } else if (c1 > c) {\n      dx = 1;\n    }\n    if (c2 < r) {\n      dy = -1;\n    } else if (c2 > r) {\n      dy = 1;\n    }\n    let camera = scene.cameras[index];\n    let ndx = getWorldFromPx(scene, dx * 8, camera[2]);\n    let ndy = getWorldFromPx(scene, dy * 8, camera[2]);\n    scene.cameras[index][0] += ndx;\n    scene.cameras[index][1] += ndy;\n  }\n}\n\nexport function pull(scene) {\n  let group = scene.active;\n  let [x1, y1, x2, y2] = getVertices(scene.group, scene.cols, scene.rows);\n  let c1 = x1 + (x2 - x1 + 1) / 2;\n  let c2 = y1 + (y2 - y1 + 1) / 2;\n  for (let index of group) {\n    let c = (index % scene.cols) + 0.5;\n    let r = Math.floor(index / scene.cols) + 0.5;\n    let dx = 0;\n    let dy = 0;\n    if (c1 < c) {\n      dx = 1;\n    } else if (c1 > c) {\n      dx = -1;\n    }\n    if (c2 < r) {\n      dy = 1;\n    } else if (c2 > r) {\n      dy = -1;\n    }\n    let camera = scene.cameras[index];\n    let ndx = getWorldFromPx(scene, dx * 8, camera[2]);\n    let ndy = getWorldFromPx(scene, dy * 8, camera[2]);\n    scene.cameras[index][0] += ndx;\n    scene.cameras[index][1] += ndy;\n  }\n}\n\nexport function resetZoom(scene) {\n  let group = scene.active;\n  for (let index of group) {\n    scene.cameras[index][2] = start_zoom;\n  }\n}\n\nexport function copy(scene) {\n  let group = scene.active;\n  let copy_array = [];\n  for (let index of group) {\n    let camera = scene.cameras[index];\n    let image = scene.viewport_image_map[index];\n    let container = [camera, image];\n    copy_array.push(container);\n  }\n  scene.copy_buffer = copy_array;\n}\n\nexport function paste(scene) {\n  let buffer = scene.copy_buffer;\n  let group = scene.active;\n  if (buffer !== null) {\n    let i = 0;\n    for (let copy of buffer) {\n      let [camera, image] = JSON.parse(JSON.stringify(copy));\n      if (group[i] !== undefined) {\n        let index = group[i];\n        scene.cameras[index] = camera;\n        scene.viewport_image_map[index] = image;\n      }\n      i++;\n    }\n  }\n}\n\nexport function moveVertices(v, dx, dy) {\n  v[0] += dx;\n  v[1] += dy;\n  v[2] += dx;\n  v[3] += dy;\n  return v;\n}\n\nexport function getVertices(group, cols, rows) {\n  let x1 = group[0] % cols;\n  let y1 = Math.floor(group[0] / cols);\n  let x2 = group[1] % cols;\n  let y2 = Math.floor(group[1] / cols);\n  let gx1 = Math.min(x1, x2);\n  let gy1 = Math.min(y1, y2);\n  let gx2 = Math.max(x1, x2);\n  let gy2 = Math.max(y1, y2);\n  return [gx1, gy1, gx2, gy2];\n}\n\nexport function getIndexes(v, cols, rows) {\n  let [gx1, gy1, gx2, gy2] = v;\n  let i1 = gy1 * cols + gx1;\n  let i2 = gy2 * cols + gx2;\n  return [i1, i2];\n}\n\nexport function confineVertices(v, cols, rows) {\n  let [x1, y1, x2, y2] = v;\n  if (x1 < 0) {\n    let diff = -x1;\n    x1 += diff;\n    x2 += diff;\n  }\n  if (x2 > cols - 1) {\n    let diff = x2 - (cols - 1);\n    x1 -= diff;\n    x2 -= diff;\n  }\n  // too wide\n  if (x1 < 0) {\n    x1 = 0;\n  }\n  if (y1 < 0) {\n    let diff = -y1;\n    y1 += diff;\n    y2 += diff;\n  }\n  if (y2 > rows - 1) {\n    let diff = y2 - (rows - 1);\n    y1 -= diff;\n    y2 -= diff;\n  }\n  // too tall\n  if (y1 < 0) {\n    y1 = 0;\n  }\n  return [x1, y1, x2, y2];\n}\n\nexport function moveRelative(group, cols, rows, dx, dy) {\n  let v = moveVertices(getVertices(group, cols, rows), dx, dy);\n  v = confineVertices(v, cols, rows);\n  return getIndexes(v, cols, rows);\n}\n\nexport function confineToCanvas(group, cols, rows) {\n  let v = getVertices(group, cols, rows);\n  v = confineVertices(v, cols, rows);\n  return getIndexes(v, cols, rows);\n}\n\nexport function moveAbsolute(group, cols, rows, index) {\n  let [x1, y1, x2, y2] = getVertices(group, cols, rows);\n  let w = x2 - x1;\n  let h = y2 - y1;\n  let xoff1 = Math.floor(w / 2);\n  let xoff2 = w - xoff1;\n  let yoff1 = Math.floor(h / 2);\n  let yoff2 = h - yoff1;\n  let tar = getVertices([index, index], cols, rows);\n  let nx1 = tar[0] - xoff1;\n  let nx2 = tar[0] + xoff2;\n  let ny1 = tar[1] - yoff1;\n  let ny2 = tar[1] + yoff2;\n  let v = confineVertices([nx1, ny1, nx2, ny2], cols, rows);\n  return getIndexes(v, cols, rows);\n}\n\nexport function addSceneCol(scene, col) {\n  let $render = scene.$render;\n  let copied = [];\n  for (let r = 0; r < scene.rows; r++) {\n    let index = r * scene.cols + col;\n    let camera = scene.cameras[index];\n    let image = scene.viewport_image_map[index];\n    let container = [camera, image];\n    copied.push(container);\n  }\n  scene.cols += 1;\n  setViewports(scene, $render, scene.cols, scene.rows);\n  for (let r = 0; r < scene.rows; r++) {\n    let copy = JSON.parse(JSON.stringify(copied[r]));\n    let index = r * scene.cols + col;\n    scene.viewport_image_map.splice(index, 0, copy[1]);\n    scene.cameras.splice(index, 0, copy[0]);\n    scene.views.splice(index, 0, []);\n    scene.view_projections.splice(index, 0, []);\n    scene.inverse_view_projections.splice(index, 0, []);\n  }\n}\n\nexport function addSceneRow(scene, row) {\n  let $render = scene.$render;\n  let copied = [];\n  for (let c = 0; c < scene.cols; c++) {\n    let index = row * scene.cols + c;\n    let camera = scene.cameras[index];\n    let image = scene.viewport_image_map[index];\n    let container = [camera, image];\n    copied.push(container);\n  }\n  scene.rows += 1;\n  setViewports(scene, $render, scene.cols, scene.rows);\n  for (let c = 0; c < scene.cols; c++) {\n    let copy = JSON.parse(JSON.stringify(copied[c]));\n    let index = row * scene.cols + c;\n    scene.viewport_image_map.splice(index, 0, copy[1]);\n    scene.cameras.splice(index, 0, copy[0]);\n    scene.views.splice(index, 0, []);\n    scene.view_projections.splice(index, 0, []);\n    scene.inverse_view_projections.splice(index, 0, []);\n  }\n}\n\nexport function remSceneCol(scene, col) {\n  let $render = scene.$render;\n  scene.cols -= 1;\n  setViewports(scene, $render, scene.cols, scene.rows);\n  for (let r = 0; r < scene.rows; r++) {\n    let index = r * scene.cols + col;\n    scene.viewport_image_map.splice(index, 1);\n    scene.cameras.splice(index, 1);\n    scene.views.splice(index, 1);\n    scene.view_projections.splice(index, 1);\n    scene.inverse_view_projections.splice(index, 1);\n  }\n}\n\nexport function remSceneRow(scene, row) {\n  let $render = scene.$render;\n  scene.rows -= 1;\n  setViewports(scene, $render, scene.cols, scene.rows);\n  for (let c = 0; c < scene.cols; c++) {\n    // index is different bc it is chopping one each time\n    let index = row * scene.cols;\n    scene.viewport_image_map.splice(index, 1);\n    scene.cameras.splice(index, 1);\n    scene.views.splice(index, 1);\n    scene.view_projections.splice(index, 1);\n    scene.inverse_view_projections.splice(index, 1);\n  }\n}\n","import React from \"react\";\nimport { atom, atomFamily, selector } from \"recoil\";\nimport { getWorldFromPx, castRay } from \"./gl_utils\";\nimport { base_zoom, zoom_scaler } from \"./constants\";\nimport { getID } from \"./App\";\n\nexport let aScene = atom({\n  key: \"scene\",\n  default: {},\n});\n\nexport let aActive = atom({\n  key: \"active\",\n  default: [2, 1, 1, 1],\n});\n\nexport let a_Mode = atom({\n  key: \"mode\",\n  default: \"normal\",\n});\n\nexport let aMode = selector({\n  key: \"sMode\",\n  get: ({ get }) => {\n    return get(a_Mode);\n  },\n  set: ({ set }, name) => {\n    set(a_Mode, name);\n  },\n});\n\nexport let aSize = atom({\n  key: \"size\",\n  default: [null, null],\n});\n\nexport let aGridSize = atom({\n  key: \"gridSize\",\n  default: [null, null],\n});\n\nexport let sGridSize = selector({\n  key: \"changeGridSize\",\n  set: ({ get, set }, diff) => {\n    let [dx, dy] = diff;\n    let [w, h] = get(aGridSize).slice();\n    let wlimit = Math.max(64, w + dx * 8);\n    let hlimit = Math.max(64, h + dy * 8);\n    set(aGridSize, [wlimit, hlimit]);\n  },\n});\n\nexport let aCols = atom({\n  key: \"cols\",\n  default: 4,\n});\n\nexport let aRows = atom({\n  key: \"rows\",\n  default: 4,\n});\n\nexport let aBarHeight = atom({\n  key: \"barHeight\",\n  default: 0,\n});\n\nexport let aSidebarWidth = atom({\n  key: \"sidebarWidth\",\n  default: 360,\n});\n\nexport let aCameras = atom({\n  key: \"cameras\",\n  default: [],\n});\n\nexport let afCamera = atomFamily({\n  key: \"camera\",\n  default: [0, 0, 5],\n});\n\nexport let aImageMap = atom({\n  key: \"imageMap\",\n  default: [],\n});\n\nexport let aImages = atom({\n  key: \"images\",\n  default: [],\n});\n\nexport let sAddImage = selector({\n  key: \"addImage\",\n  set: ({ get, set }, img) => {\n    let imgs = get(aImages);\n    set(aImages, [...imgs, img]);\n  },\n});\n\nfunction constrainActive(active, cols, rows) {\n  let [x, y, w, h] = active;\n  if (w > cols) w = cols;\n  if (h > rows) h = rows;\n  return [minmax(x, 0, cols - w), minmax(y, 0, rows - h), w, h];\n}\n\nfunction minmax(val, min, max) {\n  return Math.max(min, Math.min(max, val));\n}\n\nexport let sActiveSelector = selector({\n  key: \"activeSelector\",\n  set: ({ get, set }, new_value) => {\n    set(aActive, constrainActive(new_value, get(aCols), get(aRows)));\n  },\n});\n\nexport let sSelectAll = selector({\n  key: \"selectAll\",\n  set: ({ get, set }, new_value) => {\n    set(aActive, [0, 0, get(aCols), get(aRows)]);\n  },\n});\n\nexport let sMoveActiveSelector = selector({\n  key: \"moveActiveSelector\",\n  set: ({ get, set }, diff) => {\n    let [x, y, w, h] = get(aActive);\n    let [dx, dy] = diff;\n    set(sActiveSelector, [x + dx, y + dy, w, h]);\n  },\n});\n\nfunction constrainResize(active, cols, rows) {\n  let [x, y, w, h] = active;\n  let wlimit = cols - active[0];\n  let hlimit = rows - active[1];\n  return [x, y, minmax(w, 1, wlimit), minmax(h, 1, hlimit)];\n}\n\nexport let sResizeActiveSelector = selector({\n  key: \"resizeActiveSelector\",\n  set: ({ get, set }, diff) => {\n    let [x, y, w, h] = get(aActive);\n    let [dx, dy] = diff;\n    let new_value = [x, y, w + dx, h + dy];\n    set(aActive, constrainResize(new_value, get(aCols), get(aRows)));\n  },\n});\n\nexport let sViewports = selector({\n  key: \"viewports\",\n  get: ({ get }) => {\n    let [w, h] = get(aGridSize);\n    let cols = get(aCols);\n    let rows = get(aRows);\n    let vw = Math.floor(w / cols);\n    let vh = Math.floor(h / rows);\n    return [...Array(cols * rows)].map((_, i) => {\n      let c = i % cols;\n      let r = Math.floor(i / cols);\n      return [c * vw, r * vh, vw, vh];\n    });\n  },\n});\n\nexport let sPanCamera = selector({\n  key: \"panCamera\",\n  set: ({ get, set }, { scene, diff }) => {\n    let [dx, dy] = diff;\n    let cameras = get(aCameras);\n    let cols = get(aCols);\n    let [x, y, w, h] = get(aActive);\n    for (let r = 0; r < h; r++) {\n      for (let c = 0; c < w; c++) {\n        let index = (y + r) * cols + (x + c);\n        let id = cameras[index];\n        let camera = get(afCamera(id));\n        let new_camera = camera.slice();\n        let ndx = getWorldFromPx(scene, dx, new_camera[2]);\n        let ndy = getWorldFromPx(scene, dy, new_camera[2]);\n        new_camera[0] -= ndx;\n        new_camera[1] += ndy;\n        set(afCamera(id), new_camera);\n      }\n    }\n  },\n});\n\nexport let sActiveEscape = selector({\n  key: \"activeEscape\",\n  set: ({ get, set }) => {\n    let [x, y, w, h] = get(aActive);\n    set(aActive, [x, y, 1, 1]);\n  },\n});\n\nexport let sResetZoom = selector({\n  key: \"resetZoom\",\n  set: ({ get, set }) => {\n    let cameras = get(aCameras);\n    let cols = get(aCols);\n    let [x, y, w, h] = get(aActive);\n    for (let r = 0; r < h; r++) {\n      for (let c = 0; c < w; c++) {\n        let index = (y + r) * cols + (x + c);\n        let id = cameras[index];\n        let camera = get(afCamera(id));\n        let new_camera = camera.slice();\n        new_camera[2] = base_zoom;\n        set(afCamera(id), new_camera);\n      }\n    }\n  },\n});\n\nexport let sAllCameras = selector({\n  key: \"allCameras\",\n  get: ({ get }) => {\n    let cameras = get(aCameras);\n    let cols = get(aCols);\n    let rows = get(aRows);\n    let expandedCameras = [];\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        let index = r * cols + c;\n        let id = cameras[index];\n        let camera = get(afCamera(id));\n        expandedCameras.push(camera);\n      }\n    }\n    return expandedCameras;\n  },\n});\n\nexport let sMosaicCamera = selector({\n  key: \"mosaicCamera\",\n  set: ({ get, set }, { scene, active }) => {\n    let cameras = get(aCameras);\n    let viewports = get(sViewports);\n    let [gw, gh] = get(aGridSize);\n    let cols = get(aCols);\n    let rows = get(aRows);\n    let get_active;\n    if (active === undefined) {\n      get_active = get(aActive);\n    } else {\n      get_active = active;\n    }\n    let [x, y, w, h] = get_active;\n    for (let r = 0; r < h; r++) {\n      for (let c = 0; c < w; c++) {\n        let index = (y + r) * cols + (x + c);\n        let inverted = (rows - 1 - (y + r)) * cols + (x + c);\n        let id = cameras[index];\n        let [vx, vy, vw, vh] = viewports[inverted];\n        let camera = get(afCamera(id));\n        let new_camera = camera.slice();\n        let midx = vx + vw / 2;\n        let midy = vy + vh / 2;\n        let difx = midx - gw / 2;\n        let dify = midy - gh / 2;\n        let w = getWorldFromPx(scene, difx, new_camera[2]);\n        let h = getWorldFromPx(scene, dify, new_camera[2]);\n        new_camera[0] = w;\n        new_camera[1] = h;\n        set(afCamera(id), new_camera);\n      }\n    }\n  },\n});\n\nexport let sShakeCamera = selector({\n  key: \"shakeCamera\",\n  set: ({ get, set }, { scene, active }) => {\n    let cameras = get(aCameras);\n    let cols = get(aCols);\n    let get_active;\n    if (active === undefined) {\n      get_active = get(aActive);\n    } else {\n      get_active = active;\n    }\n    let [x, y, w, h] = get_active;\n    for (let r = 0; r < h; r++) {\n      for (let c = 0; c < w; c++) {\n        let index = (y + r) * cols + (x + c);\n        let id = cameras[index];\n        let camera = get(afCamera(id));\n        let new_camera = camera.slice();\n        let nd = getWorldFromPx(scene, 24, new_camera[2]);\n        let dx = 0 - nd / 2 + Math.random() * nd;\n        let dy = 0 - nd / 2 + Math.random() * nd;\n        new_camera[0] += dx;\n        new_camera[1] += dy;\n        set(afCamera(id), new_camera);\n      }\n    }\n  },\n});\n\nexport let sPushCameras = selector({\n  key: \"pushCameras\",\n  set: ({ get, set }, { scene, active }) => {\n    let [x, y, w, h] = get(aActive);\n    let cameras = get(aCameras);\n    let cols = get(aCols);\n    let c1 = x + w / 2;\n    let c2 = y + h / 2;\n    for (let r = 0; r < h; r++) {\n      for (let c = 0; c < w; c++) {\n        let index = (y + r) * cols + (x + c);\n        let id = cameras[index];\n        let camera = get(afCamera(id));\n        let new_camera = camera.slice();\n        let dx = 0;\n        let dy = 0;\n        if (c1 < c + x + 0.5) {\n          dx = -1;\n        } else if (c1 > c + x + 0.5) {\n          dx = 1;\n        }\n        if (c2 < r + y + 0.5) {\n          dy = 1;\n        } else if (c2 > r + y + 0.5) {\n          dy = -1;\n        }\n        let ndx = getWorldFromPx(scene, dx * 8, camera[2]);\n        let ndy = getWorldFromPx(scene, dy * 8, camera[2]);\n        new_camera[0] += ndx;\n        new_camera[1] += ndy;\n        set(afCamera(id), new_camera);\n      }\n    }\n  },\n});\n\nexport let sPullCameras = selector({\n  key: \"pullCameras\",\n  set: ({ get, set }, { scene, active }) => {\n    let [x, y, w, h] = get(aActive);\n    let cameras = get(aCameras);\n    let cols = get(aCols);\n    let c1 = x + w / 2;\n    let c2 = y + h / 2;\n    for (let r = 0; r < h; r++) {\n      for (let c = 0; c < w; c++) {\n        let index = (y + r) * cols + (x + c);\n        let id = cameras[index];\n        let camera = get(afCamera(id));\n        let new_camera = camera.slice();\n        let dx = 0;\n        let dy = 0;\n        if (c1 < c + x + 0.5) {\n          dx = 1;\n        } else if (c1 > c + x + 0.5) {\n          dx = -1;\n        }\n        if (c2 < r + y + 0.5) {\n          dy = -1;\n        } else if (c2 > r + y + 0.5) {\n          dy = 1;\n        }\n        let ndx = getWorldFromPx(scene, dx * 8, camera[2]);\n        let ndy = getWorldFromPx(scene, dy * 8, camera[2]);\n        new_camera[0] += ndx;\n        new_camera[1] += ndy;\n        set(afCamera(id), new_camera);\n      }\n    }\n  },\n});\n\nexport let sShatterCamera = selector({\n  key: \"shatterCamera\",\n  set: ({ get, set }, scene) => {\n    let cameras = get(aCameras);\n    let cols = get(aCols);\n    let rows = get(aRows);\n    let [x, y, w, h] = get(aActive);\n    for (let r = 0; r < h; r++) {\n      for (let c = 0; c < w; c++) {\n        let index = (y + r) * cols + (x + c);\n        let id = cameras[index];\n        let camera = get(afCamera(id));\n        let new_camera = camera.slice();\n        new_camera[0] = 0;\n        new_camera[1] = 0;\n        set(afCamera(id), new_camera);\n      }\n    }\n  },\n});\n\nexport let sSetImageMap = selector({\n  key: \"setImageMap\",\n  set: ({ get, set }, { active }) => {\n    let cols = get(aCols);\n    let rows = get(aRows);\n    let get_active;\n    if (active === undefined) {\n      get_active = get(aActive);\n    } else {\n      get_active = active;\n    }\n    let [x, y, w, h] = get_active;\n    let images = get(aImages);\n    let new_map = get(aImageMap).slice();\n    for (let r = 0; r < h; r++) {\n      for (let c = 0; c < w; c++) {\n        let inverted = (rows - 1 - (y + r)) * cols + (x + c);\n        new_map[inverted] = images.length - 1;\n      }\n    }\n    set(aImageMap, new_map);\n  },\n});\n\nfunction zoomLimit(new_zoom) {\n  let max = 100;\n  let min = 0.01;\n  return Math.min(max, Math.max(min, new_zoom));\n}\n\nexport let aZoomMode = atom({\n  key: \"zoomMode\",\n  default: \"canvas\",\n});\n\nexport let aShowCameras = atom({\n  key: \"showCameras\",\n  default: false,\n});\n\nexport let aShowGrid = atom({\n  key: \"showGrid\",\n  default: true,\n});\n\nexport let aShowPreview = atom({\n  key: \"showPreview\",\n  default: false,\n});\n\nexport let aCopy = atom({\n  key: \"copy\",\n  default: [],\n});\n\nexport let sCopy = selector({\n  key: \"setCopy\",\n  set: ({ get, set }) => {\n    let [x, y, w, h] = get(aActive);\n    let imageMap = get(aImageMap);\n    let cols = get(aCols);\n    let rows = get(aRows);\n    let cameras = get(aCameras);\n    let copy = [];\n    for (let r = 0; r < h; r++) {\n      for (let c = 0; c < w; c++) {\n        let index = (y + r) * cols + (x + c);\n        let inverted = (rows - 1 - (y + r)) * cols + (x + c);\n        let id = cameras[index];\n        let camera = get(afCamera(id));\n        let map = imageMap[inverted];\n        let obj = [camera.slice(), map];\n        copy.push(obj);\n      }\n    }\n    set(aCopy, copy);\n  },\n});\n\nexport let sPaste = selector({\n  key: \"setPaste\",\n  set: ({ get, set }) => {\n    let copy = get(aCopy);\n    if (copy.length > 0) {\n      let [x, y, w, h] = get(aActive);\n      let imageMap = get(aImageMap);\n      let newMap = imageMap.slice();\n      let cols = get(aCols);\n      let rows = get(aRows);\n      let cameras = get(aCameras);\n      let copy = get(aCopy);\n      for (let r = 0; r < h; r++) {\n        for (let c = 0; c < w; c++) {\n          let copyIndex = r * w + c;\n          if (copy[copyIndex] === undefined) copyIndex = copy.length - 1;\n          let [new_camera, new_map] = copy[copyIndex];\n          let index = (y + r) * cols + (x + c);\n          let inverted = (rows - 1 - (y + r)) * cols + (x + c);\n          let id = cameras[index];\n          newMap[inverted] = new_map;\n          set(afCamera(id), new_camera);\n        }\n      }\n      set(aImageMap, newMap);\n    }\n  },\n});\n\nexport let sZoomCamera = selector({\n  key: \"zoomCamera\",\n  set: ({ get, set }, { scene, sign, mult }) => {\n    let cameras = get(aCameras);\n    let cols = get(aCols);\n    let rows = get(aRows);\n    let [x, y, w, h] = get(aActive);\n    let [gw, gh] = get(aGridSize);\n    let zoomMode = get(aZoomMode);\n    let viewports = get(sViewports);\n    let [xp, yp] = viewports[(rows - (y + h)) * cols + x];\n    let [_, __, vw, vh] = viewports[0];\n    let active_size = [vw * w, vh * h];\n    for (let r = 0; r < h; r++) {\n      for (let c = 0; c < w; c++) {\n        let index = (y + r) * cols + (x + c);\n        let inverted = (rows - 1 - (y + r)) * cols + (x + c);\n        let id = cameras[index];\n        let camera = get(afCamera(id));\n        let new_camera = camera.slice();\n        let zoom = new_camera[2];\n        let new_poss;\n        if (sign > 0) {\n          new_poss = zoom * mult;\n        } else {\n          new_poss = zoom / mult;\n        }\n        let new_zoom = zoomLimit(new_poss);\n        if (new_zoom > zoom || new_zoom < zoom) {\n          if (zoomMode === \"canvas\") {\n            let projected = castRay(\n              scene,\n              inverted,\n              [gw / 2, gh / 2],\n              new_zoom\n            );\n            new_camera = [...projected, new_zoom];\n          } else if (zoomMode === \"active\") {\n            let projected = castRay(\n              scene,\n              inverted,\n              [xp + active_size[0] / 2, yp + active_size[1] / 2],\n              new_zoom\n            );\n            new_camera = [...projected, new_zoom];\n          } else {\n            new_camera[2] = new_zoom;\n          }\n          set(afCamera(id), new_camera);\n        }\n      }\n    }\n  },\n});\n\nexport let sAddCol = selector({\n  key: \"addCol\",\n  set: ({ get, set }) => {\n    let cols = get(aCols);\n    let rows = get(aRows);\n    if (cols < 10) {\n      let [x, y, w, h] = get(aActive);\n      let insertCol = x + w;\n      let lastCol = insertCol - 1;\n\n      let imageMap = get(aImageMap);\n      let mapCols = [...Array(cols)].map((n) => []);\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cols; c++) {\n          let index = r * cols + c;\n          mapCols[c].push(imageMap[index]);\n        }\n      }\n      let copyCol = mapCols[lastCol].slice();\n      mapCols.splice(insertCol, 0, copyCol);\n      let recombinedMap = [];\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < mapCols.length; c++) {\n          recombinedMap.push(mapCols[c][r]);\n        }\n      }\n\n      let cameras = get(aCameras);\n      let cameraCols = [...Array(cols)].map((n) => []);\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cols; c++) {\n          let index = r * cols + c;\n          cameraCols[c].push(cameras[index]);\n        }\n      }\n      let copyCameras = cameraCols[lastCol].slice();\n      let newCol = [];\n      for (let r = 0; r < rows; r++) {\n        let id = getID();\n        let copyID = copyCameras[r];\n        let cloneCamera = get(afCamera(copyID)).slice();\n        set(afCamera(id), cloneCamera);\n        newCol.push(id);\n      }\n      cameraCols.splice(insertCol, 0, newCol);\n      let recombinedCameras = [];\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cameraCols.length; c++) {\n          recombinedCameras.push(cameraCols[c][r]);\n        }\n      }\n\n      set(aCameras, recombinedCameras);\n      set(aImageMap, recombinedMap);\n      set(aCols, cols + 1);\n      set(aActive, [x, y, w + 1, h]);\n    }\n  },\n});\n\nexport let sRemCol = selector({\n  key: \"remCol\",\n  set: ({ get, set }) => {\n    let cols = get(aCols);\n    let rows = get(aRows);\n    if (cols > 1) {\n      let [x, y, w, h] = get(aActive);\n      let firstCol = x;\n\n      let imageMap = get(aImageMap);\n      let mapCols = [...Array(cols)].map((n) => []);\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cols; c++) {\n          let index = r * cols + c;\n          mapCols[c].push(imageMap[index]);\n        }\n      }\n      mapCols.splice(firstCol, 1);\n      let recombinedMap = [];\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < mapCols.length; c++) {\n          recombinedMap.push(mapCols[c][r]);\n        }\n      }\n\n      let cameras = get(aCameras);\n      let cameraCols = [...Array(cols)].map((n) => []);\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cols; c++) {\n          let index = r * cols + c;\n          cameraCols[c].push(cameras[index]);\n        }\n      }\n      cameraCols.splice(firstCol, 1);\n      let recombinedCameras = [];\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cameraCols.length; c++) {\n          recombinedCameras.push(cameraCols[c][r]);\n        }\n      }\n\n      set(aCameras, recombinedCameras);\n      set(aImageMap, recombinedMap);\n      set(aCols, cols - 1);\n      if (w > 1) {\n        set(aActive, constrainActive([x, y, w - 1, h], cols - 1, rows));\n      } else {\n        set(aActive, constrainActive([x - 1, y, w, h], cols - 1, rows));\n      }\n    }\n  },\n});\n\nexport let sAddRow = selector({\n  key: \"addRow\",\n  set: ({ get, set }) => {\n    let cols = get(aCols);\n    let rows = get(aRows);\n    if (rows < 8) {\n      let [x, y, w, h] = get(aActive);\n      let insertRow = y + h;\n      let lastRow = insertRow - 1;\n\n      let imageMap = get(aImageMap);\n      let mapRows = [...Array(rows)].map((n) => []);\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cols; c++) {\n          let index = r * cols + c;\n          mapRows[r].push(imageMap[index]);\n        }\n      }\n      let copyRow = mapRows[lastRow].slice();\n      mapRows.splice(insertRow, 0, copyRow);\n      let recombinedMap = [];\n      for (let r = 0; r < mapRows.length; r++) {\n        for (let c = 0; c < cols; c++) {\n          recombinedMap.push(mapRows[r][c]);\n        }\n      }\n\n      let cameras = get(aCameras);\n      let cameraRows = [...Array(rows)].map((n) => []);\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cols; c++) {\n          let index = r * cols + c;\n          cameraRows[r].push(cameras[index]);\n        }\n      }\n      let copyCameras = cameraRows[lastRow].slice();\n      let newRow = [];\n      for (let c = 0; c < cols; c++) {\n        let id = getID();\n        let copyID = copyCameras[c];\n        let cloneCamera = get(afCamera(copyID)).slice();\n        set(afCamera(id), cloneCamera);\n        newRow.push(id);\n      }\n      cameraRows.splice(insertRow, 0, newRow);\n      let recombinedCameras = [];\n      for (let r = 0; r < cameraRows.length; r++) {\n        for (let c = 0; c < cols; c++) {\n          recombinedCameras.push(cameraRows[r][c]);\n        }\n      }\n\n      set(aCameras, recombinedCameras);\n      set(aImageMap, recombinedMap);\n      set(aRows, rows + 1);\n      set(aActive, [x, y, w, h + 1]);\n    }\n  },\n});\n\nexport let sRemRow = selector({\n  key: \"remRoww\",\n  set: ({ get, set }) => {\n    let cols = get(aCols);\n    let rows = get(aRows);\n    if (rows > 1) {\n      let [x, y, w, h] = get(aActive);\n      let firstRow = y;\n\n      let imageMap = get(aImageMap);\n      let mapRows = [...Array(rows)].map((n) => []);\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cols; c++) {\n          let index = r * cols + c;\n          mapRows[r].push(imageMap[index]);\n        }\n      }\n      mapRows.splice(firstRow, 1);\n      let recombinedMap = [];\n      for (let r = 0; r < mapRows.length; r++) {\n        for (let c = 0; c < cols; c++) {\n          recombinedMap.push(mapRows[r][c]);\n        }\n      }\n\n      let cameras = get(aCameras);\n      let cameraRows = [...Array(rows)].map((n) => []);\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cols; c++) {\n          let index = r * cols + c;\n          cameraRows[r].push(cameras[index]);\n        }\n      }\n      cameraRows.splice(firstRow, 1);\n      let recombinedCameras = [];\n      for (let r = 0; r < cameraRows.length; r++) {\n        for (let c = 0; c < cols; c++) {\n          recombinedCameras.push(cameraRows[r][c]);\n        }\n      }\n\n      set(aCameras, recombinedCameras);\n      set(aImageMap, recombinedMap);\n      set(aRows, rows - 1);\n      if (h > 1) {\n        set(aActive, constrainActive([x, y, w, h - 1], cols, rows - 1));\n      } else {\n        set(aActive, constrainActive([x - 1, y, w, h], cols, rows - 1));\n      }\n    }\n  },\n});\n","import { useEffect, useRef, useState } from \"react\";\nimport {\n  RecoilRoot,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n  useRecoilSnapshot,\n  useRecoilCallback,\n} from \"recoil\";\nimport {\n  aMode,\n  sMoveActiveSelector,\n  sResizeActiveSelector,\n  sPanCamera,\n  sZoomCamera,\n  sMosaicCamera,\n  sShatterCamera,\n  sSelectAll,\n  sShakeCamera,\n  sPushCameras,\n  sPullCameras,\n  sAddCol,\n  sRemCol,\n  sAddRow,\n  sRemRow,\n  sResetZoom,\n  sActiveEscape,\n  sAddImage,\n  sSetImageMap,\n  aShowCameras,\n  aShowGrid,\n  aZoomMode,\n  aShowPreview,\n  sCopy,\n  sPaste,\n  sGridSize,\n  sAllCameras,\n  aCols,\n  aRows,\n} from \"./State.js\";\nimport { useUndo, useRedo } from \"recoil-undo\";\nimport { domLoadImage } from \"./App\";\n\nfunction Keyboard({ scene_ref, input_ref }) {\n  let [mode, setMode] = useRecoilState(aMode);\n  let moveActive = useSetRecoilState(sMoveActiveSelector);\n  let resizeActive = useSetRecoilState(sResizeActiveSelector);\n  let [zoomMode, setZoomMode] = useRecoilState(aZoomMode);\n  let [showCameras, setShowCameras] = useRecoilState(aShowCameras);\n  let [showGrid, setShowGrid] = useRecoilState(aShowGrid);\n  let [showPreview, setShowPreview] = useRecoilState(aShowPreview);\n  let zoomCamera = useSetRecoilState(sZoomCamera);\n  let panCamera = useSetRecoilState(sPanCamera);\n  let mosaicCamera = useSetRecoilState(sMosaicCamera);\n  let shatterCamera = useSetRecoilState(sShatterCamera);\n  let shakeCamera = useSetRecoilState(sShakeCamera);\n  let pushCameras = useSetRecoilState(sPushCameras);\n  let pullCameras = useSetRecoilState(sPullCameras);\n  let selectAll = useSetRecoilState(sSelectAll);\n  let setGridSize = useSetRecoilState(sGridSize);\n  let addCol = useSetRecoilState(sAddCol);\n  let remCol = useSetRecoilState(sRemCol);\n  let addRow = useSetRecoilState(sAddRow);\n  let remRow = useSetRecoilState(sRemRow);\n  let resetZoom = useSetRecoilState(sResetZoom);\n  let activeEscape = useSetRecoilState(sActiveEscape);\n  let addImage = useSetRecoilState(sAddImage);\n  let setImageMap = useSetRecoilState(sSetImageMap);\n  let km_ref = useRef({});\n  let undo = useUndo();\n  let redo = useRedo();\n  let copy = useSetRecoilState(sCopy);\n  let paste = useSetRecoilState(sPaste);\n\n  const snapshot = useRecoilCallback();\n\n  let check = [\n    \"h\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"arrowleft\",\n    \"arrowright\",\n    \"arrowup\",\n    \"arrowdown\",\n  ];\n\n  let logState = useRecoilCallback(({ snapshot }) => () => {\n    let log = {};\n    log.cols = snapshot.getLoadable(aCols).contents;\n    log.rows = snapshot.getLoadable(aCols).contents;\n    log.cameras = snapshot.getLoadable(sAllCameras).contents;\n    console.log(JSON.stringify(log));\n  });\n\n  useEffect(() => {\n    let km = km_ref.current;\n    let scene = scene_ref.current;\n    let input = input_ref.current;\n    function pressed(press, e) {\n      // temp\n      if (km[\"1\"]) {\n        logState();\n      }\n\n      if (e.ctrlKey) {\n        if (check.includes(press)) {\n          e.preventDefault();\n          let scroll_diff = [0, 0];\n          if (press === \"h\" || press === \"arrowleft\") scroll_diff[0] -= 16;\n          if (press === \"j\" || press === \"arrowdown\") scroll_diff[1] += 16;\n          if (press === \"k\" || press === \"arrowup\") scroll_diff[1] -= 16;\n          if (press === \"l\" || press === \"arrowright\") scroll_diff[0] += 16;\n          window.scrollBy(...scroll_diff);\n        }\n        return;\n      }\n\n      if (check.includes(press)) {\n        e.preventDefault();\n      }\n\n      if (km.z) undo();\n      if (km.x) redo();\n\n      if (mode === \"normal\") {\n        if (km.h) moveActive([-1, 0]);\n        if (km.j) moveActive([0, 1]);\n        if (km.k) moveActive([0, -1]);\n        if (km.l) moveActive([1, 0]);\n        if (km.arrowleft) panCamera({ scene, diff: [-8, 0] });\n        if (km.arrowright) panCamera({ scene, diff: [8, 0] });\n        if (km.arrowup) panCamera({ scene, diff: [0, -8] });\n        if (km.arrowdown) panCamera({ scene, diff: [0, 8] });\n\n        if (press === \"r\") setMode(\"resize\");\n        if (press === \"a\") selectAll();\n        if (press === \"escape\") activeEscape();\n\n        if (km[\"-\"]) zoomCamera({ scene, sign: 1, mult: 1.125 });\n        if (km[\"+\"]) zoomCamera({ scene, sign: -1, mult: 1.125 });\n        if (km[\"=\"]) zoomCamera({ scene, sign: -1, mult: 1.125 });\n\n        if (km[\"s\"]) setZoomMode(\"canvas\");\n        if (km[\"i\"]) setZoomMode(\"individual\");\n        if (km[\"t\"]) setZoomMode(\"active\");\n\n        if (press === \"o\")\n          domLoadImage(scene, input, addImage, setImageMap.bind(null, {}));\n\n        if (km.c) copy();\n        if (km.v) paste();\n\n        if (km.e) shatterCamera({ scene });\n        if (km.m) mosaicCamera({ scene });\n        if (km.b) shakeCamera({ scene });\n        if (km.u) pushCameras({ scene });\n        if (km.n) pullCameras({ scene });\n        if (km.d) resetZoom();\n\n        // view\n        if (km.p) setShowPreview(!showPreview);\n        if (km.g) setShowGrid(!showGrid);\n        if (km.f) setShowCameras(!showCameras);\n\n        // save\n        if (km.w) scene.capture = true;\n\n        // undo redo\n        if (km.z) undo();\n        if (km.y) redo();\n\n        if (km[\"(\"]) remCol();\n        if (km[\")\"]) addCol();\n        if (km[\"[\"]) remRow();\n        if (km[\"]\"]) addRow();\n\n        if (press === \"x\") setMode(\"canvasResize\");\n        return;\n      } else if (mode === \"resize\") {\n        if (km.h) resizeActive([-1, 0]);\n        if (km.j) resizeActive([0, 1]);\n        if (km.k) resizeActive([0, -1]);\n        if (km.l) resizeActive([1, 0]);\n        if (km.arrowleft) resizeActive([-1, 0]);\n        if (km.arrowdown) resizeActive([0, 1]);\n        if (km.arrowup) resizeActive([0, -1]);\n        if (km.arrowright) resizeActive([1, 0]);\n\n        if (press === \"escape\") activeEscape();\n        if (press === \"a\") selectAll();\n        if (press === \"r\") setMode(\"normal\");\n        if (km.enter) setMode(\"normal\");\n        return;\n      } else if (mode === \"canvasResize\") {\n        if (km.h) setGridSize([-1, 0]);\n        if (km.j) setGridSize([0, 1]);\n        if (km.k) setGridSize([0, -1]);\n        if (km.l) setGridSize([1, 0]);\n        if (km.arrowleft) setGridSize([-1, 0]);\n        if (km.arrowdown) setGridSize([0, 1]);\n        if (km.arrowup) setGridSize([0, -1]);\n        if (km.arrowright) setGridSize([1, 0]);\n\n        if (press === \"x\") setMode(\"normal\");\n        if (km.enter) setMode(\"normal\");\n        return;\n      }\n    }\n\n    function downHandler(e) {\n      let press = e.key.toLowerCase();\n      km[press] = true;\n      pressed(press, e);\n    }\n\n    function upHandler(e) {\n      let press = e.key.toLowerCase();\n      km[press] = false;\n    }\n\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, [mode, showGrid, showCameras, showPreview]);\n\n  return null;\n}\n\nexport default Keyboard;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  RecoilRoot,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport { draw } from \"./Gl.js\";\nimport {\n  aActive,\n  sViewports,\n  sPanCamera,\n  aCols,\n  sActiveSelector,\n  sSetImageMap,\n  sZoomCamera,\n  aMode,\n  sAddImage,\n} from \"./State.js\";\nimport { useBatching } from \"recoil-undo\";\nimport { loadImage } from \"./App\";\n\nfunction debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n      args = arguments;\n    var later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\nfunction throttle(callback, limit) {\n  var waiting = false; // Initially, we're not waiting\n  return function () {\n    // We return a throttled function\n    if (!waiting) {\n      // If we're not waiting\n      callback.apply(this, arguments); // Execute users function\n      waiting = true; // Prevent future invocations\n      setTimeout(function () {\n        // After a period of time\n        waiting = false; // And allow future invocations\n      }, limit);\n    }\n  };\n}\n\nfunction Mouse({ canvas_ref, scene_ref, scroll_ref }) {\n  let mouse_ref = useRef({\n    raw: [0, 0],\n    down: false,\n    drag_start: null,\n    scrollCheck: [0, 0],\n  });\n  let viewports = useRecoilValue(sViewports);\n  let panCamera = useSetRecoilState(sPanCamera);\n  let active = useRecoilValue(aActive);\n  let cols = useRecoilValue(aCols);\n  let mode = useRecoilValue(aMode);\n  let setActive = useSetRecoilState(sActiveSelector);\n  let zoomCamera = useSetRecoilState(sZoomCamera);\n  let addImage = useSetRecoilState(sAddImage);\n  let setImageMap = useSetRecoilState(sSetImageMap);\n  let { startBatch, endBatch } = useBatching();\n\n  useEffect(() => {\n    function getViewportFromMouse(mouse_raw) {\n      let [mx, my] = mouse_raw;\n      for (let i = 0; i < viewports.length; i++) {\n        let viewport = viewports[i];\n        let [x, y, w, h] = viewport;\n        let col = i % cols;\n        let row = Math.floor(i / cols);\n        if (mx >= x && mx <= x + w && my >= y && my <= y + h) {\n          return [col, row];\n        }\n      }\n    }\n\n    let canvas = canvas_ref.current;\n    let mouse = mouse_ref.current;\n    let scene = scene_ref.current;\n    let scroll = scroll_ref.current;\n\n    function mouseMove(e) {\n      e.preventDefault();\n      if (e.clientX !== mouse.raw[0] && e.clientY !== mouse.raw[1]) {\n        if (mouse.scroll) {\n          let dx = e.clientX - mouse.scrollCheck[0];\n          let dy = e.clientY - mouse.scrollCheck[1];\n          window.scrollBy(-dx, -dy);\n          mouse.scrollCheck = [e.clientX, e.clientY];\n          return false;\n        }\n        var rect = e.target.getBoundingClientRect();\n        var x = e.clientX - rect.left;\n        var y = e.clientY - rect.top;\n        if (mouse.down) {\n          if (mode === \"resize\") {\n            let [ax, ay, aw, ah] = active;\n            let [mx, my] = getViewportFromMouse(mouse.raw);\n            let ax2 = ax + aw - 1;\n            let ay2 = ay + ah - 1;\n            let nx = Math.min(mx, ax);\n            let ny = Math.min(my, ay);\n            let nx2 = Math.max(mx, ax2);\n            let ny2 = Math.max(my, ay2);\n            let w = nx2 - nx + 1;\n            let h = ny2 - ny + 1;\n            setActive([nx, ny, w, h]);\n          } else {\n            let dx = x - mouse.raw[0];\n            let dy = y - mouse.raw[1];\n            panCamera({ scene, diff: [dx, dy] });\n          }\n        }\n        mouse.raw = [x, y];\n      }\n    }\n    function mouseDown(e) {\n      e.preventDefault();\n      // startBatch();\n      if (e.ctrlKey) {\n        mouse.scroll = true;\n        canvas.setPointerCapture(e.pointerId);\n        mouse.scrollCheck = [e.clientX, e.clientY];\n        return false;\n      }\n      var rect = e.target.getBoundingClientRect();\n      var x = e.clientX - rect.left; //x position within the element.\n      var y = e.clientY - rect.top;\n      mouse.raw = [x, y];\n      if (mode === \"resize\") {\n        let [ax, ay, aw, ah] = active;\n        let [mcol, mrow] = getViewportFromMouse(mouse.raw);\n        setActive([mcol, mrow, 1, 1]);\n        mouse.down = true;\n      } else if (mode === \"normal\") {\n        let [ax, ay, aw, ah] = active;\n        let [mcol, mrow] = getViewportFromMouse(mouse.raw);\n        if (mcol >= ax && mcol < ax + aw && mrow >= ay && mrow < ay + ah) {\n          mouse.down = true;\n        } else {\n          setActive([\n            mcol - Math.round((aw - 1) / 2),\n            mrow - Math.round((ah - 1) / 2),\n            aw,\n            ah,\n          ]);\n          mouse.down = true;\n        }\n      }\n      canvas.setPointerCapture(e.pointerId);\n    }\n    function mouseUp(e) {\n      e.preventDefault();\n      // endBatch();\n      mouse.down = false;\n      mouse.scroll = false;\n      canvas.releasePointerCapture(e.pointerId);\n    }\n    function mouseWheel(e) {\n      e.preventDefault();\n\n      if (mode === \"normal\") {\n        let sign = e.deltaY < 0 ? -1 : 1;\n        let mult = 1;\n        let abs = Math.abs(e.deltaY);\n        if (abs > 25) {\n          mult = 1.125;\n        } else {\n          mult = 1 + 0.125 * (abs / 80);\n        }\n        zoomCamera({ scene, sign, mult });\n      }\n    }\n\n    function onDrop(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      let file = e.dataTransfer.files[0];\n      let filename = file.path ? file.path : file.name ? file.name : \"\";\n      let src = URL.createObjectURL(file);\n      loadImage(scene, src, addImage);\n    }\n\n    function onDrag(e) {\n      e.stopPropagation();\n      e.preventDefault();\n      e.dataTransfer.dropEffect = \"copy\";\n    }\n\n    function onPaste(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      console.log(\"paste\");\n      for (const item of e.clipboardData.items) {\n        if (item.type.indexOf(\"image\") < 0) {\n          continue;\n        }\n        let file = item.getAsFile();\n        let src = URL.createObjectURL(file);\n        loadImage(scene, src, addImage, setImageMap.bind(null, {}));\n      }\n    }\n\n    canvas.addEventListener(\"pointermove\", mouseMove);\n    canvas.addEventListener(\"pointerdown\", mouseDown);\n    canvas.addEventListener(\"pointerup\", mouseUp);\n    canvas.addEventListener(\"wheel\", mouseWheel, { passive: false });\n    window.addEventListener(\"paste\", onPaste);\n    window.addEventListener(\"dragover\", onDrag);\n    window.addEventListener(\"drop\", onDrop);\n    return () => {\n      canvas.removeEventListener(\"pointermove\", mouseMove);\n      canvas.removeEventListener(\"pointerdown\", mouseDown);\n      canvas.removeEventListener(\"pointerup\", mouseUp);\n      canvas.removeEventListener(\"wheel\", mouseWheel);\n      window.removeEventListener(\"paste\", onPaste);\n      window.removeEventListener(\"dragover\", onDrag);\n      window.removeEventListener(\"drop\", onDrop);\n    };\n  }, [viewports, mode, canvas_ref, active, cols]);\n\n  return null;\n}\n\nexport default Mouse;\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport {\n  RecoilRoot,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport {\n  aActive,\n  aSize,\n  aGridSize,\n  sViewports,\n  aCols,\n  aRows,\n  aMode,\n  aBarHeight,\n  aSidebarWidth,\n  aCameras,\n  sShakeCamera,\n  afCamera,\n  aImages,\n  sShatterCamera,\n  sActiveSelector,\n  sAddImage,\n  sResetZoom,\n  aImageMap,\n  sSetImageMap,\n  sMosaicCamera,\n  sAllCameras,\n  sZoomCamera,\n  aShowCameras,\n  aShowGrid,\n  aShowPreview,\n  sAddCol,\n  sRemCol,\n  sAddRow,\n  sRemRow,\n  sCopy,\n  sPaste,\n} from \"./State.js\";\nimport { KeyButton } from \"./Sidebar\";\nimport { loadImage } from \"./App\";\n\nfunction Examples({ scene_ref }) {\n  let scene = scene_ref.current;\n  let addImage = useSetRecoilState(sAddImage);\n  let zoomCamera = useSetRecoilState(sZoomCamera);\n  let setImageMap = useSetRecoilState(sSetImageMap);\n  let shatterCamera = useSetRecoilState(sShatterCamera);\n  let mosaicCamera = useSetRecoilState(sMosaicCamera);\n  let shakeCamera = useSetRecoilState(sShakeCamera);\n  let resetZoom = useSetRecoilState(sResetZoom);\n  let setActive = useSetRecoilState(sActiveSelector);\n  let addCol = useSetRecoilState(sAddCol);\n  let remCol = useSetRecoilState(sRemCol);\n  let addRow = useSetRecoilState(sAddRow);\n  let remRow = useSetRecoilState(sRemRow);\n  let copy = useSetRecoilState(sCopy);\n  let paste = useSetRecoilState(sPaste);\n\n  function loadFLW() {\n    let new_cols = 4;\n    let new_rows = 4;\n    let col_diff = new_cols - scene.cols;\n    let row_diff = new_rows - scene.rows;\n    if (col_diff > 0) {\n      for (let i = 0; i < col_diff; i++) {\n        addCol();\n      }\n    }\n    if (col_diff < 0) {\n      for (let i = 0; i < Math.abs(col_diff); i++) {\n        remCol();\n      }\n    }\n    if (row_diff > 0) {\n      for (let i = 0; i < row_diff; i++) {\n        addRow();\n      }\n    }\n    if (row_diff < 0) {\n      for (let i = 0; i < Math.abs(row_diff); i++) {\n        remRow();\n      }\n    }\n    loadImage(\n      scene,\n      process.env.PUBLIC_URL + \"/images/flw.jpg\",\n      addImage,\n      setImageMap.bind(null, { active: [0, 0, new_cols, new_rows] }),\n      () => {\n        setActive([0, 0, new_cols, new_rows]);\n        resetZoom();\n        zoomCamera({ scene, sign: 1, mult: 1.5 });\n        setActive([0, 0, new_cols / 2, new_rows]);\n        mosaicCamera({ scene });\n        setActive([2, 0, new_cols / 2, new_rows]);\n        shatterCamera({ scene });\n      }\n    );\n  }\n\n  function loadAnimals() {\n    let new_cols = 4;\n    let new_rows = 4;\n    let col_diff = new_cols - scene.cols;\n    let row_diff = new_rows - scene.rows;\n    if (col_diff > 0) {\n      for (let i = 0; i < col_diff; i++) {\n        addCol();\n      }\n    }\n    if (col_diff < 0) {\n      for (let i = 0; i < Math.abs(col_diff); i++) {\n        remCol();\n      }\n    }\n    if (row_diff > 0) {\n      for (let i = 0; i < row_diff; i++) {\n        addRow();\n      }\n    }\n    if (row_diff < 0) {\n      for (let i = 0; i < Math.abs(row_diff); i++) {\n        remRow();\n      }\n    }\n    loadImage(\n      scene,\n      process.env.PUBLIC_URL + \"/images/dog.jpg\",\n      addImage,\n      setImageMap.bind(null, { active: [0, 0, 2, 2] }),\n      () => {\n        setActive([0, 0, 2, 2]);\n        resetZoom();\n        mosaicCamera({ scene });\n      }\n    );\n    loadImage(\n      scene,\n      process.env.PUBLIC_URL + \"/images/panda.jpg\",\n      addImage,\n      setImageMap.bind(null, { active: [2, 0, 2, 4] }),\n      () => {\n        setActive([2, 0, 2, 4]);\n        resetZoom();\n        mosaicCamera({ scene });\n      }\n    );\n    loadImage(\n      scene,\n      process.env.PUBLIC_URL + \"/images/frog.jpg\",\n      addImage,\n      setImageMap.bind(null, { active: [0, 2, 2, 2] }),\n      () => {\n        setActive([0, 2, 2, 2]);\n        resetZoom();\n        mosaicCamera({ scene });\n      }\n    );\n  }\n\n  function loadTile() {\n    let new_cols = 5;\n    let new_rows = 3;\n    let col_diff = new_cols - scene.cols;\n    let row_diff = new_rows - scene.rows;\n    if (col_diff > 0) {\n      for (let i = 0; i < col_diff; i++) {\n        addCol();\n      }\n    }\n    if (col_diff < 0) {\n      for (let i = 0; i < Math.abs(col_diff); i++) {\n        remCol();\n      }\n    }\n    if (row_diff > 0) {\n      for (let i = 0; i < row_diff; i++) {\n        addRow();\n      }\n    }\n    if (row_diff < 0) {\n      for (let i = 0; i < Math.abs(row_diff); i++) {\n        remRow();\n      }\n    }\n    loadImage(\n      scene,\n      process.env.PUBLIC_URL + \"/images/iron.jpg\",\n      addImage,\n      setImageMap.bind(null, { active: [4, 0, 1, 1] }),\n      () => {\n        setActive([4, 0, 1, 1]);\n        resetZoom();\n        zoomCamera({ scene, sign: 1, mult: 2 });\n        shatterCamera({ scene });\n        copy();\n        setActive([0, 0, 1, 1]);\n        paste();\n        setActive([2, 0, 1, 1]);\n        paste();\n        setActive([1, 1, 1, 1]);\n        paste();\n        setActive([3, 1, 1, 1]);\n        paste();\n        setActive([2, 2, 1, 1]);\n        paste();\n        setActive([0, 2, 1, 1]);\n        paste();\n        setActive([2, 2, 1, 1]);\n        paste();\n        setActive([4, 2, 1, 1]);\n        paste();\n      }\n    );\n    loadImage(\n      scene,\n      process.env.PUBLIC_URL + \"/images/smithsonite.jpg\",\n      addImage,\n      setImageMap.bind(null, { active: [4, 1, 1, 1] }),\n      () => {\n        setActive([4, 1, 1, 1]);\n        resetZoom();\n        zoomCamera({ scene, sign: 1, mult: 2 });\n        shatterCamera({ scene });\n        copy();\n        setActive([1, 0, 1, 1]);\n        paste();\n        setActive([3, 0, 1, 1]);\n        paste();\n        setActive([0, 1, 1, 1]);\n        paste();\n        setActive([2, 1, 1, 1]);\n        paste();\n        setActive([1, 2, 1, 1]);\n        paste();\n        setActive([3, 2, 1, 1]);\n        paste();\n      }\n    );\n  }\n\n  return (\n    <div>\n      <KeyButton text=\"Animals\" click={loadAnimals} />\n      <KeyButton text=\"Wright\" click={loadFLW} />\n      <KeyButton text=\"Rocks\" click={loadTile} />\n    </div>\n  );\n}\n\nexport default Examples;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  aSize,\n  aGridSize,\n  sViewports,\n  aCols,\n  aRows,\n  aMode,\n  aBarHeight,\n  aSidebar,\n  aCameras,\n  afCamera,\n  aImages,\n  sAddImage,\n  aImageMap,\n  sSetImageMap,\n  aSidebarWidth,\n  sMosaicCamera,\n  sAllCameras,\n  sMoveActiveSelector,\n  sResizeActiveSelector,\n  sPanCamera,\n  sZoomCamera,\n  sShatterCamera,\n  sSelectAll,\n  sShakeCamera,\n  sPushCameras,\n  sPullCameras,\n  sAddCol,\n  sRemCol,\n  sAddRow,\n  sRemRow,\n  sResetZoom,\n  sActiveEscape,\n  aShowCameras,\n  aShowGrid,\n  aZoomMode,\n  aShowPreview,\n  sCopy,\n  sPaste,\n  sGridSize,\n} from \"./State.js\";\nimport { domLoadImage } from \"./App\";\nimport {\n  RecoilRoot,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport { useUndo, useRedo } from \"recoil-undo\";\nimport Examples from \"./Examples\";\n\nfunction Heading(props) {\n  return (\n    <div className=\"heading\" style={{ marginBottom: 8 }}>\n      {props.children.toUpperCase()}\n    </div>\n  );\n}\n\nexport function Info(props) {\n  return <div style={{ marginBottom: 8 }}>{props.children}</div>;\n}\n\nexport function Tip(props) {\n  return <div style={{ marginBottom: 8, color: \"#aaa\" }}>{props.children}</div>;\n}\n\nexport function Spacer() {\n  return <div style={{ width: \"100%\", height: 8 }}></div>;\n}\n\nexport function HSpacer() {\n  return <div style={{ width: \"100%\", height: 4 }}></div>;\n}\n\nfunction Sidebar({ scene_ref, input_ref, mobile, bypass_ref }) {\n  let sidebarWidth = useRecoilValue(aSidebarWidth);\n  let [mode, setMode] = useRecoilState(aMode);\n  let [zoomMode, setZoomMode] = useRecoilState(aZoomMode);\n  let [showCameras, setShowCameras] = useRecoilState(aShowCameras);\n  let [showGrid, setShowGrid] = useRecoilState(aShowGrid);\n  let [showPreview, setShowPreview] = useRecoilState(aShowPreview);\n  let moveActive = useSetRecoilState(sMoveActiveSelector);\n  let resizeActive = useSetRecoilState(sResizeActiveSelector);\n  let zoomCamera = useSetRecoilState(sZoomCamera);\n  let panCamera = useSetRecoilState(sPanCamera);\n  let mosaicCamera = useSetRecoilState(sMosaicCamera);\n  let shatterCamera = useSetRecoilState(sShatterCamera);\n  let shakeCamera = useSetRecoilState(sShakeCamera);\n  let pushCameras = useSetRecoilState(sPushCameras);\n  let pullCameras = useSetRecoilState(sPullCameras);\n  let selectAll = useSetRecoilState(sSelectAll);\n  let copy = useSetRecoilState(sCopy);\n  let paste = useSetRecoilState(sPaste);\n  let addCol = useSetRecoilState(sAddCol);\n  let remCol = useSetRecoilState(sRemCol);\n  let addRow = useSetRecoilState(sAddRow);\n  let remRow = useSetRecoilState(sRemRow);\n  let resetZoom = useSetRecoilState(sResetZoom);\n  let activeEscape = useSetRecoilState(sActiveEscape);\n  let addImage = useSetRecoilState(sAddImage);\n  let setImageMap = useSetRecoilState(sSetImageMap);\n  let setGridSize = useSetRecoilState(sGridSize);\n  let km_ref = useRef({});\n  let undo = useUndo();\n  let redo = useRedo();\n  let sidebarScrollRef = useRef(null);\n\n  let resize = mode === \"resize\";\n  let scene = scene_ref.current;\n  let input = input_ref.current;\n\n  let reg_style = {\n    position: \"fixed\",\n    right: 0,\n    height: \"100%\",\n    top: 0,\n    width: sidebarWidth,\n    overflow: \"auto\",\n    background: \"#222\",\n    userSelect: \"none\",\n  };\n  let mobile_style = {\n    position: \"fixed\",\n    left: 0,\n    bottom: 0,\n    height: 48 * 6,\n    overflow: \"auto\",\n    background: \"#222\",\n    userSelect: \"none\",\n  };\n\n  useEffect(() => {\n    if (sidebarScrollRef.current !== null) {\n      // put it here\n      sidebarScrollRef.current.scrollTo(0, 0);\n    }\n  }, [mode, sidebarScrollRef]);\n\n  return (\n    <div ref={sidebarScrollRef} style={mobile ? mobile_style : reg_style}>\n      <div\n        style={{\n          padding: 16,\n          userSelect: \"none\",\n        }}\n      >\n        {resize ? (\n          <div>\n            <Heading>Resize selection mode</Heading>\n            <div>\n              <ToggleKeyButton\n                text=\"Resize selection\"\n                keyname=\"r\"\n                compare={resize}\n                click={setMode.bind(null, \"normal\")}\n              />\n            </div>\n            <Info>Click and drag cells or use</Info>\n            <div>\n              <TwoKeyButton\n                text=\"narrower\"\n                keyname1=\"←\"\n                keyname2=\"h\"\n                click={resizeActive.bind(null, [-1, 0])}\n              />\n            </div>\n            <div>\n              <TwoKeyButton\n                text=\"wider\"\n                keyname1=\"→\"\n                keyname2=\"l\"\n                click={resizeActive.bind(null, [-1, 0])}\n              />\n            </div>\n            <div>\n              <TwoKeyButton\n                text=\"shorter\"\n                keyname1=\"↑\"\n                keyname2=\"k\"\n                click={resizeActive.bind(null, [0, -1])}\n              />\n            </div>\n            <div>\n              <TwoKeyButton\n                text=\"taller\"\n                keyname1=\"↓\"\n                keyname2=\"j\"\n                click={resizeActive.bind(null, [0, 1])}\n              />\n            </div>\n            <Info>Finish</Info>\n            <div>\n              <KeyButton\n                text=\"End resize\"\n                keyname=\"enter\"\n                click={setMode.bind(null, \"normal\")}\n              />\n            </div>\n            <Tip>\n              <div>TIP:</div>When resizing with the keyboard controls, the top\n              left corner of the selection is locked to its position.\n            </Tip>\n          </div>\n        ) : mode === \"canvasResize\" ? (\n          <div>\n            <Heading>Resize Canvas</Heading>\n            <ToggleKeyButton\n              text=\"Resize canvas\"\n              keyname=\"x\"\n              compare={mode === \"canvasResize\"}\n              click={setMode.bind(null, \"normal\")}\n            />\n            <div>\n              <TwoKeyButton\n                text=\"narrower\"\n                keyname1=\"←\"\n                keyname2=\"h\"\n                click={setGridSize.bind(null, [-1, 0])}\n              />\n            </div>\n            <div>\n              <TwoKeyButton\n                text=\"wider\"\n                keyname1=\"→\"\n                keyname2=\"l\"\n                click={setGridSize.bind(null, [1, 0])}\n              />\n            </div>\n            <div>\n              <TwoKeyButton\n                text=\"shorter\"\n                keyname1=\"↑\"\n                keyname2=\"k\"\n                click={setGridSize.bind(null, [0, -1])}\n              />\n            </div>\n            <div>\n              <TwoKeyButton\n                text=\"taller\"\n                keyname1=\"↓\"\n                keyname2=\"j\"\n                click={setGridSize.bind(null, [0, 1])}\n              />\n            </div>\n            <Info>Finish</Info>\n            <div>\n              <KeyButton\n                text=\"End resize\"\n                keyname=\"enter\"\n                click={setMode.bind(null, \"normal\")}\n              />\n            </div>\n            <HSpacer />\n            <Info>\n              Need to scroll the canvas? Hold Ctrl and click and drag, or use:\n            </Info>\n            <div>\n              <TwoKeyButton\n                text=\"\"\n                keyname1=\"Ctrl+←\"\n                keyname2=\"Ctrl+h\"\n                click={window.scrollBy.bind(null, -16, 0)}\n              />\n              <TwoKeyButton\n                text=\"\"\n                keyname1=\"Ctrl+→\"\n                keyname2=\"Ctrl+l\"\n                click={window.scrollBy.bind(null, 16, 0)}\n              />\n              <TwoKeyButton\n                text=\"\"\n                keyname1=\"Ctrl+↑\"\n                keyname2=\"Ctrl+k\"\n                click={window.scrollBy.bind(null, 0, -16)}\n              />\n              <TwoKeyButton\n                text=\"\"\n                keyname1=\"Ctrl+↓\"\n                keyname2=\"Ctrl+j\"\n                click={window.scrollBy.bind(null, 0, 16)}\n              />\n            </div>\n          </div>\n        ) : (\n          <div>\n            <Info>Shatter and recombine images using a grid of viewports</Info>\n            <HSpacer />\n            <Heading>Examples</Heading>\n            <Examples scene_ref={scene_ref} />\n            <HSpacer />\n            <Heading>Select</Heading>\n            <div>\n              <Info>Click a cell or move with</Info>\n              <KeyButton\n                text=\"←\"\n                keyname=\"h\"\n                click={moveActive.bind(null, [-1, 0])}\n              />\n              <KeyButton\n                text=\"↓\"\n                keyname=\"j\"\n                click={moveActive.bind(null, [0, 1])}\n              />\n              <KeyButton\n                text=\"↑\"\n                keyname=\"k\"\n                click={moveActive.bind(null, [0, -1])}\n              />\n              <KeyButton\n                text=\"→\"\n                keyname=\"l\"\n                click={moveActive.bind(null, [1, 0])}\n              />\n            </div>\n            <Info>Change selection size</Info>\n            <div>\n              <ToggleKeyButton\n                text=\"Resize selection\"\n                keyname=\"r\"\n                compare={resize}\n                click={setMode.bind(null, \"resize\")}\n              />\n              <div>\n                <KeyButton text=\"Select all\" keyname=\"a\" click={selectAll} />\n                <KeyButton text=\"Clear\" keyname=\"escape\" click={activeEscape} />\n              </div>\n            </div>\n            <HSpacer />\n            <Heading>Pan</Heading>\n            <Info>Click and drag or use</Info>\n            <div>\n              <KeyButton\n                text=\"\"\n                keyname=\"←\"\n                click={panCamera.bind(null, { scene, diff: [1, 0] })}\n              />\n              <KeyButton\n                text=\"\"\n                keyname=\"↓\"\n                click={panCamera.bind(null, { scene, diff: [0, 1] })}\n              />\n              <KeyButton\n                text=\"\"\n                keyname=\"↑\"\n                click={panCamera.bind(null, { scene, diff: [0, -1] })}\n              />\n              <KeyButton\n                text=\"\"\n                keyname=\"→\"\n                click={panCamera.bind(null, { scene, diff: [-1, 0] })}\n              />\n            </div>\n            <HSpacer />\n            <Heading>Zoom</Heading>\n            <Info>Scroll or use</Info>\n            <div>\n              <KeyButton\n                text=\"In\"\n                keyname=\"+\"\n                click={zoomCamera.bind(null, { scene, sign: -1, mult: 1.125 })}\n              />\n              <KeyButton\n                text=\"Out\"\n                keyname=\"-\"\n                click={zoomCamera.bind(null, { scene, sign: 1, mult: 1.125 })}\n              />\n            </div>\n            <Info>Zoom center</Info>\n            <div>\n              <ToggleKeyButton\n                text=\"Canvas\"\n                keyname=\"s\"\n                compare={zoomMode === \"canvas\"}\n                click={setZoomMode.bind(null, \"canvas\")}\n              />\n              <ToggleKeyButton\n                text=\"Individual\"\n                keyname=\"i\"\n                compare={zoomMode === \"individual\"}\n                click={setZoomMode.bind(null, \"individual\")}\n              />\n              <ToggleKeyButton\n                text=\"Active\"\n                keyname=\"t\"\n                compare={zoomMode === \"active\"}\n                click={setZoomMode.bind(null, \"active\")}\n              />\n            </div>\n            <HSpacer />\n            <Heading>Load image to selection</Heading>\n            <KeyButtonOnce\n              text=\"Load image\"\n              keyname=\"o\"\n              click={domLoadImage.bind(\n                null,\n                scene,\n                input,\n                addImage,\n                setImageMap.bind(null, {})\n              )}\n            />\n            <Info>\n              Or copy and paste an image\n              <br />\n              Or drag and drop an image file\n            </Info>\n            <HSpacer />\n            <Heading>Copy/Paste</Heading>\n            <HSpacer />\n            <KeyButton text=\"Copy\" keyname=\"c\" click={copy} />\n            <KeyButton text=\"Paste\" keyname=\"v\" click={paste} />\n            <Heading>More actions</Heading>\n            <KeyButton\n              text=\"Shatter\"\n              keyname=\"e\"\n              click={shatterCamera.bind(null, { scene })}\n            />\n            <KeyButton\n              text=\"Mosaic\"\n              keyname=\"m\"\n              click={mosaicCamera.bind(null, { scene })}\n            />\n            <KeyButton\n              text=\"Shake\"\n              keyname=\"b\"\n              click={shakeCamera.bind(null, { scene })}\n            />\n            <KeyButton\n              text=\"Push\"\n              keyname=\"u\"\n              click={pushCameras.bind(null, { scene })}\n            />\n            <KeyButton\n              text=\"Pull\"\n              keyname=\"n\"\n              click={pullCameras.bind(null, { scene })}\n            />\n            <KeyButton\n              text=\"Reset zoom\"\n              keyname=\"d\"\n              click={resetZoom.bind(null, scene)}\n            />\n            <HSpacer />\n            <Heading>View</Heading>\n            <ToggleKeyButton\n              text=\"Preview\"\n              keyname=\"p\"\n              compare={showPreview}\n              click={setShowPreview.bind(null, showPreview ? false : true)}\n            />\n            <ToggleKeyButton\n              text=\"Show grid\"\n              keyname=\"g\"\n              compare={showGrid}\n              disabled={showPreview ? true : false}\n              click={setShowGrid.bind(null, showGrid ? false : true)}\n            />\n            <ToggleKeyButton\n              text=\"Show camera info\"\n              keyname=\"f\"\n              disabled={showPreview ? true : false}\n              compare={showCameras}\n              click={setShowCameras.bind(null, showCameras ? false : true)}\n            />\n            <HSpacer />\n            <Heading>Save Image</Heading>\n            <HSpacer />\n            <KeyButton\n              text=\"Save image\"\n              keyname=\"w\"\n              click={() => {\n                scene.capture = true;\n              }}\n            />\n            <Heading>Undo/Redo</Heading>\n            <HSpacer />\n            <KeyButton text=\"Undo\" keyname=\"z\" click={undo} />\n            <KeyButton text=\"Redo\" keyname=\"y\" click={redo} />\n            <Heading>Change Grid</Heading>\n            <HSpacer />\n            <div>\n              {`Cols: `}\n              <KeyButton text=\"Remove\" keyname=\"(\" click={remCol} />\n              <KeyButton text=\"Add\" keyname=\")\" click={addCol} />\n            </div>\n            <div>\n              {`Rows: `}\n              <KeyButton text=\"Remove\" keyname=\"[\" click={remRow} />\n              <KeyButton text=\"Add\" keyname=\"]\" click={addRow} />\n            </div>\n            <Heading>Resize Canvas</Heading>\n            <ToggleKeyButton\n              text=\"Resize canvas\"\n              keyname=\"x\"\n              compare={mode === \"canvasResize\"}\n              click={setMode.bind(null, \"canvasResize\")}\n            />\n            <HSpacer />\n            <Tip>Need to scroll the canvas? Hold Ctrl and click and drag.</Tip>\n            <HSpacer />\n            <Heading>More Info</Heading>\n            <HSpacer />\n            <Info>\n              <a href=\"https://constraint.systems\" target=\"_blank\">\n                Constraint Systems\n              </a>\n            </Info>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n\nexport function KeyButton(props) {\n  let $button_ref = useRef(null);\n  let { text, click, keyname } = props;\n  window.intervalCheck = null;\n\n  useEffect(() => {\n    let $button = $button_ref.current;\n    let time;\n    function runInterval() {\n      window.intervalCheck = setInterval(click, 60);\n    }\n    function pointerDown(e) {\n      clearInterval(window.intervalCheck);\n      time = setTimeout(runInterval, 250);\n      click();\n      $button.setPointerCapture(e.pointerId);\n    }\n    function pointerUp(e) {\n      clearTimeout(time);\n      clearInterval(window.intervalCheck);\n      $button.releasePointerCapture(e.pointerId);\n    }\n    $button.addEventListener(\"pointerdown\", pointerDown);\n    $button.addEventListener(\"pointerup\", pointerUp);\n    return () => {\n      $button.removeEventListener(\"pointerdown\", pointerDown);\n      $button.removeEventListener(\"pointerup\", pointerUp);\n    };\n  }, []);\n\n  return (\n    <div ref={$button_ref} className=\"button\" role=\"button\">\n      {text !== \"\" ? text + \" \" : \"\"}\n      {keyname ? <span className=\"keyname\">{keyname}</span> : \"\"}\n    </div>\n  );\n}\n\nexport function KeyButtonOnce(props) {\n  let $button_ref = useRef(null);\n  let { text, click, keyname } = props;\n\n  return (\n    <div ref={$button_ref} className=\"button\" role=\"button\" onClick={click}>\n      {text !== \"\" ? text + \" \" : \"\"}\n      <span className=\"keyname\">{keyname}</span>\n    </div>\n  );\n}\n\nexport function TwoKeyButton(props) {\n  let $button_ref = useRef(null);\n  let { text, click, keyname1, keyname2 } = props;\n\n  useEffect(() => {\n    let $button = $button_ref.current;\n    let time;\n    let interval;\n    function runInterval() {\n      interval = setInterval(click, 60);\n    }\n    function pointerDown(e) {\n      $button.setPointerCapture(e.pointerId);\n      time = setTimeout(runInterval, 250);\n      click();\n    }\n    function pointerUp(e) {\n      $button.releasePointerCapture(e.pointerId);\n      clearTimeout(time);\n      clearInterval(interval);\n    }\n    $button.addEventListener(\"pointerdown\", pointerDown);\n    $button.addEventListener(\"pointerup\", pointerUp);\n    return () => {\n      $button.removeEventListener(\"pointerdown\", pointerDown);\n      $button.removeEventListener(\"pointerup\", pointerUp);\n    };\n  }, []);\n\n  return (\n    <div ref={$button_ref} className=\"button\" role=\"button\">\n      {text !== \"\" ? text + \" \" : \"\"}\n      <span className=\"keyname\">{keyname1}</span>{\" \"}\n      <span className=\"keytip\">or</span>{\" \"}\n      <span className=\"keyname\">{keyname2}</span>\n    </div>\n  );\n}\n\nexport function ToggleKeyButton(props) {\n  let $button_ref = useRef(null);\n  let { text, click, keyname, compare, disabled } = props;\n\n  // toggle requires click every time TODO: switch to mousedown for consistent response?\n  return (\n    <div\n      ref={$button_ref}\n      className={`button toggle ${compare ? \"active\" : \"\"} ${\n        disabled ? \"disabled\" : \"\"\n      }`}\n      role=\"button\"\n      onClick={click}\n    >\n      {text !== \"\" ? text + \" \" : \"\"}\n      {keyname ? <span className=\"keyname\">{keyname}</span> : null}\n    </div>\n  );\n}\n","export function generateQuadPositions(x0, y0, x1, y1) {\n  return [\n    [x0, y0],\n    [x1, y0],\n    [x0, y1],\n    [x0, y1],\n    [x1, y0],\n    [x1, y1],\n  ];\n}\n\nexport function initImageQuad(scene, $img, x0, y0, x1, y1) {\n  let regl = scene.regl;\n  return regl({\n    frag: `\n    precision mediump float;\n    uniform vec4 color;\n    uniform sampler2D texture;\n    varying vec2 vuv;\n    void main () {\n      gl_FragColor = texture2D(texture, vuv);\n    }`,\n    vert: `\n    precision mediump float;\n    attribute vec2 position;\n    attribute vec2 uv;\n    varying vec2 vuv;\n    uniform mat4 view_projection;\n    void main () {\n      vuv = uv;\n      gl_Position = view_projection * vec4(position, 0, 1);\n    }`,\n    attributes: {\n      position: generateQuadPositions(x0, y0, x1, y1),\n      uv: [\n        [0, 0],\n        [1, 0],\n        [0, 1],\n        [0, 1],\n        [1, 0],\n        [1, 1],\n      ],\n    },\n    uniforms: {\n      texture: regl.texture($img),\n      color: [1, 1, 0, 1],\n      view_projection: regl.prop(\"view_projection\"),\n    },\n    count: 6,\n  });\n}\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport {\n  RecoilRoot,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport {\n  aActive,\n  aSize,\n  aGridSize,\n  sViewports,\n  aCols,\n  aRows,\n  aMode,\n  aBarHeight,\n  aSidebarWidth,\n  aCameras,\n  afCamera,\n  aImages,\n  sAddImage,\n  aImageMap,\n  sSetImageMap,\n  sMosaicCamera,\n  sAllCameras,\n  aShowCameras,\n  aShowGrid,\n  aShowPreview,\n} from \"./State.js\";\nimport {\n  setProjectionMatrices,\n  setViewMatrix,\n  getWorldFromPx,\n  setViewMatrices,\n} from \"./gl_utils\";\nimport {\n  RecoilUndoRoot,\n  useUndo,\n  useRedo,\n  useIsTrackingHistory,\n} from \"recoil-undo\";\nimport Keyboard from \"./Keyboard\";\nimport Mouse from \"./Mouse\";\nimport MobileBar from \"./Mobile\";\nimport Sidebar from \"./Sidebar\";\nimport REGL from \"regl\";\nimport { base_zoom, mobile } from \"./constants\";\nimport { initImageQuad } from \"./shaders\";\n\nlet id_counter = 0;\nexport function getID() {\n  id_counter++;\n  return id_counter;\n}\n\nfunction Root() {\n  let scene_ref = useRef({\n    viewports: [],\n    projection: [],\n    inverse_projection: [],\n    views: [],\n    view_projections: [],\n    inverse_view_projections: [],\n    image_map: [],\n    image_draws: [],\n    capture: false,\n  });\n  let input_ref = useRef(null);\n  let scroll_ref = useRef(null);\n  let bypass_ref = useRef(false);\n\n  return (\n    <RecoilRoot>\n      <RecoilUndoRoot trackingByDefault={false}>\n        <input\n          style={{ display: \"none\" }}\n          type=\"file\"\n          accept=\"image/*\"\n          ref={input_ref}\n        />\n        <SizeObserver />\n        <div style={{ position: \"relative\", marginLeft: 4, marginTop: 4 }}>\n          <Canvas\n            scroll_ref={scroll_ref}\n            scene_ref={scene_ref}\n            bypass_ref={bypass_ref}\n          />\n          <Layers />\n        </div>\n        <Actions\n          scene_ref={scene_ref}\n          input_ref={input_ref}\n          bypass_ref={bypass_ref}\n        />\n        <Keyboard\n          scene_ref={scene_ref}\n          input_ref={input_ref}\n          bypass_ref={bypass_ref}\n        />\n      </RecoilUndoRoot>\n    </RecoilRoot>\n  );\n}\n\nexport default Root;\n\nfunction Actions({ input_ref, scene_ref, bypass_ref }) {\n  let [w, h] = useRecoilValue(aSize);\n  return w < mobile ? (\n    <Sidebar\n      mobile={true}\n      scene_ref={scene_ref}\n      input_ref={input_ref}\n      bypass_ref={bypass_ref}\n    />\n  ) : (\n    <Sidebar\n      scene_ref={scene_ref}\n      input_ref={input_ref}\n      bypass_ref={bypass_ref}\n    />\n  );\n}\n\nfunction Layers() {\n  let showPreview = useRecoilValue(aShowPreview);\n  let showCameras = useRecoilValue(aShowCameras);\n  let showGrid = useRecoilValue(aShowGrid);\n  let mode = useRecoilValue(aMode);\n  return (\n    <React.Fragment>\n      {showPreview ? null : showCameras ? <ShowCameras /> : null}\n      {showPreview ? null : showGrid ? <ShowGrid /> : null}\n      {showPreview || mode === \"canvasResize\" ? null : <ShowActive />}\n      {mode === \"canvasResize\" ? <CanvasResize /> : null}\n    </React.Fragment>\n  );\n}\n\nfunction SizeObserver() {\n  let setSize = useSetRecoilState(aSize);\n  let setGridSize = useSetRecoilState(aGridSize);\n  let barHeight = useRecoilValue(aBarHeight);\n  let sidebarWidth = useRecoilValue(aSidebarWidth);\n\n  useEffect(() => {\n    function setNewSize() {\n      let w = window.innerWidth;\n      let h = window.innerHeight;\n      setSize([w, h]);\n      if (w < mobile) {\n        setGridSize([w - 8, h - 48 * 6 - 8]);\n      } else {\n        setGridSize([w - sidebarWidth - 8, h - barHeight - 12]);\n      }\n    }\n    // setSize([4000 - sidebarWidth - 8, 4000 - barHeight - 12]);\n    // setGridSize([4000 - sidebarWidth - 8, 4000 - barHeight - 12]);\n    setNewSize();\n    window.addEventListener(\"resize\", setNewSize);\n    return () => {\n      window.removeEventListener(\"resize\", setNewSize);\n    };\n  }, [setSize, setGridSize]);\n\n  return null;\n}\n\nfunction CanvasResize() {\n  let cols = useRecoilValue(aCols);\n  let rows = useRecoilValue(aRows);\n  let viewports = useRecoilValue(sViewports);\n\n  let v = viewports[0];\n  return (\n    <div\n      className=\"active-outline resize-canvas\"\n      style={{\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: cols * v[2],\n        height: rows * v[3],\n        pointerEvents: \"none\",\n        touchEvents: \"none\",\n      }}\n    ></div>\n  );\n}\n\nfunction ShowActive() {\n  let active = useRecoilValue(aActive);\n  let viewports = useRecoilValue(sViewports);\n  let mode = useRecoilValue(aMode);\n\n  let v = viewports[0];\n  return (\n    <div\n      className=\"active-outline\"\n      style={{\n        position: \"absolute\",\n        left: active[0] * v[2],\n        top: active[1] * v[3],\n        width: active[2] * v[2],\n        height: active[3] * v[3],\n        pointerEvents: \"none\",\n        touchEvents: \"none\",\n      }}\n    >\n      {mode === \"resize\" ? (\n        <Fragment>\n          <div\n            style={{\n              position: \"absolute\",\n              left: 0,\n              top: 0,\n              background: \"#111\",\n              width: 17,\n              height: 17,\n              borderBottom: \"solid 1px white\",\n              borderRight: \"solid 1px white\",\n            }}\n          ></div>\n          <div\n            style={{\n              position: \"absolute\",\n              right: 0,\n              bottom: 0,\n              background: \"#111\",\n              width: 17,\n              height: 17,\n              borderTop: \"solid 1px white\",\n              borderLeft: \"solid 1px white\",\n            }}\n          ></div>\n        </Fragment>\n      ) : null}\n    </div>\n  );\n}\n\nfunction ShowCameras() {\n  let viewports = useRecoilValue(sViewports);\n  let camera_ids = useRecoilValue(aCameras);\n\n  return viewports.map((camera, i) => {\n    let v = viewports[i];\n    let id = camera_ids[i];\n    return (\n      <div\n        key={`camera${i}`}\n        style={{\n          position: \"absolute\",\n          left: v[0],\n          top: v[1],\n          width: v[2],\n          height: v[3],\n          pointerEvents: \"none\",\n          touchEvents: \"none\",\n        }}\n      >\n        <CameraRead id={id} />\n      </div>\n    );\n  });\n}\n\nfunction ShowGrid() {\n  let [width, height] = useRecoilValue(aGridSize);\n  let cols = useRecoilValue(aCols);\n  let rows = useRecoilValue(aRows);\n  let showPreview = useRecoilValue(aShowPreview);\n  let vw = Math.floor(width / cols);\n  let vh = Math.floor(height / rows);\n  let crop_width = vw * cols;\n  let crop_height = vh * rows;\n  let bl = 160;\n  return (\n    <div>\n      {cols > 0\n        ? [...Array(cols - 1)].map((_, c) => {\n            return (\n              <React.Fragment key={`colback_${c}`}>\n                <div\n                  style={{\n                    pointerEvents: \"none\",\n                    touchEvents: \"none\",\n                    position: \"absolute\",\n                    left: (c + 1) * vw - 1.5,\n                    top: 0,\n                    width: 3,\n                    height: crop_height,\n                    background: \"rgba(20,20,20,0.5)\",\n                  }}\n                ></div>\n                <div\n                  style={{\n                    pointerEvents: \"none\",\n                    touchEvents: \"none\",\n                    position: \"absolute\",\n                    left: (c + 1) * vw - 0.5,\n                    top: 0,\n                    width: 1,\n                    height: crop_height,\n                    background: \"rgba(\" + [bl, bl, bl] + \",0.5)\",\n                  }}\n                ></div>\n              </React.Fragment>\n            );\n          })\n        : null}\n\n      {rows > 0\n        ? [...Array(rows - 1)].map((_, r) => {\n            return (\n              <React.Fragment key={`rowback_${r}`}>\n                <div\n                  style={{\n                    pointerEvents: \"none\",\n                    touchEvents: \"none\",\n                    position: \"absolute\",\n                    left: 0,\n                    top: (r + 1) * vh - 1.5,\n                    height: 3,\n                    width: crop_width,\n                    background: \"rgba(20,20,20,0.5)\",\n                  }}\n                ></div>\n                <div\n                  style={{\n                    pointerEvents: \"none\",\n                    touchEvents: \"none\",\n                    position: \"absolute\",\n                    left: 0,\n                    top: (r + 1) * vh - 0.5,\n                    height: 1,\n                    width: crop_width,\n                    background: \"rgba(\" + [bl, bl, bl] + \",0.5)\",\n                  }}\n                ></div>\n              </React.Fragment>\n            );\n          })\n        : null}\n    </div>\n  );\n}\n\nfunction CameraRead({ id }) {\n  let camera = useRecoilValue(afCamera(id));\n  return (\n    <div\n      className=\"outline-text\"\n      style={{\n        position: \"absolute\",\n        fontSize: 12,\n        left: 0,\n        bottom: 8,\n        paddingLeft: 8,\n        paddingRight: 8,\n        color: \"#eee\",\n        userSelect: \"none\",\n        width: \"100%\",\n        overflow: \"hidden\",\n      }}\n    >\n      {camera\n        .map((v) => Math.round((v + Number.EPSILON) * 100) / 100)\n        .join(\",\")}\n    </div>\n  );\n}\n\nexport function loadImage(scene, src, addImage, presetImageMap, callback) {\n  let $img = new Image();\n  $img.onload = function () {\n    // might be a race condition\n    scene.pixel = getWorldFromPx(scene, 1, base_zoom);\n    let w = $img.width * scene.pixel;\n    let h = $img.height * scene.pixel;\n    let x0 = -w / 2;\n    let y0 = h / 2;\n    let x1 = w / 2;\n    let y1 = -h / 2;\n    let place = [x0, y0, x1, y1];\n    addImage($img);\n    let drawImage = initImageQuad(scene, $img, ...place);\n    scene.image_draws.push(drawImage);\n    if (presetImageMap !== undefined) presetImageMap();\n    if (callback !== undefined) {\n      callback();\n    }\n  };\n  $img.src = src;\n}\n\nexport function domLoadImage(scene, input, addImage, presetImageMap) {\n  function handleChange(e) {\n    for (let item of this.files) {\n      if (item.type.indexOf(\"image\") < 0) {\n        continue;\n      }\n      let src = URL.createObjectURL(item);\n      loadImage(scene, src, addImage, presetImageMap);\n      input.value = null;\n    }\n    input.removeEventListener(\"change\", handleChange);\n  }\n  input.addEventListener(\"change\", handleChange);\n\n  input.dispatchEvent(\n    new MouseEvent(\"click\", {\n      bubbles: true,\n      cancelable: true,\n      view: window,\n    })\n  );\n}\n\nfunction Canvas({ scene_ref, scroll_ref, bypass_ref }) {\n  let gridSize = useRecoilValue(aGridSize);\n  let viewports = useRecoilValue(sViewports);\n  let cols = useRecoilValue(aCols);\n  let rows = useRecoilValue(aRows);\n  let sidebarWidth = useRecoilValue(aSidebarWidth);\n  let allCameras = useRecoilValue(sAllCameras);\n  let images = useRecoilValue(aImages);\n  let barHeight = useRecoilValue(aBarHeight);\n  let addImage = useSetRecoilState(sAddImage);\n  let [imageMap, rawSetImageMap] = useRecoilState(aImageMap);\n  let setImageMap = useSetRecoilState(sSetImageMap);\n  let mosaicCamera = useSetRecoilState(sMosaicCamera);\n  let [cameras, setCameras] = useRecoilState(aCameras);\n  let canvas_ref = useRef(null);\n  let regl_ref = useRef(null);\n  let size = useRecoilValue(aSize);\n  let [loaded, setLoaded] = useState(false);\n  const { getIsTrackingHistory, setIsTrackingHistory } = useIsTrackingHistory();\n\n  useEffect(() => {\n    if (gridSize[0] !== null && !loaded) {\n      let regl = REGL(canvas_ref.current);\n      regl_ref.current = regl;\n      let scene = scene_ref.current;\n      scene.regl = regl;\n\n      // init cameras and scene arrays\n      let camera_ids = [];\n      for (let i = 0; i < cols * rows; i++) {\n        let id = getID();\n        camera_ids.push(id);\n        scene.views.push([]);\n        scene.view_projections.push([]);\n        scene.inverse_view_projections.push([]);\n        scene.image_map.push(null);\n      }\n      setCameras(camera_ids);\n      scene.cameras = [...Array(cols * rows)].map((v) => [0, 0, 5]);\n\n      rawSetImageMap([...Array(cols * rows)].map((v) => null));\n\n      setScene(scene, cols, rows, gridSize, viewports, allCameras);\n\n      loadImage(\n        scene,\n        process.env.PUBLIC_URL + \"/images/ozymandias-screens-watchmen.jpg\",\n        addImage,\n        setImageMap.bind(null, { active: [0, 0, cols, rows] }),\n        () => {\n          mosaicCamera({ scene, active: [0, 0, cols, rows] });\n          setIsTrackingHistory(true);\n        }\n      );\n\n      let gl = canvas_ref.current.getContext(\"webgl\");\n      gl.enable(gl.SCISSOR_TEST);\n\n      regl.frame(({ tick }) => {\n        regl.clear({\n          color: [0, 0, 0, 1],\n        });\n        if (scene.viewports.length > 0) {\n          let vy_offset =\n            scene.gridSize[1] - scene.viewports[0][3] * scene.rows;\n          for (let i = 0; i < scene.viewports.length; i++) {\n            let viewport = scene.viewports[i];\n            let [vx, vy, vw, vh] = viewport;\n            // gap at bottom instead of top\n            vy = vy + vy_offset;\n            gl.viewport(vx, vy, vw, vh);\n            gl.scissor(vx, vy, vw, vh);\n            regl.clear({\n              color: [0, 0, 0, 1],\n            });\n            if (scene.image_map.length > 0 && scene.image_map[i] !== null) {\n              let draw = scene.image_draws[scene.image_map[i]];\n              draw({\n                view_projection: scene.view_projections[i],\n              });\n            }\n          }\n        }\n\n        if (scene.capture) {\n          scene.capture = false;\n          let save_canvas = document.createElement(\"canvas\");\n          save_canvas.width = scene.viewports[0][2] * scene.cols;\n          save_canvas.height = scene.viewports[0][3] * scene.rows;\n          let sx = save_canvas.getContext(\"2d\");\n          sx.drawImage(gl.canvas, 0, 0);\n          let link = document.createElement(\"a\");\n          save_canvas.toBlob(function (blob) {\n            link.setAttribute(\n              \"download\",\n              \"fracture-\" + Math.round(new Date().getTime() / 1000) + \".png\"\n            );\n            link.setAttribute(\"href\", URL.createObjectURL(blob));\n            link.dispatchEvent(\n              new MouseEvent(`click`, {\n                bubbles: true,\n                cancelable: true,\n                view: window,\n              })\n            );\n          });\n        }\n      });\n      setLoaded(true);\n    }\n  }, [gridSize, loaded]);\n\n  useEffect(() => {\n    if (loaded) {\n      let scene = scene_ref.current;\n      scene.image_map = imageMap;\n    }\n  }, [loaded, imageMap]);\n\n  useEffect(() => {\n    if (loaded) {\n      setScene(scene_ref.current, cols, rows, gridSize, viewports, allCameras);\n    }\n  }, [loaded, cols, rows, gridSize, viewports, cameras]);\n\n  return gridSize[0] !== null ? (\n    <div\n      ref={scroll_ref}\n      style={{\n        width: gridSize[0] + (size[0] > mobile ? sidebarWidth : 0) + 4,\n        height: gridSize[1] + (size[0] > mobile ? barHeight + 8 : 4),\n        userSelect: \"none\",\n        touchAction: \"none\",\n      }}\n    >\n      <canvas width={gridSize[0]} height={gridSize[1]} ref={canvas_ref}>\n        {cameras.map((id, index) => (\n          <CanvasCamera key={id} id={id} index={index} scene_ref={scene_ref} />\n        ))}\n        <Mouse\n          canvas_ref={canvas_ref}\n          scene_ref={scene_ref}\n          scroll_ref={scroll_ref}\n        />\n      </canvas>\n    </div>\n  ) : null;\n}\n\nexport function setScene(scene, cols, rows, gridSize, viewports, allCameras) {\n  let rawCameras = allCameras.slice();\n  let invertedCameras = [];\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < cols; c++) {\n      let index = r * cols + c;\n      let invert_row = rows - 1 - Math.floor(index / cols);\n      let inverted = invert_row * cols + (index % cols);\n      invertedCameras.push(rawCameras[inverted]);\n    }\n  }\n\n  scene.cameras = invertedCameras;\n  scene.gridSize = gridSize;\n  scene.cols = cols;\n  scene.rows = rows;\n  scene.viewports = viewports;\n\n  setProjectionMatrices(scene);\n\n  scene.views = [];\n  scene.view_projections = [];\n  scene.inverse_view_projections = [];\n  for (let i = 0; i < cols * rows; i++) {\n    scene.views.push([]);\n    scene.view_projections.push([]);\n    scene.inverse_view_projections.push([]);\n  }\n  setViewMatrices(scene);\n}\n\nfunction CanvasCamera({ id, index, scene_ref }) {\n  let camera = useRecoilValue(afCamera(id));\n\n  useEffect(() => {\n    let scene = scene_ref.current;\n\n    let invert_row = scene.rows - 1 - Math.floor(index / scene.cols);\n    let inverted = invert_row * scene.cols + (index % scene.cols);\n\n    scene.cameras[inverted] = camera;\n    setViewMatrix(scene, inverted);\n  }, [id, index, camera, scene_ref]);\n\n  return null;\n}\n\nfunction ReadActive() {\n  let [x, y, w, h] = useRecoilValue(aActive);\n  let [gw, gh] = useRecoilValue(aGridSize);\n  let size = useRecoilValue(aSize);\n  let mode = useRecoilValue(aMode);\n  return size[0] > mobile ? (\n    <div style={{ position: \"fixed\", left: 0, bottom: 0, display: \"flex\" }}>\n      {mode === \"canvasResize\" ? (\n        <div style={{ background: \"#111\", padding: 8 }}>\n          {gw}x{gh}\n        </div>\n      ) : (\n        <div style={{ background: \"#111\", padding: 8 }}>\n          □ {x},{y} {w}x{h}\n        </div>\n      )}\n    </div>\n  ) : null;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./font.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}